
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000420  00800100  00001e0e  00001ea2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800520  00800520  000022c2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000022c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002320  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00002360  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002041  00000000  00000000  00002498  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a87  00000000  00000000  000044d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c37  00000000  00000000  00004f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000468  00000000  00000000  00005b98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e9  00000000  00000000  00006000  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001839  00000000  00000000  000065e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00007e22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b2 02 	jmp	0x564	; 0x564 <__ctors_end>
       4:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       8:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      10:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      14:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      18:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      1c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      20:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      24:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      28:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      2c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      30:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      34:	0c 94 db 08 	jmp	0x11b6	; 0x11b6 <__vector_13>
      38:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      3c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      40:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      44:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      48:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      4c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      50:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      54:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      58:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      5c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      60:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      64:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 7c       	andi	r16, 0xC0	; 192
      6e:	da f2       	brmi	.-74     	; 0x26 <__FUSE_REGION_LENGTH__+0x23>
      70:	da 7c       	andi	r29, 0xCA	; 202
      72:	7c d6       	rcall	.+3320   	; 0xd6c <checkInput+0xf8>
      74:	f2 d6       	rcall	.+3556   	; 0xe5a <update_score+0x36>
      76:	7c 38       	cpi	r23, 0x8C	; 140
      78:	7c 3e       	cpi	r23, 0xEC	; 236
      7a:	7c 38       	cpi	r23, 0x8C	; 140
      7c:	18 3c       	cpi	r17, 0xC8	; 200
      7e:	7e 3c       	cpi	r23, 0xCE	; 206
      80:	18 38       	cpi	r17, 0x88	; 136
      82:	ea be       	out	0x3a, r14	; 58
      84:	ea 38       	cpi	r30, 0x8A	; 138
      86:	38 7a       	andi	r19, 0xA8	; 168
      88:	fe 7a       	andi	r31, 0xAE	; 174
      8a:	38 00       	.word	0x0038	; ????
      8c:	18 3c       	cpi	r17, 0xC8	; 200
      8e:	18 00       	.word	0x0018	; ????
      90:	ff e7       	ldi	r31, 0x7F	; 127
      92:	c3 e7       	ldi	r28, 0x73	; 115
      94:	ff 00       	.word	0x00ff	; ????
      96:	18 24       	eor	r1, r8
      98:	18 00       	.word	0x0018	; ????
      9a:	ff e7       	ldi	r31, 0x7F	; 127
      9c:	db e7       	ldi	r29, 0x7B	; 123
      9e:	ff 0c       	add	r15, r15
      a0:	12 5c       	subi	r17, 0xC2	; 194
      a2:	60 70       	andi	r22, 0x00	; 0
      a4:	64 94       	.word	0x9464	; ????
      a6:	9e 94 64 02 	call	0x2404c8	; 0x2404c8 <__TEXT_REGION_LENGTH__+0x2384c8>
      aa:	fe a0       	ldd	r15, Y+38	; 0x26
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	02 fe       	sbrs	r0, 2
      b0:	a0 a4       	ldd	r10, Z+40	; 0x28
      b2:	fc 5a       	subi	r31, 0xAC	; 172
      b4:	3c e7       	ldi	r19, 0x7C	; 124
      b6:	3c 5a       	subi	r19, 0xAC	; 172
      b8:	fe 7c       	andi	r31, 0xCE	; 206
      ba:	38 38       	cpi	r19, 0x88	; 136
      bc:	10 10       	cpse	r1, r0
      be:	38 38       	cpi	r19, 0x88	; 136
      c0:	7c fe       	.word	0xfe7c	; ????
      c2:	28 44       	sbci	r18, 0x48	; 72
      c4:	fe 44       	sbci	r31, 0x4E	; 78
      c6:	28 fa       	.word	0xfa28	; ????
      c8:	fa 00       	.word	0x00fa	; ????
      ca:	fa fa       	.word	0xfafa	; ????
      cc:	60 90 fe 80 	lds	r6, 0x80FE	; 0x8080fe <__bss_end+0x7bce>
      d0:	fe 00       	.word	0x00fe	; ????
      d2:	66 91       	elpm	r22, Z
      d4:	a9 56       	subi	r26, 0x69	; 105
      d6:	06 06       	cpc	r0, r22
      d8:	06 06       	cpc	r0, r22
      da:	06 29       	or	r16, r6
      dc:	45 ff       	sbrs	r20, 5
      de:	45 29       	or	r20, r5
      e0:	10 20       	and	r1, r0
      e2:	7e 20       	and	r7, r14
      e4:	10 08       	sbc	r1, r0
      e6:	04 7e       	andi	r16, 0xE4	; 228
      e8:	04 08       	sbc	r0, r4
      ea:	10 10       	cpse	r1, r0
      ec:	54 38       	cpi	r21, 0x84	; 132
      ee:	10 10       	cpse	r1, r0
      f0:	38 54       	subi	r19, 0x48	; 72
      f2:	10 10       	cpse	r1, r0
      f4:	78 08       	sbc	r7, r8
      f6:	08 08       	sbc	r0, r8
      f8:	08 30       	cpi	r16, 0x08	; 8
      fa:	78 30       	cpi	r23, 0x08	; 8
      fc:	78 30       	cpi	r23, 0x08	; 8
      fe:	0c 1c       	adc	r0, r12
     100:	7c 1c       	adc	r7, r12
     102:	0c 60       	ori	r16, 0x0C	; 12
     104:	70 7c       	andi	r23, 0xC0	; 192
     106:	70 60       	ori	r23, 0x00	; 0
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	00 fa       	bst	r0, 0
     110:	00 00       	nop
     112:	00 e0       	ldi	r16, 0x00	; 0
     114:	00 e0       	ldi	r16, 0x00	; 0
     116:	00 28       	or	r0, r0
     118:	fe 28       	or	r15, r14
     11a:	fe 28       	or	r15, r14
     11c:	24 54       	subi	r18, 0x44	; 68
     11e:	fe 54       	subi	r31, 0x4E	; 78
     120:	48 c4       	rjmp	.+2192   	; 0x9b2 <fillrect+0x40>
     122:	c8 10       	cpse	r12, r8
     124:	26 46       	sbci	r18, 0x66	; 102
     126:	6c 92       	st	X, r6
     128:	6a 04       	cpc	r6, r10
     12a:	0a 00       	.word	0x000a	; ????
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	c0 00       	.word	0x00c0	; ????
     130:	00 38       	cpi	r16, 0x80	; 128
     132:	44 82       	std	Z+4, r4	; 0x04
     134:	00 00       	nop
     136:	82 44       	sbci	r24, 0x42	; 66
     138:	38 00       	.word	0x0038	; ????
     13a:	54 38       	cpi	r21, 0x84	; 132
     13c:	fe 38       	cpi	r31, 0x8E	; 142
     13e:	54 10       	cpse	r5, r4
     140:	10 7c       	andi	r17, 0xC0	; 192
     142:	10 10       	cpse	r1, r0
     144:	00 01       	movw	r0, r0
     146:	0e 0c       	add	r0, r14
     148:	00 10       	cpse	r0, r0
     14a:	10 10       	cpse	r1, r0
     14c:	10 10       	cpse	r1, r0
     14e:	00 00       	nop
     150:	06 06       	cpc	r0, r22
     152:	00 04       	cpc	r0, r0
     154:	08 10       	cpse	r0, r8
     156:	20 40       	sbci	r18, 0x00	; 0
     158:	7c 8a       	std	Y+20, r7	; 0x14
     15a:	92 a2       	std	Z+34, r9	; 0x22
     15c:	7c 00       	.word	0x007c	; ????
     15e:	42 fe       	sbrs	r4, 2
     160:	02 00       	.word	0x0002	; ????
     162:	4e 92       	st	-X, r4
     164:	92 92       	st	-Z, r9
     166:	62 84       	ldd	r6, Z+10	; 0x0a
     168:	82 92       	st	-Z, r8
     16a:	b2 cc       	rjmp	.-1692   	; 0xfffffad0 <__eeprom_end+0xff7efad0>
     16c:	18 28       	or	r1, r8
     16e:	48 fe       	.word	0xfe48	; ????
     170:	08 e4       	ldi	r16, 0x48	; 72
     172:	a2 a2       	std	Z+34, r10	; 0x22
     174:	a2 9c       	mul	r10, r2
     176:	3c 52       	subi	r19, 0x2C	; 44
     178:	92 92       	st	-Z, r9
     17a:	8c 82       	std	Y+4, r8	; 0x04
     17c:	84 88       	ldd	r8, Z+20	; 0x14
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	6c 92       	st	X, r6
     182:	92 92       	st	-Z, r9
     184:	6c 62       	ori	r22, 0x2C	; 44
     186:	92 92       	st	-Z, r9
     188:	94 78       	andi	r25, 0x84	; 132
     18a:	00 00       	nop
     18c:	28 00       	.word	0x0028	; ????
     18e:	00 00       	nop
     190:	02 2c       	mov	r0, r2
     192:	00 00       	nop
     194:	00 10       	cpse	r0, r0
     196:	28 44       	sbci	r18, 0x48	; 72
     198:	82 28       	or	r8, r2
     19a:	28 28       	or	r2, r8
     19c:	28 28       	or	r2, r8
     19e:	00 82       	st	Z, r0
     1a0:	44 28       	or	r4, r4
     1a2:	10 40       	sbci	r17, 0x00	; 0
     1a4:	80 9a       	sbi	0x10, 0	; 16
     1a6:	90 60       	ori	r25, 0x00	; 0
     1a8:	7c 82       	std	Y+4, r7	; 0x04
     1aa:	ba 9a       	sbi	0x17, 2	; 23
     1ac:	72 3e       	cpi	r23, 0xE2	; 226
     1ae:	48 88       	ldd	r4, Y+16	; 0x10
     1b0:	48 3e       	cpi	r20, 0xE8	; 232
     1b2:	fe 92       	st	-X, r15
     1b4:	92 92       	st	-Z, r9
     1b6:	6c 7c       	andi	r22, 0xCC	; 204
     1b8:	82 82       	std	Z+2, r8	; 0x02
     1ba:	82 44       	sbci	r24, 0x42	; 66
     1bc:	fe 82       	std	Y+6, r15	; 0x06
     1be:	82 82       	std	Z+2, r8	; 0x02
     1c0:	7c fe       	.word	0xfe7c	; ????
     1c2:	92 92       	st	-Z, r9
     1c4:	92 82       	std	Z+2, r9	; 0x02
     1c6:	fe 90       	ld	r15, -X
     1c8:	90 90 80 7c 	lds	r9, 0x7C80	; 0x807c80 <__bss_end+0x7750>
     1cc:	82 82       	std	Z+2, r8	; 0x02
     1ce:	8a ce       	rjmp	.-748    	; 0xfffffee4 <__eeprom_end+0xff7efee4>
     1d0:	fe 10       	cpse	r15, r14
     1d2:	10 10       	cpse	r1, r0
     1d4:	fe 00       	.word	0x00fe	; ????
     1d6:	82 fe       	sbrs	r8, 2
     1d8:	82 00       	.word	0x0082	; ????
     1da:	04 02       	muls	r16, r20
     1dc:	82 fc       	sbrc	r8, 2
     1de:	80 fe       	sbrs	r8, 0
     1e0:	10 28       	or	r1, r0
     1e2:	44 82       	std	Z+4, r4	; 0x04
     1e4:	fe 02       	muls	r31, r30
     1e6:	02 02       	muls	r16, r18
     1e8:	02 fe       	sbrs	r0, 2
     1ea:	40 38       	cpi	r20, 0x80	; 128
     1ec:	40 fe       	sbrs	r4, 0
     1ee:	fe 20       	and	r15, r14
     1f0:	10 08       	sbc	r1, r0
     1f2:	fe 7c       	andi	r31, 0xCE	; 206
     1f4:	82 82       	std	Z+2, r8	; 0x02
     1f6:	82 7c       	andi	r24, 0xC2	; 194
     1f8:	fe 90       	ld	r15, -X
     1fa:	90 90 60 7c 	lds	r9, 0x7C60	; 0x807c60 <__bss_end+0x7730>
     1fe:	82 8a       	std	Z+18, r8	; 0x12
     200:	84 7a       	andi	r24, 0xA4	; 164
     202:	fe 90       	ld	r15, -X
     204:	98 94       	clz
     206:	62 64       	ori	r22, 0x42	; 66
     208:	92 92       	st	-Z, r9
     20a:	92 4c       	sbci	r25, 0xC2	; 194
     20c:	c0 80       	ld	r12, Z
     20e:	fe 80       	ldd	r15, Y+6	; 0x06
     210:	c0 fc       	sbrc	r12, 0
     212:	02 02       	muls	r16, r18
     214:	02 fc       	sbrc	r0, 2
     216:	f8 04       	cpc	r15, r8
     218:	02 04       	cpc	r0, r2
     21a:	f8 fc       	.word	0xfcf8	; ????
     21c:	02 1c       	adc	r0, r2
     21e:	02 fc       	sbrc	r0, 2
     220:	c6 28       	or	r12, r6
     222:	10 28       	or	r1, r0
     224:	c6 c0       	rjmp	.+396    	; 0x3b2 <__trampolines_end+0x34a>
     226:	20 1e       	adc	r2, r16
     228:	20 c0       	rjmp	.+64     	; 0x26a <__trampolines_end+0x202>
     22a:	86 9a       	sbi	0x10, 6	; 16
     22c:	92 b2       	in	r9, 0x12	; 18
     22e:	c2 00       	.word	0x00c2	; ????
     230:	fe 82       	std	Y+6, r15	; 0x06
     232:	82 82       	std	Z+2, r8	; 0x02
     234:	40 20       	and	r4, r0
     236:	10 08       	sbc	r1, r0
     238:	04 00       	.word	0x0004	; ????
     23a:	82 82       	std	Z+2, r8	; 0x02
     23c:	82 fe       	sbrs	r8, 2
     23e:	20 40       	sbci	r18, 0x00	; 0
     240:	80 40       	sbci	r24, 0x00	; 0
     242:	20 02       	muls	r18, r16
     244:	02 02       	muls	r16, r18
     246:	02 02       	muls	r16, r18
     248:	00 c0       	rjmp	.+0      	; 0x24a <__trampolines_end+0x1e2>
     24a:	e0 10       	cpse	r14, r0
     24c:	00 04       	cpc	r0, r0
     24e:	2a 2a       	or	r2, r26
     250:	1e 02       	muls	r17, r30
     252:	fe 14       	cp	r15, r14
     254:	22 22       	and	r2, r18
     256:	1c 1c       	adc	r1, r12
     258:	22 22       	and	r2, r18
     25a:	22 14       	cp	r2, r2
     25c:	1c 22       	and	r1, r28
     25e:	22 14       	cp	r2, r2
     260:	fe 1c       	adc	r15, r14
     262:	2a 2a       	or	r2, r26
     264:	2a 18       	sub	r2, r10
     266:	00 10       	cpse	r0, r0
     268:	7e 90       	ld	r7, -X
     26a:	40 18       	sub	r4, r0
     26c:	25 25       	eor	r18, r5
     26e:	39 1e       	adc	r3, r25
     270:	fe 10       	cpse	r15, r14
     272:	20 20       	and	r2, r0
     274:	1e 00       	.word	0x001e	; ????
     276:	22 be       	out	0x32, r2	; 50
     278:	02 00       	.word	0x0002	; ????
     27a:	04 02       	muls	r16, r20
     27c:	02 bc       	out	0x22, r0	; 34
     27e:	00 fe       	sbrs	r0, 0
     280:	08 14       	cp	r0, r8
     282:	22 00       	.word	0x0022	; ????
     284:	00 82       	st	Z, r0
     286:	fe 02       	muls	r31, r30
     288:	00 3e       	cpi	r16, 0xE0	; 224
     28a:	20 1e       	adc	r2, r16
     28c:	20 1e       	adc	r2, r16
     28e:	3e 10       	cpse	r3, r14
     290:	20 20       	and	r2, r0
     292:	1e 1c       	adc	r1, r14
     294:	22 22       	and	r2, r18
     296:	22 1c       	adc	r2, r2
     298:	3f 18       	sub	r3, r15
     29a:	24 24       	eor	r2, r4
     29c:	18 18       	sub	r1, r8
     29e:	24 24       	eor	r2, r4
     2a0:	18 3f       	cpi	r17, 0xF8	; 248
     2a2:	3e 10       	cpse	r3, r14
     2a4:	20 20       	and	r2, r0
     2a6:	10 12       	cpse	r1, r16
     2a8:	2a 2a       	or	r2, r26
     2aa:	2a 24       	eor	r2, r10
     2ac:	20 20       	and	r2, r0
     2ae:	fc 22       	and	r15, r28
     2b0:	24 3c       	cpi	r18, 0xC4	; 196
     2b2:	02 02       	muls	r16, r18
     2b4:	04 3e       	cpi	r16, 0xE4	; 228
     2b6:	38 04       	cpc	r3, r8
     2b8:	02 04       	cpc	r0, r2
     2ba:	38 3c       	cpi	r19, 0xC8	; 200
     2bc:	02 0c       	add	r0, r2
     2be:	02 3c       	cpi	r16, 0xC2	; 194
     2c0:	22 14       	cp	r2, r2
     2c2:	08 14       	cp	r0, r8
     2c4:	22 32       	cpi	r18, 0x22	; 34
     2c6:	09 09       	sbc	r16, r9
     2c8:	09 3e       	cpi	r16, 0xE9	; 233
     2ca:	22 26       	eor	r2, r18
     2cc:	2a 32       	cpi	r18, 0x2A	; 42
     2ce:	22 00       	.word	0x0022	; ????
     2d0:	10 6c       	ori	r17, 0xC0	; 192
     2d2:	82 00       	.word	0x0082	; ????
     2d4:	00 00       	nop
     2d6:	ee 00       	.word	0x00ee	; ????
     2d8:	00 00       	nop
     2da:	82 6c       	ori	r24, 0xC2	; 194
     2dc:	10 00       	.word	0x0010	; ????
     2de:	40 80       	ld	r4, Z
     2e0:	40 20       	and	r4, r0
     2e2:	40 3c       	cpi	r20, 0xC0	; 192
     2e4:	64 c4       	rjmp	.+2248   	; 0xbae <readTouchY+0x18>
     2e6:	64 3c       	cpi	r22, 0xC4	; 196
     2e8:	78 85       	ldd	r23, Y+8	; 0x08
     2ea:	85 86       	std	Z+13, r8	; 0x0d
     2ec:	48 5c       	subi	r20, 0xC8	; 200
     2ee:	02 02       	muls	r16, r18
     2f0:	04 5e       	subi	r16, 0xE4	; 228
     2f2:	1c 2a       	or	r1, r28
     2f4:	2a aa       	std	Y+50, r2	; 0x32
     2f6:	9a 84       	ldd	r9, Y+10	; 0x0a
     2f8:	aa aa       	std	Y+50, r10	; 0x32
     2fa:	9e 82       	std	Y+6, r9	; 0x06
     2fc:	84 2a       	or	r8, r20
     2fe:	2a 1e       	adc	r2, r26
     300:	82 84       	ldd	r8, Z+10	; 0x0a
     302:	aa 2a       	or	r10, r26
     304:	1e 02       	muls	r17, r30
     306:	04 2a       	or	r0, r20
     308:	aa 9e       	mul	r10, r26
     30a:	02 30       	cpi	r16, 0x02	; 2
     30c:	78 4a       	sbci	r23, 0xA8	; 168
     30e:	4e 48       	sbci	r20, 0x8E	; 142
     310:	9c aa       	std	Y+52, r9	; 0x34
     312:	aa aa       	std	Y+50, r10	; 0x32
     314:	9a 9c       	mul	r9, r10
     316:	2a 2a       	or	r2, r26
     318:	2a 9a       	sbi	0x05, 2	; 5
     31a:	9c aa       	std	Y+52, r9	; 0x34
     31c:	2a 2a       	or	r2, r26
     31e:	1a 00       	.word	0x001a	; ????
     320:	00 a2       	std	Z+32, r0	; 0x20
     322:	3e 82       	std	Y+6, r3	; 0x06
     324:	00 40       	sbci	r16, 0x00	; 0
     326:	a2 be       	out	0x32, r10	; 50
     328:	42 00       	.word	0x0042	; ????
     32a:	80 a2       	std	Z+32, r8	; 0x20
     32c:	3e 02       	muls	r19, r30
     32e:	0f 94 24 94 	call	0x32848	; 0x32848 <__TEXT_REGION_LENGTH__+0x2a848>
     332:	0f 0f       	add	r16, r31
     334:	14 a4       	ldd	r1, Z+44	; 0x2c
     336:	14 0f       	add	r17, r20
     338:	3e 2a       	or	r3, r30
     33a:	aa a2       	std	Y+34, r10	; 0x22
     33c:	00 04       	cpc	r0, r0
     33e:	2a 2a       	or	r2, r26
     340:	3e 2a       	or	r3, r30
     342:	3e 50       	subi	r19, 0x0E	; 14
     344:	90 fe       	sbrs	r9, 0
     346:	92 4c       	sbci	r25, 0xC2	; 194
     348:	92 92       	st	-Z, r9
     34a:	92 4c       	sbci	r25, 0xC2	; 194
     34c:	4c 12       	cpse	r4, r28
     34e:	12 12       	cpse	r1, r18
     350:	4c 4c       	sbci	r20, 0xCC	; 204
     352:	52 12       	cpse	r5, r18
     354:	12 0c       	add	r1, r2
     356:	5c 82       	std	Y+4, r5	; 0x04
     358:	82 84       	ldd	r8, Z+10	; 0x0a
     35a:	5e 5c       	subi	r21, 0xCE	; 206
     35c:	42 02       	muls	r20, r18
     35e:	04 1e       	adc	r0, r20
     360:	00 b9       	out	0x00, r16	; 0
     362:	05 05       	cpc	r16, r5
     364:	be 9c       	mul	r11, r14
     366:	22 22       	and	r2, r18
     368:	22 9c       	mul	r2, r2
     36a:	bc 02       	muls	r27, r28
     36c:	02 02       	muls	r16, r18
     36e:	bc 3c       	cpi	r27, 0xCC	; 204
     370:	24 ff       	sbrs	r18, 4
     372:	24 24       	eor	r2, r4
     374:	12 7e       	andi	r17, 0xE2	; 226
     376:	92 c2       	rjmp	.+1316   	; 0x89c <drawline+0x82>
     378:	66 d4       	rcall	.+2252   	; 0xc46 <reset_ball+0x38>
     37a:	f4 3f       	cpi	r31, 0xF4	; 244
     37c:	f4 d4       	rcall	.+2536   	; 0xd66 <checkInput+0xf2>
     37e:	ff 90       	pop	r15
     380:	94 6f       	ori	r25, 0xF4	; 244
     382:	04 03       	mulsu	r16, r20
     384:	11 7e       	andi	r17, 0xE1	; 225
     386:	90 c0       	rjmp	.+288    	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
     388:	04 2a       	or	r0, r20
     38a:	2a 9e       	mul	r2, r26
     38c:	82 00       	.word	0x0082	; ????
     38e:	00 22       	and	r0, r16
     390:	be 82       	std	Y+6, r11	; 0x06
     392:	0c 12       	cpse	r0, r28
     394:	12 52       	subi	r17, 0x22	; 34
     396:	4c 1c       	adc	r4, r12
     398:	02 02       	muls	r16, r18
     39a:	44 5e       	subi	r20, 0xE4	; 228
     39c:	00 5e       	subi	r16, 0xE0	; 224
     39e:	50 50       	subi	r21, 0x00	; 0
     3a0:	4e be       	out	0x3e, r4	; 62
     3a2:	b0 98       	cbi	0x16, 0	; 22
     3a4:	8c be       	out	0x3c, r8	; 60
     3a6:	64 94       	.word	0x9464	; ????
     3a8:	94 f4       	brge	.+36     	; 0x3ce <__trampolines_end+0x366>
     3aa:	14 64       	ori	r17, 0x44	; 68
     3ac:	94 94       	.word	0x9494	; ????
     3ae:	94 64       	ori	r25, 0x44	; 68
     3b0:	0c 12       	cpse	r0, r28
     3b2:	b2 02       	muls	r27, r18
     3b4:	04 1c       	adc	r0, r4
     3b6:	10 10       	cpse	r1, r0
     3b8:	10 10       	cpse	r1, r0
     3ba:	10 10       	cpse	r1, r0
     3bc:	10 10       	cpse	r1, r0
     3be:	1c f4       	brge	.+6      	; 0x3c6 <__trampolines_end+0x35e>
     3c0:	08 13       	cpse	r16, r24
     3c2:	35 5d       	subi	r19, 0xD5	; 213
     3c4:	f4 08       	sbc	r15, r4
     3c6:	14 2c       	mov	r1, r4
     3c8:	5f 00       	.word	0x005f	; ????
     3ca:	00 de       	rcall	.-1024   	; 0xffffffcc <__eeprom_end+0xff7effcc>
     3cc:	00 00       	nop
     3ce:	10 28       	or	r1, r0
     3d0:	54 28       	or	r5, r4
     3d2:	44 44       	sbci	r20, 0x44	; 68
     3d4:	28 54       	subi	r18, 0x48	; 72
     3d6:	28 10       	cpse	r2, r8
     3d8:	55 00       	.word	0x0055	; ????
     3da:	aa 00       	.word	0x00aa	; ????
     3dc:	55 55       	subi	r21, 0x55	; 85
     3de:	aa 55       	subi	r26, 0x5A	; 90
     3e0:	aa 55       	subi	r26, 0x5A	; 90
     3e2:	aa 55       	subi	r26, 0x5A	; 90
     3e4:	aa 55       	subi	r26, 0x5A	; 90
     3e6:	aa 00       	.word	0x00aa	; ????
     3e8:	00 00       	nop
     3ea:	ff 00       	.word	0x00ff	; ????
     3ec:	08 08       	sbc	r0, r8
     3ee:	08 ff       	.word	0xff08	; ????
     3f0:	00 28       	or	r0, r0
     3f2:	28 28       	or	r2, r8
     3f4:	ff 00       	.word	0x00ff	; ????
     3f6:	08 08       	sbc	r0, r8
     3f8:	ff 00       	.word	0x00ff	; ????
     3fa:	ff 08       	sbc	r15, r15
     3fc:	08 0f       	add	r16, r24
     3fe:	08 0f       	add	r16, r24
     400:	28 28       	or	r2, r8
     402:	28 3f       	cpi	r18, 0xF8	; 248
     404:	00 28       	or	r0, r0
     406:	28 ef       	ldi	r18, 0xF8	; 248
     408:	00 ff       	sbrs	r16, 0
     40a:	00 00       	nop
     40c:	ff 00       	.word	0x00ff	; ????
     40e:	ff 28       	or	r15, r15
     410:	28 2f       	mov	r18, r24
     412:	20 3f       	cpi	r18, 0xF0	; 240
     414:	28 28       	or	r2, r8
     416:	e8 08       	sbc	r14, r8
     418:	f8 08       	sbc	r15, r8
     41a:	08 f8       	.word	0xf808	; ????
     41c:	08 f8       	.word	0xf808	; ????
     41e:	28 28       	or	r2, r8
     420:	28 f8       	.word	0xf828	; ????
     422:	00 08       	sbc	r0, r0
     424:	08 08       	sbc	r0, r8
     426:	0f 00       	.word	0x000f	; ????
     428:	00 00       	nop
     42a:	00 f8       	bld	r0, 0
     42c:	08 08       	sbc	r0, r8
     42e:	08 08       	sbc	r0, r8
     430:	f8 08       	sbc	r15, r8
     432:	08 08       	sbc	r0, r8
     434:	08 0f       	add	r16, r24
     436:	08 00       	.word	0x0008	; ????
     438:	00 00       	nop
     43a:	ff 08       	sbc	r15, r15
     43c:	08 08       	sbc	r0, r8
     43e:	08 08       	sbc	r0, r8
     440:	08 08       	sbc	r0, r8
     442:	08 08       	sbc	r0, r8
     444:	ff 08       	sbc	r15, r15
     446:	00 00       	nop
     448:	00 ff       	sbrs	r16, 0
     44a:	28 00       	.word	0x0028	; ????
     44c:	00 ff       	sbrs	r16, 0
     44e:	00 ff       	sbrs	r16, 0
     450:	00 00       	nop
     452:	f8 08       	sbc	r15, r8
     454:	e8 00       	.word	0x00e8	; ????
     456:	00 3f       	cpi	r16, 0xF0	; 240
     458:	20 2f       	mov	r18, r16
     45a:	28 28       	or	r2, r8
     45c:	e8 08       	sbc	r14, r8
     45e:	e8 28       	or	r14, r8
     460:	28 2f       	mov	r18, r24
     462:	20 2f       	mov	r18, r16
     464:	00 00       	nop
     466:	ff 00       	.word	0x00ff	; ????
     468:	ef 28       	or	r14, r15
     46a:	28 28       	or	r2, r8
     46c:	28 28       	or	r2, r8
     46e:	28 28       	or	r2, r8
     470:	ef 00       	.word	0x00ef	; ????
     472:	ef 28       	or	r14, r15
     474:	28 28       	or	r2, r8
     476:	e8 28       	or	r14, r8
     478:	08 08       	sbc	r0, r8
     47a:	f8 08       	sbc	r15, r8
     47c:	f8 28       	or	r15, r8
     47e:	28 28       	or	r2, r8
     480:	2f 28       	or	r2, r15
     482:	08 08       	sbc	r0, r8
     484:	0f 08       	sbc	r0, r15
     486:	0f 00       	.word	0x000f	; ????
     488:	00 f8       	bld	r0, 0
     48a:	08 f8       	.word	0xf808	; ????
     48c:	00 00       	nop
     48e:	00 f8       	bld	r0, 0
     490:	28 00       	.word	0x0028	; ????
     492:	00 00       	nop
     494:	3f 28       	or	r3, r15
     496:	00 00       	nop
     498:	0f 08       	sbc	r0, r15
     49a:	0f 08       	sbc	r0, r15
     49c:	08 ff       	.word	0xff08	; ????
     49e:	08 ff       	.word	0xff08	; ????
     4a0:	28 28       	or	r2, r8
     4a2:	28 ff       	.word	0xff28	; ????
     4a4:	28 08       	sbc	r2, r8
     4a6:	08 08       	sbc	r0, r8
     4a8:	f8 00       	.word	0x00f8	; ????
     4aa:	00 00       	nop
     4ac:	00 0f       	add	r16, r16
     4ae:	08 ff       	.word	0xff08	; ????
     4b0:	ff ff       	.word	0xffff	; ????
     4b2:	ff ff       	.word	0xffff	; ????
     4b4:	0f 0f       	add	r16, r31
     4b6:	0f 0f       	add	r16, r31
     4b8:	0f ff       	.word	0xff0f	; ????
     4ba:	ff ff       	.word	0xffff	; ????
     4bc:	00 00       	nop
     4be:	00 00       	nop
     4c0:	00 ff       	sbrs	r16, 0
     4c2:	ff f0       	brie	.+62     	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
     4c4:	f0 f0       	brcs	.+60     	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
     4c6:	f0 f0       	brcs	.+60     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     4c8:	1c 22       	and	r1, r28
     4ca:	22 1c       	adc	r2, r2
     4cc:	22 3e       	cpi	r18, 0xE2	; 226
     4ce:	54 54       	subi	r21, 0x44	; 68
     4d0:	7c 28       	or	r7, r12
     4d2:	7e 40       	sbci	r23, 0x0E	; 14
     4d4:	40 60       	ori	r20, 0x00	; 0
     4d6:	60 40       	sbci	r22, 0x00	; 0
     4d8:	7e 40       	sbci	r23, 0x0E	; 14
     4da:	7e 40       	sbci	r23, 0x0E	; 14
     4dc:	c6 aa       	std	Z+54, r12	; 0x36
     4de:	92 82       	std	Z+2, r9	; 0x02
     4e0:	c6 1c       	adc	r12, r6
     4e2:	22 22       	and	r2, r18
     4e4:	3c 20       	and	r3, r12
     4e6:	02 7e       	andi	r16, 0xE2	; 226
     4e8:	04 78       	andi	r16, 0x84	; 132
     4ea:	04 60       	ori	r16, 0x04	; 4
     4ec:	40 7e       	andi	r20, 0xE0	; 224
     4ee:	40 40       	sbci	r20, 0x00	; 0
     4f0:	99 a5       	ldd	r25, Y+41	; 0x29
     4f2:	e7 a5       	ldd	r30, Z+47	; 0x2f
     4f4:	99 38       	cpi	r25, 0x89	; 137
     4f6:	54 92       	xch	Z, r5
     4f8:	54 38       	cpi	r21, 0x84	; 132
     4fa:	32 4e       	sbci	r19, 0xE2	; 226
     4fc:	80 4e       	sbci	r24, 0xE0	; 224
     4fe:	32 0c       	add	r3, r2
     500:	52 b2       	in	r5, 0x12	; 18
     502:	b2 0c       	add	r11, r2
     504:	0c 12       	cpse	r0, r28
     506:	1e 12       	cpse	r1, r30
     508:	0c 3d       	cpi	r16, 0xDC	; 220
     50a:	46 5a       	subi	r20, 0xA6	; 166
     50c:	62 bc       	out	0x22, r6	; 34
     50e:	7c 92       	st	X, r7
     510:	92 92       	st	-Z, r9
     512:	00 7e       	andi	r16, 0xE0	; 224
     514:	80 80       	ld	r8, Z
     516:	80 7e       	andi	r24, 0xE0	; 224
     518:	54 54       	subi	r21, 0x44	; 68
     51a:	54 54       	subi	r21, 0x44	; 68
     51c:	54 22       	and	r5, r20
     51e:	22 fa       	bst	r2, 2
     520:	22 22       	and	r2, r18
     522:	02 8a       	std	Z+18, r0	; 0x12
     524:	52 22       	and	r5, r18
     526:	02 02       	muls	r16, r18
     528:	22 52       	subi	r18, 0x22	; 34
     52a:	8a 02       	muls	r24, r26
     52c:	00 00       	nop
     52e:	ff 80       	ldd	r15, Y+7	; 0x07
     530:	c0 07       	cpc	r28, r16
     532:	01 ff       	sbrs	r16, 1
     534:	00 00       	nop
     536:	10 10       	cpse	r1, r0
     538:	d6 d6       	rcall	.+3500   	; 0x12e6 <__divsf3_pse+0x6>
     53a:	10 6c       	ori	r17, 0xC0	; 192
     53c:	48 6c       	ori	r20, 0xC8	; 200
     53e:	24 6c       	ori	r18, 0xC4	; 196
     540:	60 f0       	brcs	.+24     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
     542:	90 f0       	brcs	.+36     	; 0x568 <__ctors_end+0x4>
     544:	60 00       	.word	0x0060	; ????
     546:	00 18       	sub	r0, r0
     548:	18 00       	.word	0x0018	; ????
     54a:	00 00       	nop
     54c:	08 08       	sbc	r0, r8
     54e:	00 0c       	add	r0, r0
     550:	02 ff       	sbrs	r16, 2
     552:	80 80       	ld	r8, Z
     554:	00 f8       	bld	r0, 0
     556:	80 80       	ld	r8, Z
     558:	78 00       	.word	0x0078	; ????
     55a:	98 b8       	out	0x08, r9	; 8
     55c:	e8 48       	sbci	r30, 0x88	; 136
     55e:	00 3c       	cpi	r16, 0xC0	; 192
     560:	3c 3c       	cpi	r19, 0xCC	; 204
     562:	3c 00       	.word	0x003c	; ????

00000564 <__ctors_end>:
     564:	11 24       	eor	r1, r1
     566:	1f be       	out	0x3f, r1	; 63
     568:	cf ef       	ldi	r28, 0xFF	; 255
     56a:	d8 e0       	ldi	r29, 0x08	; 8
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	cd bf       	out	0x3d, r28	; 61

00000570 <__do_copy_data>:
     570:	15 e0       	ldi	r17, 0x05	; 5
     572:	a0 e0       	ldi	r26, 0x00	; 0
     574:	b1 e0       	ldi	r27, 0x01	; 1
     576:	ee e0       	ldi	r30, 0x0E	; 14
     578:	fe e1       	ldi	r31, 0x1E	; 30
     57a:	02 c0       	rjmp	.+4      	; 0x580 <__do_copy_data+0x10>
     57c:	05 90       	lpm	r0, Z+
     57e:	0d 92       	st	X+, r0
     580:	a0 32       	cpi	r26, 0x20	; 32
     582:	b1 07       	cpc	r27, r17
     584:	d9 f7       	brne	.-10     	; 0x57c <__do_copy_data+0xc>

00000586 <__do_clear_bss>:
     586:	25 e0       	ldi	r18, 0x05	; 5
     588:	a0 e2       	ldi	r26, 0x20	; 32
     58a:	b5 e0       	ldi	r27, 0x05	; 5
     58c:	01 c0       	rjmp	.+2      	; 0x590 <.do_clear_bss_start>

0000058e <.do_clear_bss_loop>:
     58e:	1d 92       	st	X+, r1

00000590 <.do_clear_bss_start>:
     590:	a0 33       	cpi	r26, 0x30	; 48
     592:	b2 07       	cpc	r27, r18
     594:	e1 f7       	brne	.-8      	; 0x58e <.do_clear_bss_loop>
     596:	0e 94 8c 08 	call	0x1118	; 0x1118 <main>
     59a:	0c 94 05 0f 	jmp	0x1e0a	; 0x1e0a <_exit>

0000059e <__bad_interrupt>:
     59e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000005a2 <lcd_command>:
			} else {
			d = d + 4*x; // was + 6
		}
		dC(buff, x0, y0, x, y, color);
	}
}
     5a2:	5c 98       	cbi	0x0b, 4	; 11
     5a4:	27 e0       	ldi	r18, 0x07	; 7
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	5d 98       	cbi	0x0b, 5	; 11
     5ac:	ac 01       	movw	r20, r24
     5ae:	02 2e       	mov	r0, r18
     5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <lcd_command+0x14>
     5b2:	55 95       	asr	r21
     5b4:	47 95       	ror	r20
     5b6:	0a 94       	dec	r0
     5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <lcd_command+0x10>
     5ba:	40 ff       	sbrs	r20, 0
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <lcd_command+0x20>
     5be:	5e 9a       	sbi	0x0b, 6	; 11
     5c0:	01 c0       	rjmp	.+2      	; 0x5c4 <lcd_command+0x22>
     5c2:	5e 98       	cbi	0x0b, 6	; 11
     5c4:	5d 9a       	sbi	0x0b, 5	; 11
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	31 09       	sbc	r19, r1
     5ca:	78 f7       	brcc	.-34     	; 0x5aa <lcd_command+0x8>
     5cc:	08 95       	ret

000005ce <lcd_init>:
     5ce:	56 9a       	sbi	0x0a, 6	; 10
     5d0:	55 9a       	sbi	0x0a, 5	; 10
     5d2:	54 9a       	sbi	0x0a, 4	; 10
     5d4:	53 9a       	sbi	0x0a, 3	; 10
     5d6:	52 9a       	sbi	0x0a, 2	; 10
     5d8:	5a 98       	cbi	0x0b, 2	; 11
     5da:	5b 98       	cbi	0x0b, 3	; 11
     5dc:	2f e9       	ldi	r18, 0x9F	; 159
     5de:	86 e8       	ldi	r24, 0x86	; 134
     5e0:	91 e0       	ldi	r25, 0x01	; 1
     5e2:	21 50       	subi	r18, 0x01	; 1
     5e4:	80 40       	sbci	r24, 0x00	; 0
     5e6:	90 40       	sbci	r25, 0x00	; 0
     5e8:	e1 f7       	brne	.-8      	; 0x5e2 <lcd_init+0x14>
     5ea:	00 c0       	rjmp	.+0      	; 0x5ec <lcd_init+0x1e>
     5ec:	00 00       	nop
     5ee:	5b 9a       	sbi	0x0b, 3	; 11
     5f0:	83 ea       	ldi	r24, 0xA3	; 163
     5f2:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     5f6:	80 ea       	ldi	r24, 0xA0	; 160
     5f8:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     5fc:	80 ec       	ldi	r24, 0xC0	; 192
     5fe:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     602:	80 e4       	ldi	r24, 0x40	; 64
     604:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     608:	8c e2       	ldi	r24, 0x2C	; 44
     60a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     60e:	83 ed       	ldi	r24, 0xD3	; 211
     610:	90 e3       	ldi	r25, 0x30	; 48
     612:	01 97       	sbiw	r24, 0x01	; 1
     614:	f1 f7       	brne	.-4      	; 0x612 <lcd_init+0x44>
     616:	00 c0       	rjmp	.+0      	; 0x618 <lcd_init+0x4a>
     618:	00 00       	nop
     61a:	8e e2       	ldi	r24, 0x2E	; 46
     61c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     620:	83 ed       	ldi	r24, 0xD3	; 211
     622:	90 e3       	ldi	r25, 0x30	; 48
     624:	01 97       	sbiw	r24, 0x01	; 1
     626:	f1 f7       	brne	.-4      	; 0x624 <lcd_init+0x56>
     628:	00 c0       	rjmp	.+0      	; 0x62a <lcd_init+0x5c>
     62a:	00 00       	nop
     62c:	8f e2       	ldi	r24, 0x2F	; 47
     62e:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     632:	83 ec       	ldi	r24, 0xC3	; 195
     634:	99 e0       	ldi	r25, 0x09	; 9
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <lcd_init+0x68>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <lcd_init+0x6e>
     63c:	00 00       	nop
     63e:	86 e2       	ldi	r24, 0x26	; 38
     640:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     644:	08 95       	ret

00000646 <lcd_data>:
     646:	5c 9a       	sbi	0x0b, 4	; 11
     648:	27 e0       	ldi	r18, 0x07	; 7
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	5d 98       	cbi	0x0b, 5	; 11
     650:	ac 01       	movw	r20, r24
     652:	02 2e       	mov	r0, r18
     654:	02 c0       	rjmp	.+4      	; 0x65a <lcd_data+0x14>
     656:	55 95       	asr	r21
     658:	47 95       	ror	r20
     65a:	0a 94       	dec	r0
     65c:	e2 f7       	brpl	.-8      	; 0x656 <lcd_data+0x10>
     65e:	40 ff       	sbrs	r20, 0
     660:	02 c0       	rjmp	.+4      	; 0x666 <lcd_data+0x20>
     662:	5e 9a       	sbi	0x0b, 6	; 11
     664:	01 c0       	rjmp	.+2      	; 0x668 <lcd_data+0x22>
     666:	5e 98       	cbi	0x0b, 6	; 11
     668:	5d 9a       	sbi	0x0b, 5	; 11
     66a:	21 50       	subi	r18, 0x01	; 1
     66c:	31 09       	sbc	r19, r1
     66e:	78 f7       	brcc	.-34     	; 0x64e <lcd_data+0x8>
     670:	08 95       	ret

00000672 <lcd_set_brightness>:
     672:	cf 93       	push	r28
     674:	c8 2f       	mov	r28, r24
     676:	81 e8       	ldi	r24, 0x81	; 129
     678:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     67c:	8c 2f       	mov	r24, r28
     67e:	8f 73       	andi	r24, 0x3F	; 63
     680:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     684:	cf 91       	pop	r28
     686:	08 95       	ret

00000688 <write_buffer>:
     688:	cf 92       	push	r12
     68a:	df 92       	push	r13
     68c:	ef 92       	push	r14
     68e:	ff 92       	push	r15
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	0f 2e       	mov	r0, r31
     69a:	f4 e0       	ldi	r31, 0x04	; 4
     69c:	ef 2e       	mov	r14, r31
     69e:	f5 e0       	ldi	r31, 0x05	; 5
     6a0:	ff 2e       	mov	r15, r31
     6a2:	f0 2d       	mov	r31, r0
     6a4:	ec 01       	movw	r28, r24
     6a6:	0f 2e       	mov	r0, r31
     6a8:	f4 e1       	ldi	r31, 0x14	; 20
     6aa:	cf 2e       	mov	r12, r31
     6ac:	f5 e0       	ldi	r31, 0x05	; 5
     6ae:	df 2e       	mov	r13, r31
     6b0:	f0 2d       	mov	r31, r0
     6b2:	f7 01       	movw	r30, r14
     6b4:	80 81       	ld	r24, Z
     6b6:	f2 e0       	ldi	r31, 0x02	; 2
     6b8:	ef 0e       	add	r14, r31
     6ba:	f1 1c       	adc	r15, r1
     6bc:	80 6b       	ori	r24, 0xB0	; 176
     6be:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6c2:	80 e0       	ldi	r24, 0x00	; 0
     6c4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6c8:	80 e1       	ldi	r24, 0x10	; 16
     6ca:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6ce:	80 ee       	ldi	r24, 0xE0	; 224
     6d0:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
     6d4:	8f ef       	ldi	r24, 0xFF	; 255
     6d6:	0e 94 23 03 	call	0x646	; 0x646 <lcd_data>
     6da:	8e 01       	movw	r16, r28
     6dc:	00 58       	subi	r16, 0x80	; 128
     6de:	1f 4f       	sbci	r17, 0xFF	; 255
     6e0:	89 91       	ld	r24, Y+
     6e2:	0e 94 23 03 	call	0x646	; 0x646 <lcd_data>
     6e6:	c0 17       	cp	r28, r16
     6e8:	d1 07       	cpc	r29, r17
     6ea:	d1 f7       	brne	.-12     	; 0x6e0 <write_buffer+0x58>
     6ec:	e8 01       	movw	r28, r16
     6ee:	ce 14       	cp	r12, r14
     6f0:	df 04       	cpc	r13, r15
     6f2:	f9 f6       	brne	.-66     	; 0x6b2 <write_buffer+0x2a>
     6f4:	df 91       	pop	r29
     6f6:	cf 91       	pop	r28
     6f8:	1f 91       	pop	r17
     6fa:	0f 91       	pop	r16
     6fc:	ff 90       	pop	r15
     6fe:	ef 90       	pop	r14
     700:	df 90       	pop	r13
     702:	cf 90       	pop	r12
     704:	08 95       	ret

00000706 <clear_buffer>:
     706:	20 e0       	ldi	r18, 0x00	; 0
     708:	34 e0       	ldi	r19, 0x04	; 4
     70a:	fc 01       	movw	r30, r24
     70c:	a9 01       	movw	r20, r18
     70e:	11 92       	st	Z+, r1
     710:	41 50       	subi	r20, 0x01	; 1
     712:	50 40       	sbci	r21, 0x00	; 0
     714:	e1 f7       	brne	.-8      	; 0x70e <clear_buffer+0x8>
     716:	08 95       	ret

00000718 <drawchar>:
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	f9 01       	movw	r30, r18
     71c:	ee 0f       	add	r30, r30
     71e:	ff 1f       	adc	r31, r31
     720:	ee 0f       	add	r30, r30
     722:	ff 1f       	adc	r31, r31
     724:	e2 0f       	add	r30, r18
     726:	f3 1f       	adc	r31, r19
     728:	e8 59       	subi	r30, 0x98	; 152
     72a:	ff 4f       	sbci	r31, 0xFF	; 255
     72c:	55 e0       	ldi	r21, 0x05	; 5
     72e:	56 0f       	add	r21, r22
     730:	9c 01       	movw	r18, r24
     732:	70 e8       	ldi	r23, 0x80	; 128
     734:	47 9f       	mul	r20, r23
     736:	20 0d       	add	r18, r0
     738:	31 1d       	adc	r19, r1
     73a:	11 24       	eor	r1, r1
     73c:	94 91       	lpm	r25, Z
     73e:	d9 01       	movw	r26, r18
     740:	a6 0f       	add	r26, r22
     742:	b1 1d       	adc	r27, r1
     744:	9c 93       	st	X, r25
     746:	6f 5f       	subi	r22, 0xFF	; 255
     748:	31 96       	adiw	r30, 0x01	; 1
     74a:	65 13       	cpse	r22, r21
     74c:	f7 cf       	rjmp	.-18     	; 0x73c <drawchar+0x24>
     74e:	08 95       	ret

00000750 <clearpixel>:
     750:	24 2f       	mov	r18, r20
     752:	26 95       	lsr	r18
     754:	26 95       	lsr	r18
     756:	26 95       	lsr	r18
     758:	e6 2f       	mov	r30, r22
     75a:	f0 e0       	ldi	r31, 0x00	; 0
     75c:	30 e8       	ldi	r19, 0x80	; 128
     75e:	23 9f       	mul	r18, r19
     760:	e0 0d       	add	r30, r0
     762:	f1 1d       	adc	r31, r1
     764:	11 24       	eor	r1, r1
     766:	31 97       	sbiw	r30, 0x01	; 1
     768:	e8 0f       	add	r30, r24
     76a:	f9 1f       	adc	r31, r25
     76c:	50 e0       	ldi	r21, 0x00	; 0
     76e:	40 95       	com	r20
     770:	50 95       	com	r21
     772:	47 70       	andi	r20, 0x07	; 7
     774:	55 27       	eor	r21, r21
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	02 c0       	rjmp	.+4      	; 0x780 <clearpixel+0x30>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	4a 95       	dec	r20
     782:	e2 f7       	brpl	.-8      	; 0x77c <clearpixel+0x2c>
     784:	80 95       	com	r24
     786:	90 81       	ld	r25, Z
     788:	89 23       	and	r24, r25
     78a:	80 83       	st	Z, r24
     78c:	08 95       	ret

0000078e <setpixel>:
     78e:	21 11       	cpse	r18, r1
     790:	03 c0       	rjmp	.+6      	; 0x798 <setpixel+0xa>
     792:	0e 94 a8 03 	call	0x750	; 0x750 <clearpixel>
     796:	08 95       	ret
     798:	24 2f       	mov	r18, r20
     79a:	26 95       	lsr	r18
     79c:	26 95       	lsr	r18
     79e:	26 95       	lsr	r18
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	30 e8       	ldi	r19, 0x80	; 128
     7a4:	23 9f       	mul	r18, r19
     7a6:	60 0d       	add	r22, r0
     7a8:	71 1d       	adc	r23, r1
     7aa:	11 24       	eor	r1, r1
     7ac:	61 50       	subi	r22, 0x01	; 1
     7ae:	71 09       	sbc	r23, r1
     7b0:	fc 01       	movw	r30, r24
     7b2:	e6 0f       	add	r30, r22
     7b4:	f7 1f       	adc	r31, r23
     7b6:	50 e0       	ldi	r21, 0x00	; 0
     7b8:	40 95       	com	r20
     7ba:	50 95       	com	r21
     7bc:	47 70       	andi	r20, 0x07	; 7
     7be:	55 27       	eor	r21, r21
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <setpixel+0x3c>
     7c6:	88 0f       	add	r24, r24
     7c8:	99 1f       	adc	r25, r25
     7ca:	4a 95       	dec	r20
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <setpixel+0x38>
     7ce:	90 81       	ld	r25, Z
     7d0:	89 2b       	or	r24, r25
     7d2:	80 83       	st	Z, r24
     7d4:	08 95       	ret

000007d6 <drawstring>:
     7d6:	ef 92       	push	r14
     7d8:	ff 92       	push	r15
     7da:	0f 93       	push	r16
     7dc:	1f 93       	push	r17
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	f9 01       	movw	r30, r18
     7e4:	20 81       	ld	r18, Z
     7e6:	22 23       	and	r18, r18
     7e8:	89 f0       	breq	.+34     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
     7ea:	8f 01       	movw	r16, r30
     7ec:	d4 2f       	mov	r29, r20
     7ee:	7c 01       	movw	r14, r24
     7f0:	0f 5f       	subi	r16, 0xFF	; 255
     7f2:	1f 4f       	sbci	r17, 0xFF	; 255
     7f4:	c6 2f       	mov	r28, r22
     7f6:	4d 2f       	mov	r20, r29
     7f8:	6c 2f       	mov	r22, r28
     7fa:	c7 01       	movw	r24, r14
     7fc:	0e 94 8c 03 	call	0x718	; 0x718 <drawchar>
     800:	f8 01       	movw	r30, r16
     802:	21 91       	ld	r18, Z+
     804:	8f 01       	movw	r16, r30
     806:	ca 5f       	subi	r28, 0xFA	; 250
     808:	21 11       	cpse	r18, r1
     80a:	f5 cf       	rjmp	.-22     	; 0x7f6 <drawstring+0x20>
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	1f 91       	pop	r17
     812:	0f 91       	pop	r16
     814:	ff 90       	pop	r15
     816:	ef 90       	pop	r14
     818:	08 95       	ret

0000081a <drawline>:
     81a:	4f 92       	push	r4
     81c:	5f 92       	push	r5
     81e:	6f 92       	push	r6
     820:	7f 92       	push	r7
     822:	8f 92       	push	r8
     824:	9f 92       	push	r9
     826:	af 92       	push	r10
     828:	bf 92       	push	r11
     82a:	cf 92       	push	r12
     82c:	df 92       	push	r13
     82e:	ef 92       	push	r14
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	6c 01       	movw	r12, r24
     83a:	d6 2f       	mov	r29, r22
     83c:	c4 2f       	mov	r28, r20
     83e:	12 2f       	mov	r17, r18
     840:	62 2f       	mov	r22, r18
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	6d 1b       	sub	r22, r29
     846:	71 09       	sbc	r23, r1
     848:	07 2e       	mov	r0, r23
     84a:	00 0c       	add	r0, r0
     84c:	88 0b       	sbc	r24, r24
     84e:	99 0b       	sbc	r25, r25
     850:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatsisf>
     854:	20 e0       	ldi	r18, 0x00	; 0
     856:	30 e0       	ldi	r19, 0x00	; 0
     858:	a9 01       	movw	r20, r18
     85a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__addsf3>
     85e:	4b 01       	movw	r8, r22
     860:	5c 01       	movw	r10, r24
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	a9 01       	movw	r20, r18
     868:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__cmpsf2>
     86c:	81 11       	cpse	r24, r1
     86e:	0d c0       	rjmp	.+26     	; 0x88a <drawline+0x70>
     870:	0c 17       	cp	r16, r28
     872:	08 f4       	brcc	.+2      	; 0x876 <drawline+0x5c>
     874:	6e c0       	rjmp	.+220    	; 0x952 <__stack+0x53>
     876:	2e 2d       	mov	r18, r14
     878:	4c 2f       	mov	r20, r28
     87a:	6d 2f       	mov	r22, r29
     87c:	c6 01       	movw	r24, r12
     87e:	0e 94 c7 03 	call	0x78e	; 0x78e <setpixel>
     882:	cf 5f       	subi	r28, 0xFF	; 255
     884:	0c 17       	cp	r16, r28
     886:	b8 f7       	brcc	.-18     	; 0x876 <drawline+0x5c>
     888:	64 c0       	rjmp	.+200    	; 0x952 <__stack+0x53>
     88a:	60 2f       	mov	r22, r16
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	6c 1b       	sub	r22, r28
     890:	71 09       	sbc	r23, r1
     892:	07 2e       	mov	r0, r23
     894:	00 0c       	add	r0, r0
     896:	88 0b       	sbc	r24, r24
     898:	99 0b       	sbc	r25, r25
     89a:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatsisf>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	a9 01       	movw	r20, r18
     8a4:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__addsf3>
     8a8:	2b 01       	movw	r4, r22
     8aa:	3c 01       	movw	r6, r24
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	a9 01       	movw	r20, r18
     8b2:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__cmpsf2>
     8b6:	88 23       	and	r24, r24
     8b8:	19 f0       	breq	.+6      	; 0x8c0 <drawline+0xa6>
     8ba:	1d 17       	cp	r17, r29
     8bc:	70 f4       	brcc	.+28     	; 0x8da <drawline+0xc0>
     8be:	49 c0       	rjmp	.+146    	; 0x952 <__stack+0x53>
     8c0:	1d 17       	cp	r17, r29
     8c2:	08 f4       	brcc	.+2      	; 0x8c6 <drawline+0xac>
     8c4:	46 c0       	rjmp	.+140    	; 0x952 <__stack+0x53>
     8c6:	2e 2d       	mov	r18, r14
     8c8:	4c 2f       	mov	r20, r28
     8ca:	6d 2f       	mov	r22, r29
     8cc:	c6 01       	movw	r24, r12
     8ce:	0e 94 c7 03 	call	0x78e	; 0x78e <setpixel>
     8d2:	df 5f       	subi	r29, 0xFF	; 255
     8d4:	1d 17       	cp	r17, r29
     8d6:	b8 f7       	brcc	.-18     	; 0x8c6 <drawline+0xac>
     8d8:	3c c0       	rjmp	.+120    	; 0x952 <__stack+0x53>
     8da:	a5 01       	movw	r20, r10
     8dc:	94 01       	movw	r18, r8
     8de:	c3 01       	movw	r24, r6
     8e0:	b2 01       	movw	r22, r4
     8e2:	0e 94 59 09 	call	0x12b2	; 0x12b2 <__divsf3>
     8e6:	2b 01       	movw	r4, r22
     8e8:	3c 01       	movw	r6, r24
     8ea:	e8 94       	clt
     8ec:	77 f8       	bld	r7, 7
     8ee:	81 2c       	mov	r8, r1
     8f0:	91 2c       	mov	r9, r1
     8f2:	54 01       	movw	r10, r8
     8f4:	2e 2d       	mov	r18, r14
     8f6:	4c 2f       	mov	r20, r28
     8f8:	6d 2f       	mov	r22, r29
     8fa:	c6 01       	movw	r24, r12
     8fc:	0e 94 c7 03 	call	0x78e	; 0x78e <setpixel>
     900:	a3 01       	movw	r20, r6
     902:	92 01       	movw	r18, r4
     904:	c5 01       	movw	r24, r10
     906:	b4 01       	movw	r22, r8
     908:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__addsf3>
     90c:	4b 01       	movw	r8, r22
     90e:	5c 01       	movw	r10, r24
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	40 e0       	ldi	r20, 0x00	; 0
     916:	5f e3       	ldi	r21, 0x3F	; 63
     918:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__gesf2>
     91c:	88 23       	and	r24, r24
     91e:	b4 f0       	brlt	.+44     	; 0x94c <__stack+0x4d>
     920:	20 e0       	ldi	r18, 0x00	; 0
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	a9 01       	movw	r20, r18
     926:	c3 01       	movw	r24, r6
     928:	b2 01       	movw	r22, r4
     92a:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__gesf2>
     92e:	18 16       	cp	r1, r24
     930:	14 f4       	brge	.+4      	; 0x936 <__stack+0x37>
     932:	cf 5f       	subi	r28, 0xFF	; 255
     934:	01 c0       	rjmp	.+2      	; 0x938 <__stack+0x39>
     936:	c1 50       	subi	r28, 0x01	; 1
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	40 e8       	ldi	r20, 0x80	; 128
     93e:	5f e3       	ldi	r21, 0x3F	; 63
     940:	c5 01       	movw	r24, r10
     942:	b4 01       	movw	r22, r8
     944:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__subsf3>
     948:	4b 01       	movw	r8, r22
     94a:	5c 01       	movw	r10, r24
     94c:	df 5f       	subi	r29, 0xFF	; 255
     94e:	1d 17       	cp	r17, r29
     950:	88 f6       	brcc	.-94     	; 0x8f4 <drawline+0xda>
     952:	df 91       	pop	r29
     954:	cf 91       	pop	r28
     956:	1f 91       	pop	r17
     958:	0f 91       	pop	r16
     95a:	ef 90       	pop	r14
     95c:	df 90       	pop	r13
     95e:	cf 90       	pop	r12
     960:	bf 90       	pop	r11
     962:	af 90       	pop	r10
     964:	9f 90       	pop	r9
     966:	8f 90       	pop	r8
     968:	7f 90       	pop	r7
     96a:	6f 90       	pop	r6
     96c:	5f 90       	pop	r5
     96e:	4f 90       	pop	r4
     970:	08 95       	ret

00000972 <fillrect>:
     972:	af 92       	push	r10
     974:	bf 92       	push	r11
     976:	cf 92       	push	r12
     978:	df 92       	push	r13
     97a:	ef 92       	push	r14
     97c:	ff 92       	push	r15
     97e:	0f 93       	push	r16
     980:	1f 93       	push	r17
     982:	cf 93       	push	r28
     984:	df 93       	push	r29
     986:	5c 01       	movw	r10, r24
     988:	c6 2f       	mov	r28, r22
     98a:	14 2f       	mov	r17, r20
     98c:	fe 2c       	mov	r15, r14
     98e:	86 2f       	mov	r24, r22
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	6c 01       	movw	r12, r24
     994:	c2 0e       	add	r12, r18
     996:	d1 1c       	adc	r13, r1
     998:	8c 15       	cp	r24, r12
     99a:	9d 05       	cpc	r25, r13
     99c:	84 f4       	brge	.+32     	; 0x9be <fillrect+0x4c>
     99e:	d4 2f       	mov	r29, r20
     9a0:	d0 0f       	add	r29, r16
     9a2:	ef 2c       	mov	r14, r15
     9a4:	0d 2f       	mov	r16, r29
     9a6:	2c 2f       	mov	r18, r28
     9a8:	41 2f       	mov	r20, r17
     9aa:	6c 2f       	mov	r22, r28
     9ac:	c5 01       	movw	r24, r10
     9ae:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
     9b2:	cf 5f       	subi	r28, 0xFF	; 255
     9b4:	8c 2f       	mov	r24, r28
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	8c 15       	cp	r24, r12
     9ba:	9d 05       	cpc	r25, r13
     9bc:	94 f3       	brlt	.-28     	; 0x9a2 <fillrect+0x30>
     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	1f 91       	pop	r17
     9c4:	0f 91       	pop	r16
     9c6:	ff 90       	pop	r15
     9c8:	ef 90       	pop	r14
     9ca:	df 90       	pop	r13
     9cc:	cf 90       	pop	r12
     9ce:	bf 90       	pop	r11
     9d0:	af 90       	pop	r10
     9d2:	08 95       	ret

000009d4 <fC>:



void fC(uint8_t *buff, uint8_t x0, uint8_t y0, uint8_t x, uint8_t y, uint8_t color) {
     9d4:	9f 92       	push	r9
     9d6:	af 92       	push	r10
     9d8:	bf 92       	push	r11
     9da:	cf 92       	push	r12
     9dc:	df 92       	push	r13
     9de:	ef 92       	push	r14
     9e0:	ff 92       	push	r15
     9e2:	0f 93       	push	r16
     9e4:	1f 93       	push	r17
     9e6:	cf 93       	push	r28
     9e8:	df 93       	push	r29
     9ea:	6c 01       	movw	r12, r24
     9ec:	c6 2f       	mov	r28, r22
     9ee:	d4 2f       	mov	r29, r20
     9f0:	f2 2e       	mov	r15, r18
     9f2:	b0 2e       	mov	r11, r16
	drawline(buff, x0-x, y0+y, x0+x, y0+y, color);
     9f4:	96 2e       	mov	r9, r22
     9f6:	92 0e       	add	r9, r18
     9f8:	40 0f       	add	r20, r16
     9fa:	a6 2e       	mov	r10, r22
     9fc:	a2 1a       	sub	r10, r18
     9fe:	04 2f       	mov	r16, r20
     a00:	29 2d       	mov	r18, r9
     a02:	6a 2d       	mov	r22, r10
     a04:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
	drawline(buff, x0-x, y0-y, x0+x, y0-y, color);
     a08:	4d 2f       	mov	r20, r29
     a0a:	4b 19       	sub	r20, r11
     a0c:	04 2f       	mov	r16, r20
     a0e:	29 2d       	mov	r18, r9
     a10:	6a 2d       	mov	r22, r10
     a12:	c6 01       	movw	r24, r12
     a14:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
	drawline(buff, x0-y, y0+x, x0+y, y0+x, color);
     a18:	ab 2c       	mov	r10, r11
     a1a:	ac 0e       	add	r10, r28
     a1c:	4d 2f       	mov	r20, r29
     a1e:	4f 0d       	add	r20, r15
     a20:	cb 19       	sub	r28, r11
     a22:	04 2f       	mov	r16, r20
     a24:	2a 2d       	mov	r18, r10
     a26:	6c 2f       	mov	r22, r28
     a28:	c6 01       	movw	r24, r12
     a2a:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
	drawline(buff, x0-y, y0-x, x0+y, y0-x, color);
     a2e:	4d 2f       	mov	r20, r29
     a30:	4f 19       	sub	r20, r15
     a32:	04 2f       	mov	r16, r20
     a34:	2a 2d       	mov	r18, r10
     a36:	6c 2f       	mov	r22, r28
     a38:	c6 01       	movw	r24, r12
     a3a:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
}
     a3e:	df 91       	pop	r29
     a40:	cf 91       	pop	r28
     a42:	1f 91       	pop	r17
     a44:	0f 91       	pop	r16
     a46:	ff 90       	pop	r15
     a48:	ef 90       	pop	r14
     a4a:	df 90       	pop	r13
     a4c:	cf 90       	pop	r12
     a4e:	bf 90       	pop	r11
     a50:	af 90       	pop	r10
     a52:	9f 90       	pop	r9
     a54:	08 95       	ret

00000a56 <fillcircle>:

// function to draw a filled circle
void fillcircle(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t color) {
     a56:	9f 92       	push	r9
     a58:	af 92       	push	r10
     a5a:	bf 92       	push	r11
     a5c:	cf 92       	push	r12
     a5e:	df 92       	push	r13
     a60:	ef 92       	push	r14
     a62:	ff 92       	push	r15
     a64:	0f 93       	push	r16
     a66:	1f 93       	push	r17
     a68:	cf 93       	push	r28
     a6a:	df 93       	push	r29
     a6c:	6c 01       	movw	r12, r24
     a6e:	16 2f       	mov	r17, r22
     a70:	f4 2e       	mov	r15, r20
     a72:	d2 2f       	mov	r29, r18
     a74:	90 2e       	mov	r9, r16
	uint8_t x = 0;
	uint8_t y = r;
	fC(buff, x0, y0, x, y, color);
     a76:	e0 2e       	mov	r14, r16
     a78:	02 2f       	mov	r16, r18
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <fC>
	int d = 3 - 2*r;
     a80:	2d 2f       	mov	r18, r29
     a82:	30 e0       	ldi	r19, 0x00	; 0
     a84:	22 0f       	add	r18, r18
     a86:	33 1f       	adc	r19, r19
     a88:	83 e0       	ldi	r24, 0x03	; 3
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	5c 01       	movw	r10, r24
     a8e:	a2 1a       	sub	r10, r18
     a90:	b3 0a       	sbc	r11, r19
	drawline(buff, x0-y, y0-x, x0+y, y0-x, color);
}

// function to draw a filled circle
void fillcircle(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t color) {
	uint8_t x = 0;
     a92:	c0 e0       	ldi	r28, 0x00	; 0
	uint8_t y = r;
	fC(buff, x0, y0, x, y, color);
	int d = 3 - 2*r;
	while (y >= x) {
		x++;
     a94:	cf 5f       	subi	r28, 0xFF	; 255
		
		if(d > 0) {
     a96:	1a 14       	cp	r1, r10
     a98:	1b 04       	cpc	r1, r11
     a9a:	84 f4       	brge	.+32     	; 0xabc <fillcircle+0x66>
			y--;
     a9c:	d1 50       	subi	r29, 0x01	; 1
			d = d +4 * (x - y) + 5;
     a9e:	8c 2f       	mov	r24, r28
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	8d 1b       	sub	r24, r29
     aa4:	91 09       	sbc	r25, r1
     aa6:	88 0f       	add	r24, r24
     aa8:	99 1f       	adc	r25, r25
     aaa:	88 0f       	add	r24, r24
     aac:	99 1f       	adc	r25, r25
     aae:	8a 0d       	add	r24, r10
     ab0:	9b 1d       	adc	r25, r11
     ab2:	5c 01       	movw	r10, r24
     ab4:	25 e0       	ldi	r18, 0x05	; 5
     ab6:	a2 0e       	add	r10, r18
     ab8:	b1 1c       	adc	r11, r1
     aba:	05 c0       	rjmp	.+10     	; 0xac6 <fillcircle+0x70>
			} else {
			d = d + 4*x + 0; // was + 6
     abc:	84 e0       	ldi	r24, 0x04	; 4
     abe:	c8 9f       	mul	r28, r24
     ac0:	a0 0c       	add	r10, r0
     ac2:	b1 1c       	adc	r11, r1
     ac4:	11 24       	eor	r1, r1
		}
		fC(buff, x0, y0, x, y, color);
     ac6:	e9 2c       	mov	r14, r9
     ac8:	0d 2f       	mov	r16, r29
     aca:	2c 2f       	mov	r18, r28
     acc:	4f 2d       	mov	r20, r15
     ace:	61 2f       	mov	r22, r17
     ad0:	c6 01       	movw	r24, r12
     ad2:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <fC>
void fillcircle(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t color) {
	uint8_t x = 0;
	uint8_t y = r;
	fC(buff, x0, y0, x, y, color);
	int d = 3 - 2*r;
	while (y >= x) {
     ad6:	dc 17       	cp	r29, r28
     ad8:	e8 f6       	brcc	.-70     	; 0xa94 <fillcircle+0x3e>
			} else {
			d = d + 4*x + 0; // was + 6
		}
		fC(buff, x0, y0, x, y, color);
	}
}
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	ff 90       	pop	r15
     ae4:	ef 90       	pop	r14
     ae6:	df 90       	pop	r13
     ae8:	cf 90       	pop	r12
     aea:	bf 90       	pop	r11
     aec:	af 90       	pop	r10
     aee:	9f 90       	pop	r9
     af0:	08 95       	ret

00000af2 <analogSetUp>:
uint16_t x;
uint16_t y;


void analogSetUp() {
	ADMUX |= (1 << REFS0); // set reference voltage
     af2:	ec e7       	ldi	r30, 0x7C	; 124
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	80 81       	ld	r24, Z
     af8:	80 64       	ori	r24, 0x40	; 64
     afa:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN); // Enable ADC
     afc:	ea e7       	ldi	r30, 0x7A	; 122
     afe:	f0 e0       	ldi	r31, 0x00	; 0
     b00:	80 81       	ld	r24, Z
     b02:	80 68       	ori	r24, 0x80	; 128
     b04:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1) | (1<< ADPS2) | (1 << ADPS0); // set to 4 clock division factor 
     b06:	80 81       	ld	r24, Z
     b08:	87 60       	ori	r24, 0x07	; 7
     b0a:	80 83       	st	Z, r24
     b0c:	08 95       	ret

00000b0e <adc_read>:
}


uint16_t  adc_read(uint8_t ch) {
	ch &= 0b00000111; 
	ADMUX = (ADMUX & 0xF8)|ch;
     b0e:	ec e7       	ldi	r30, 0x7C	; 124
     b10:	f0 e0       	ldi	r31, 0x00	; 0
     b12:	90 81       	ld	r25, Z
     b14:	98 7f       	andi	r25, 0xF8	; 248
     b16:	87 70       	andi	r24, 0x07	; 7
     b18:	89 2b       	or	r24, r25
     b1a:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADSC); 
     b1c:	ea e7       	ldi	r30, 0x7A	; 122
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	80 81       	ld	r24, Z
     b22:	80 64       	ori	r24, 0x40	; 64
     b24:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC));
     b26:	80 81       	ld	r24, Z
     b28:	86 fd       	sbrc	r24, 6
     b2a:	fd cf       	rjmp	.-6      	; 0xb26 <adc_read+0x18>
	return(ADC);
     b2c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     b30:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	
}
     b34:	08 95       	ret

00000b36 <readTouchX>:

uint16_t readTouchX() {
	// Start by readying diff between y values to find x 
	DDRC |= (1 << PINC1)| (1 << PINC3); // set X- and X+ to output
     b36:	87 b1       	in	r24, 0x07	; 7
     b38:	8a 60       	ori	r24, 0x0A	; 10
     b3a:	87 b9       	out	0x07, r24	; 7
	DDRC &= ~(1 << PINC0) & ~(1 << PINC2); // set Y- and Y+ to input 
     b3c:	87 b1       	in	r24, 0x07	; 7
     b3e:	8a 7f       	andi	r24, 0xFA	; 250
     b40:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PINC1); 
     b42:	41 9a       	sbi	0x08, 1	; 8
	PORTC &= ~(1 << PINC3); // & ~(1 << PINC0); //& ~(1 << PINC2); 
     b44:	43 98       	cbi	0x08, 3	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b46:	2f ef       	ldi	r18, 0xFF	; 255
     b48:	80 e7       	ldi	r24, 0x70	; 112
     b4a:	92 e0       	ldi	r25, 0x02	; 2
     b4c:	21 50       	subi	r18, 0x01	; 1
     b4e:	80 40       	sbci	r24, 0x00	; 0
     b50:	90 40       	sbci	r25, 0x00	; 0
     b52:	e1 f7       	brne	.-8      	; 0xb4c <readTouchX+0x16>
     b54:	00 c0       	rjmp	.+0      	; 0xb56 <readTouchX+0x20>
     b56:	00 00       	nop
	_delay_ms(50); 
	uint16_t x = fmin(adc_read(0) * 0.156 - 19, 127); 
     b58:	80 e0       	ldi	r24, 0x00	; 0
     b5a:	0e 94 87 05 	call	0xb0e	; 0xb0e <adc_read>
     b5e:	bc 01       	movw	r22, r24
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__floatunsisf>
     b68:	27 e7       	ldi	r18, 0x77	; 119
     b6a:	3e eb       	ldi	r19, 0xBE	; 190
     b6c:	4f e1       	ldi	r20, 0x1F	; 31
     b6e:	5e e3       	ldi	r21, 0x3E	; 62
     b70:	0e 94 ef 0a 	call	0x15de	; 0x15de <__mulsf3>
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	48 e9       	ldi	r20, 0x98	; 152
     b7a:	51 e4       	ldi	r21, 0x41	; 65
     b7c:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__subsf3>
     b80:	20 e0       	ldi	r18, 0x00	; 0
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	4e ef       	ldi	r20, 0xFE	; 254
     b86:	52 e4       	ldi	r21, 0x42	; 66
     b88:	0e 94 56 0a 	call	0x14ac	; 0x14ac <fmin>
	PORTC &= ~(1 << PINC1); 
     b8c:	41 98       	cbi	0x08, 1	; 8
     b8e:	0e 94 cb 09 	call	0x1396	; 0x1396 <__fixunssfsi>
	
	if (x > 30) {
	return fmin(fmax(0,(x - 50)), 127);
	}
	else return 0; 
}
     b92:	cb 01       	movw	r24, r22
     b94:	08 95       	ret

00000b96 <readTouchY>:

uint16_t readTouchY() {
	// Start by readying diff between x values to find y
	DDRC |= (1 << PINC0) | (1 << PINC2); // set Y- and Y+ to output
     b96:	87 b1       	in	r24, 0x07	; 7
     b98:	85 60       	ori	r24, 0x05	; 5
     b9a:	87 b9       	out	0x07, r24	; 7
	DDRC &= ~(1 << PINC1) & ~(1 << PINC3); // set Y- and Y+ to input
     b9c:	87 b1       	in	r24, 0x07	; 7
     b9e:	85 7f       	andi	r24, 0xF5	; 245
     ba0:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PINC0);
     ba2:	40 9a       	sbi	0x08, 0	; 8
	PORTC &= ~(1 << PINC2); // & ~(1 << PINC3);  ~(1 << PINC1) 
     ba4:	42 98       	cbi	0x08, 2	; 8
     ba6:	2f ef       	ldi	r18, 0xFF	; 255
     ba8:	80 e7       	ldi	r24, 0x70	; 112
     baa:	92 e0       	ldi	r25, 0x02	; 2
     bac:	21 50       	subi	r18, 0x01	; 1
     bae:	80 40       	sbci	r24, 0x00	; 0
     bb0:	90 40       	sbci	r25, 0x00	; 0
     bb2:	e1 f7       	brne	.-8      	; 0xbac <readTouchY+0x16>
     bb4:	00 c0       	rjmp	.+0      	; 0xbb6 <readTouchY+0x20>
     bb6:	00 00       	nop
	_delay_ms(50); 
	uint16_t tmpY = adc_read(3) * 0.1143 - 36;
     bb8:	83 e0       	ldi	r24, 0x03	; 3
     bba:	0e 94 87 05 	call	0xb0e	; 0xb0e <adc_read>
     bbe:	bc 01       	movw	r22, r24
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__floatunsisf>
     bc8:	2e e1       	ldi	r18, 0x1E	; 30
     bca:	36 e1       	ldi	r19, 0x16	; 22
     bcc:	4a ee       	ldi	r20, 0xEA	; 234
     bce:	5d e3       	ldi	r21, 0x3D	; 61
     bd0:	0e 94 ef 0a 	call	0x15de	; 0x15de <__mulsf3>
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	40 e1       	ldi	r20, 0x10	; 16
     bda:	52 e4       	ldi	r21, 0x42	; 66
     bdc:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__subsf3>
     be0:	0e 94 cb 09 	call	0x1396	; 0x1396 <__fixunssfsi>
	if (tmpY >= 63 && tmpY < 1000) {
     be4:	9b 01       	movw	r18, r22
     be6:	2f 53       	subi	r18, 0x3F	; 63
     be8:	31 09       	sbc	r19, r1
     bea:	29 3a       	cpi	r18, 0xA9	; 169
     bec:	33 40       	sbci	r19, 0x03	; 3
     bee:	48 f0       	brcs	.+18     	; 0xc02 <readTouchY+0x6c>
		return 0;
	} else if (tmpY < 63) {
     bf0:	6f 33       	cpi	r22, 0x3F	; 63
     bf2:	71 05       	cpc	r23, r1
     bf4:	48 f4       	brcc	.+18     	; 0xc08 <readTouchY+0x72>
		return 63 - tmpY; 
     bf6:	2f e3       	ldi	r18, 0x3F	; 63
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	c9 01       	movw	r24, r18
     bfc:	86 1b       	sub	r24, r22
     bfe:	97 0b       	sbc	r25, r23
     c00:	08 95       	ret
	PORTC |= (1 << PINC0);
	PORTC &= ~(1 << PINC2); // & ~(1 << PINC3);  ~(1 << PINC1) 
	_delay_ms(50); 
	uint16_t tmpY = adc_read(3) * 0.1143 - 36;
	if (tmpY >= 63 && tmpY < 1000) {
		return 0;
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	08 95       	ret
	} else if (tmpY < 63) {
		return 63 - tmpY; 
	} else {
		return 63; 
     c08:	8f e3       	ldi	r24, 0x3F	; 63
     c0a:	90 e0       	ldi	r25, 0x00	; 0
	} else if  (tmpY < 160) {
		return fmin((tmpY) *0.7, 63); 
	} else {
		return 0; 
	}
}
     c0c:	08 95       	ret

00000c0e <reset_ball>:
uint16_t mode; 

char goal = 0; 

void reset_ball() {
	ballX = 63; 
     c0e:	8f e3       	ldi	r24, 0x3F	; 63
     c10:	80 93 2b 05 	sts	0x052B, r24	; 0x80052b <ballX>
	ballY = 32; 
     c14:	80 e2       	ldi	r24, 0x20	; 32
     c16:	80 93 2f 05 	sts	0x052F, r24	; 0x80052f <ballY>
	
	ballDx = rand() % 4;
     c1a:	0e 94 a8 0b 	call	0x1750	; 0x1750 <rand>
     c1e:	83 70       	andi	r24, 0x03	; 3
     c20:	90 78       	andi	r25, 0x80	; 128
     c22:	99 23       	and	r25, r25
     c24:	24 f4       	brge	.+8      	; 0xc2e <reset_ball+0x20>
     c26:	01 97       	sbiw	r24, 0x01	; 1
     c28:	8c 6f       	ori	r24, 0xFC	; 252
     c2a:	9f 6f       	ori	r25, 0xFF	; 255
     c2c:	01 96       	adiw	r24, 0x01	; 1
     c2e:	90 93 28 05 	sts	0x0528, r25	; 0x800528 <ballDx+0x1>
     c32:	80 93 27 05 	sts	0x0527, r24	; 0x800527 <ballDx>
	ballDy = rand() % 4 ;
     c36:	0e 94 a8 0b 	call	0x1750	; 0x1750 <rand>
     c3a:	83 70       	andi	r24, 0x03	; 3
     c3c:	90 78       	andi	r25, 0x80	; 128
     c3e:	99 23       	and	r25, r25
     c40:	24 f4       	brge	.+8      	; 0xc4a <reset_ball+0x3c>
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	8c 6f       	ori	r24, 0xFC	; 252
     c46:	9f 6f       	ori	r25, 0xFF	; 255
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	90 93 26 05 	sts	0x0526, r25	; 0x800526 <ballDy+0x1>
     c4e:	80 93 25 05 	sts	0x0525, r24	; 0x800525 <ballDy>
     c52:	08 95       	ret

00000c54 <reset_game>:
}

void reset_game() {
	score1 = 0;
     c54:	10 92 21 05 	sts	0x0521, r1	; 0x800521 <__data_end+0x1>
     c58:	10 92 20 05 	sts	0x0520, r1	; 0x800520 <__data_end>
	score2 = 0;
     c5c:	10 92 22 05 	sts	0x0522, r1	; 0x800522 <score2>
	reset_ball();
     c60:	0e 94 07 06 	call	0xc0e	; 0xc0e <reset_ball>
     c64:	08 95       	ret

00000c66 <beep_tone>:
}

//**** Example function to generate different game tones
void beep_tone() {
	PORTB |= (1 << PINB1); 
     c66:	29 9a       	sbi	0x05, 1	; 5
	TCNT1 = 0; 
     c68:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     c6c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	sei(); 
     c70:	78 94       	sei
     c72:	08 95       	ret

00000c74 <checkInput>:
	//cli(); 
}

//***** Example function checks for Touchscreen inputs and changes the paddle positions  *****//
void checkInput() {
	x = readTouchX();
     c74:	0e 94 9b 05 	call	0xb36	; 0xb36 <readTouchX>
     c78:	90 93 24 05 	sts	0x0524, r25	; 0x800524 <x+0x1>
     c7c:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <x>
	y = readTouchY(); 
     c80:	0e 94 cb 05 	call	0xb96	; 0xb96 <readTouchY>
     c84:	90 93 2d 05 	sts	0x052D, r25	; 0x80052d <y+0x1>
     c88:	80 93 2c 05 	sts	0x052C, r24	; 0x80052c <y>
	// 1 vs 1 
	if (mode == 0) {
     c8c:	20 91 29 05 	lds	r18, 0x0529	; 0x800529 <mode>
     c90:	30 91 2a 05 	lds	r19, 0x052A	; 0x80052a <mode+0x1>
     c94:	21 15       	cp	r18, r1
     c96:	31 05       	cpc	r19, r1
     c98:	09 f0       	breq	.+2      	; 0xc9c <checkInput+0x28>
     c9a:	48 c0       	rjmp	.+144    	; 0xd2c <checkInput+0xb8>
		if (x < 63 && y < 32) {
     c9c:	20 91 23 05 	lds	r18, 0x0523	; 0x800523 <x>
     ca0:	30 91 24 05 	lds	r19, 0x0524	; 0x800524 <x+0x1>
     ca4:	2f 33       	cpi	r18, 0x3F	; 63
     ca6:	31 05       	cpc	r19, r1
     ca8:	f0 f4       	brcc	.+60     	; 0xce6 <checkInput+0x72>
     caa:	80 32       	cpi	r24, 0x20	; 32
     cac:	91 05       	cpc	r25, r1
     cae:	48 f4       	brcc	.+18     	; 0xcc2 <checkInput+0x4e>
			if (!(p1Y <= 2)) {
     cb0:	80 91 1b 05 	lds	r24, 0x051B	; 0x80051b <p1Y>
     cb4:	83 30       	cpi	r24, 0x03	; 3
     cb6:	08 f4       	brcc	.+2      	; 0xcba <checkInput+0x46>
     cb8:	b4 c0       	rjmp	.+360    	; 0xe22 <checkInput+0x1ae>
				p1Y -= 3;
     cba:	83 50       	subi	r24, 0x03	; 3
     cbc:	80 93 1b 05 	sts	0x051B, r24	; 0x80051b <p1Y>
     cc0:	08 95       	ret
			}
		} else if (x < 63 && y > 32) {
     cc2:	81 32       	cpi	r24, 0x21	; 33
     cc4:	91 05       	cpc	r25, r1
     cc6:	d8 f0       	brcs	.+54     	; 0xcfe <checkInput+0x8a>
			if (!(p1Y + p1L >= 63)) {
     cc8:	20 91 1b 05 	lds	r18, 0x051B	; 0x80051b <p1Y>
     ccc:	30 91 19 05 	lds	r19, 0x0519	; 0x800519 <p1L>
     cd0:	82 2f       	mov	r24, r18
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	83 0f       	add	r24, r19
     cd6:	91 1d       	adc	r25, r1
     cd8:	cf 97       	sbiw	r24, 0x3f	; 63
     cda:	0c f0       	brlt	.+2      	; 0xcde <checkInput+0x6a>
     cdc:	a2 c0       	rjmp	.+324    	; 0xe22 <checkInput+0x1ae>
				p1Y += 3;
     cde:	2d 5f       	subi	r18, 0xFD	; 253
     ce0:	20 93 1b 05 	sts	0x051B, r18	; 0x80051b <p1Y>
     ce4:	08 95       	ret
			}
		} else if (y < 32) {
     ce6:	80 32       	cpi	r24, 0x20	; 32
     ce8:	91 05       	cpc	r25, r1
     cea:	48 f4       	brcc	.+18     	; 0xcfe <checkInput+0x8a>
			if (!(p2Y <= 2)) {
     cec:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <p2Y>
     cf0:	83 30       	cpi	r24, 0x03	; 3
     cf2:	08 f4       	brcc	.+2      	; 0xcf6 <checkInput+0x82>
     cf4:	96 c0       	rjmp	.+300    	; 0xe22 <checkInput+0x1ae>
				p2Y -= 3; 
     cf6:	83 50       	subi	r24, 0x03	; 3
     cf8:	80 93 17 05 	sts	0x0517, r24	; 0x800517 <p2Y>
     cfc:	08 95       	ret
			}
		} else if (x > 63 && y > 32 && y < 62) {
     cfe:	20 34       	cpi	r18, 0x40	; 64
     d00:	31 05       	cpc	r19, r1
     d02:	08 f4       	brcc	.+2      	; 0xd06 <checkInput+0x92>
     d04:	8e c0       	rjmp	.+284    	; 0xe22 <checkInput+0x1ae>
     d06:	81 97       	sbiw	r24, 0x21	; 33
     d08:	4d 97       	sbiw	r24, 0x1d	; 29
     d0a:	08 f0       	brcs	.+2      	; 0xd0e <checkInput+0x9a>
     d0c:	8a c0       	rjmp	.+276    	; 0xe22 <checkInput+0x1ae>
			if(!(p2Y + p2L >= 63)) {
     d0e:	20 91 17 05 	lds	r18, 0x0517	; 0x800517 <p2Y>
     d12:	30 91 15 05 	lds	r19, 0x0515	; 0x800515 <p2L>
     d16:	82 2f       	mov	r24, r18
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	83 0f       	add	r24, r19
     d1c:	91 1d       	adc	r25, r1
     d1e:	cf 97       	sbiw	r24, 0x3f	; 63
     d20:	0c f0       	brlt	.+2      	; 0xd24 <checkInput+0xb0>
     d22:	7f c0       	rjmp	.+254    	; 0xe22 <checkInput+0x1ae>
				p2Y += 3; 
     d24:	2d 5f       	subi	r18, 0xFD	; 253
     d26:	20 93 17 05 	sts	0x0517, r18	; 0x800517 <p2Y>
     d2a:	08 95       	ret
			}
		}
	} else if (mode == 1) {
     d2c:	21 30       	cpi	r18, 0x01	; 1
     d2e:	31 05       	cpc	r19, r1
     d30:	e1 f5       	brne	.+120    	; 0xdaa <checkInput+0x136>
		if (x < 63 && y < 32) {
     d32:	20 91 23 05 	lds	r18, 0x0523	; 0x800523 <x>
     d36:	30 91 24 05 	lds	r19, 0x0524	; 0x800524 <x+0x1>
     d3a:	2f 33       	cpi	r18, 0x3F	; 63
     d3c:	31 05       	cpc	r19, r1
     d3e:	d0 f4       	brcc	.+52     	; 0xd74 <checkInput+0x100>
     d40:	80 32       	cpi	r24, 0x20	; 32
     d42:	91 05       	cpc	r25, r1
     d44:	40 f4       	brcc	.+16     	; 0xd56 <checkInput+0xe2>
			if (!(p1Y <= 2)) {
     d46:	80 91 1b 05 	lds	r24, 0x051B	; 0x80051b <p1Y>
     d4a:	83 30       	cpi	r24, 0x03	; 3
     d4c:	98 f0       	brcs	.+38     	; 0xd74 <checkInput+0x100>
				p1Y -= 3;
     d4e:	83 50       	subi	r24, 0x03	; 3
     d50:	80 93 1b 05 	sts	0x051B, r24	; 0x80051b <p1Y>
     d54:	0f c0       	rjmp	.+30     	; 0xd74 <checkInput+0x100>
			}
			} else if (x < 63 && y > 32) {
     d56:	81 97       	sbiw	r24, 0x21	; 33
     d58:	68 f0       	brcs	.+26     	; 0xd74 <checkInput+0x100>
			if (!(p1Y + p1L >= 63)) {
     d5a:	20 91 1b 05 	lds	r18, 0x051B	; 0x80051b <p1Y>
     d5e:	30 91 19 05 	lds	r19, 0x0519	; 0x800519 <p1L>
     d62:	82 2f       	mov	r24, r18
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	83 0f       	add	r24, r19
     d68:	91 1d       	adc	r25, r1
     d6a:	cf 97       	sbiw	r24, 0x3f	; 63
     d6c:	1c f4       	brge	.+6      	; 0xd74 <checkInput+0x100>
				p1Y += 3;
     d6e:	2d 5f       	subi	r18, 0xFD	; 253
     d70:	20 93 1b 05 	sts	0x051B, r18	; 0x80051b <p1Y>
			}
		}
		p2Y = fmax(1, ballY - p2L / 2); 
     d74:	60 91 2f 05 	lds	r22, 0x052F	; 0x80052f <ballY>
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	80 91 15 05 	lds	r24, 0x0515	; 0x800515 <p2L>
     d7e:	86 95       	lsr	r24
     d80:	68 1b       	sub	r22, r24
     d82:	71 09       	sbc	r23, r1
     d84:	07 2e       	mov	r0, r23
     d86:	00 0c       	add	r0, r0
     d88:	88 0b       	sbc	r24, r24
     d8a:	99 0b       	sbc	r25, r25
     d8c:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatsisf>
     d90:	9b 01       	movw	r18, r22
     d92:	ac 01       	movw	r20, r24
     d94:	60 e0       	ldi	r22, 0x00	; 0
     d96:	70 e0       	ldi	r23, 0x00	; 0
     d98:	80 e8       	ldi	r24, 0x80	; 128
     d9a:	9f e3       	ldi	r25, 0x3F	; 63
     d9c:	0e 94 37 0a 	call	0x146e	; 0x146e <fmax>
     da0:	0e 94 cb 09 	call	0x1396	; 0x1396 <__fixunssfsi>
     da4:	60 93 17 05 	sts	0x0517, r22	; 0x800517 <p2Y>
     da8:	08 95       	ret
	} else if (mode == 2) {
     daa:	22 30       	cpi	r18, 0x02	; 2
     dac:	31 05       	cpc	r19, r1
     dae:	c9 f5       	brne	.+114    	; 0xe22 <checkInput+0x1ae>
		uint16_t a = adc_read(4); 
     db0:	84 e0       	ldi	r24, 0x04	; 4
     db2:	0e 94 87 05 	call	0xb0e	; 0xb0e <adc_read>
		if (a > 330 && !(p1Y <= 2)) {
     db6:	8b 34       	cpi	r24, 0x4B	; 75
     db8:	21 e0       	ldi	r18, 0x01	; 1
     dba:	92 07       	cpc	r25, r18
     dbc:	40 f0       	brcs	.+16     	; 0xdce <checkInput+0x15a>
     dbe:	20 91 1b 05 	lds	r18, 0x051B	; 0x80051b <p1Y>
     dc2:	23 30       	cpi	r18, 0x03	; 3
     dc4:	20 f0       	brcs	.+8      	; 0xdce <checkInput+0x15a>
			p1Y -= 3;
     dc6:	23 50       	subi	r18, 0x03	; 3
     dc8:	20 93 1b 05 	sts	0x051B, r18	; 0x80051b <p1Y>
     dcc:	10 c0       	rjmp	.+32     	; 0xdee <checkInput+0x17a>
		} else if (a < 300 && !(p1Y + p1L >= 63)) {
     dce:	8c 32       	cpi	r24, 0x2C	; 44
     dd0:	91 40       	sbci	r25, 0x01	; 1
     dd2:	68 f4       	brcc	.+26     	; 0xdee <checkInput+0x17a>
     dd4:	20 91 1b 05 	lds	r18, 0x051B	; 0x80051b <p1Y>
     dd8:	30 91 19 05 	lds	r19, 0x0519	; 0x800519 <p1L>
     ddc:	82 2f       	mov	r24, r18
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	83 0f       	add	r24, r19
     de2:	91 1d       	adc	r25, r1
     de4:	cf 97       	sbiw	r24, 0x3f	; 63
     de6:	1c f4       	brge	.+6      	; 0xdee <checkInput+0x17a>
			p1Y += 3;
     de8:	2d 5f       	subi	r18, 0xFD	; 253
     dea:	20 93 1b 05 	sts	0x051B, r18	; 0x80051b <p1Y>
		}
		p2Y = fmax(1, ballY - p2L / 2); 
     dee:	60 91 2f 05 	lds	r22, 0x052F	; 0x80052f <ballY>
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	80 91 15 05 	lds	r24, 0x0515	; 0x800515 <p2L>
     df8:	86 95       	lsr	r24
     dfa:	68 1b       	sub	r22, r24
     dfc:	71 09       	sbc	r23, r1
     dfe:	07 2e       	mov	r0, r23
     e00:	00 0c       	add	r0, r0
     e02:	88 0b       	sbc	r24, r24
     e04:	99 0b       	sbc	r25, r25
     e06:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatsisf>
     e0a:	9b 01       	movw	r18, r22
     e0c:	ac 01       	movw	r20, r24
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	80 e8       	ldi	r24, 0x80	; 128
     e14:	9f e3       	ldi	r25, 0x3F	; 63
     e16:	0e 94 37 0a 	call	0x146e	; 0x146e <fmax>
     e1a:	0e 94 cb 09 	call	0x1396	; 0x1396 <__fixunssfsi>
     e1e:	60 93 17 05 	sts	0x0517, r22	; 0x800517 <p2Y>
     e22:	08 95       	ret

00000e24 <update_score>:
	}
}

// Check to see if goal is made
void update_score() {
	if (ballX - ballR <= 0) {
     e24:	80 91 2b 05 	lds	r24, 0x052B	; 0x80052b <ballX>
     e28:	28 2f       	mov	r18, r24
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	90 91 14 05 	lds	r25, 0x0514	; 0x800514 <ballR>
     e30:	89 2f       	mov	r24, r25
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	a9 01       	movw	r20, r18
     e36:	48 1b       	sub	r20, r24
     e38:	59 0b       	sbc	r21, r25
     e3a:	14 16       	cp	r1, r20
     e3c:	15 06       	cpc	r1, r21
     e3e:	ac f0       	brlt	.+42     	; 0xe6a <update_score+0x46>
		beep_tone();
     e40:	0e 94 33 06 	call	0xc66	; 0xc66 <beep_tone>
		score2++;
     e44:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <score2>
     e48:	8f 5f       	subi	r24, 0xFF	; 255
     e4a:	80 93 22 05 	sts	0x0522, r24	; 0x800522 <score2>
		PORTB |= (1 << PINB2);
     e4e:	2a 9a       	sbi	0x05, 2	; 5
     e50:	2f ef       	ldi	r18, 0xFF	; 255
     e52:	83 ed       	ldi	r24, 0xD3	; 211
     e54:	90 e3       	ldi	r25, 0x30	; 48
     e56:	21 50       	subi	r18, 0x01	; 1
     e58:	80 40       	sbci	r24, 0x00	; 0
     e5a:	90 40       	sbci	r25, 0x00	; 0
     e5c:	e1 f7       	brne	.-8      	; 0xe56 <update_score+0x32>
     e5e:	00 c0       	rjmp	.+0      	; 0xe60 <update_score+0x3c>
     e60:	00 00       	nop
		//PORTB &= ~(1 << PINB0) & ~(1 << PINB1);
		_delay_ms(1000);
		PORTB &= ~(1 << PINB2);
     e62:	2a 98       	cbi	0x05, 2	; 5
		reset_ball();
     e64:	0e 94 07 06 	call	0xc0e	; 0xc0e <reset_ball>
     e68:	08 95       	ret
	} else if (ballX + ballR >= 126) {
     e6a:	82 0f       	add	r24, r18
     e6c:	93 1f       	adc	r25, r19
     e6e:	8e 37       	cpi	r24, 0x7E	; 126
     e70:	91 05       	cpc	r25, r1
     e72:	c4 f0       	brlt	.+48     	; 0xea4 <update_score+0x80>
		beep_tone();
     e74:	0e 94 33 06 	call	0xc66	; 0xc66 <beep_tone>
		score1++;
     e78:	80 91 20 05 	lds	r24, 0x0520	; 0x800520 <__data_end>
     e7c:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <__data_end+0x1>
     e80:	01 96       	adiw	r24, 0x01	; 1
     e82:	90 93 21 05 	sts	0x0521, r25	; 0x800521 <__data_end+0x1>
     e86:	80 93 20 05 	sts	0x0520, r24	; 0x800520 <__data_end>
		PORTB |= (1 << PINB0); 
     e8a:	28 9a       	sbi	0x05, 0	; 5
     e8c:	2f ef       	ldi	r18, 0xFF	; 255
     e8e:	83 ed       	ldi	r24, 0xD3	; 211
     e90:	90 e3       	ldi	r25, 0x30	; 48
     e92:	21 50       	subi	r18, 0x01	; 1
     e94:	80 40       	sbci	r24, 0x00	; 0
     e96:	90 40       	sbci	r25, 0x00	; 0
     e98:	e1 f7       	brne	.-8      	; 0xe92 <update_score+0x6e>
     e9a:	00 c0       	rjmp	.+0      	; 0xe9c <update_score+0x78>
     e9c:	00 00       	nop
		//PORTB &= ~(1 << PINB0) & ~(1 << PINB1); 
		_delay_ms(1000);
		PORTB &= ~(1 << PINB0); 
     e9e:	28 98       	cbi	0x05, 0	; 5
		reset_ball();
     ea0:	0e 94 07 06 	call	0xc0e	; 0xc0e <reset_ball>
     ea4:	08 95       	ret

00000ea6 <update>:
}

//***** Example function to update game parameters
void update() {
//	if (goal) {}
	update_score();
     ea6:	0e 94 12 07 	call	0xe24	; 0xe24 <update_score>
	ballX += ballDx; 
     eaa:	90 91 2b 05 	lds	r25, 0x052B	; 0x80052b <ballX>
     eae:	80 91 27 05 	lds	r24, 0x0527	; 0x800527 <ballDx>
     eb2:	89 0f       	add	r24, r25
     eb4:	80 93 2b 05 	sts	0x052B, r24	; 0x80052b <ballX>
	ballY += ballDy;
     eb8:	90 91 2f 05 	lds	r25, 0x052F	; 0x80052f <ballY>
     ebc:	80 91 25 05 	lds	r24, 0x0525	; 0x800525 <ballDy>
     ec0:	89 0f       	add	r24, r25
     ec2:	80 93 2f 05 	sts	0x052F, r24	; 0x80052f <ballY>
	if (score2 == 5 || score1 == 5) {
     ec6:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <score2>
     eca:	85 30       	cpi	r24, 0x05	; 5
     ecc:	31 f0       	breq	.+12     	; 0xeda <update+0x34>
     ece:	80 91 20 05 	lds	r24, 0x0520	; 0x800520 <__data_end>
     ed2:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <__data_end+0x1>
     ed6:	05 97       	sbiw	r24, 0x05	; 5
     ed8:	59 f4       	brne	.+22     	; 0xef0 <update+0x4a>
     eda:	2f ef       	ldi	r18, 0xFF	; 255
     edc:	8d e2       	ldi	r24, 0x2D	; 45
     ede:	92 e2       	ldi	r25, 0x22	; 34
     ee0:	21 50       	subi	r18, 0x01	; 1
     ee2:	80 40       	sbci	r24, 0x00	; 0
     ee4:	90 40       	sbci	r25, 0x00	; 0
     ee6:	e1 f7       	brne	.-8      	; 0xee0 <update+0x3a>
     ee8:	00 c0       	rjmp	.+0      	; 0xeea <update+0x44>
     eea:	00 00       	nop
		_delay_ms(700); 
		reset_game(); 
     eec:	0e 94 2a 06 	call	0xc54	; 0xc54 <reset_game>
     ef0:	08 95       	ret

00000ef2 <draw>:
	}
}

//**** Example draw function to draw all the game sprites/graphics
void draw() {
     ef2:	ef 92       	push	r14
     ef4:	ff 92       	push	r15
     ef6:	0f 93       	push	r16
     ef8:	1f 93       	push	r17
     efa:	cf 93       	push	r28
     efc:	df 93       	push	r29
     efe:	00 d0       	rcall	.+0      	; 0xf00 <draw+0xe>
     f00:	cd b7       	in	r28, 0x3d	; 61
     f02:	de b7       	in	r29, 0x3e	; 62
	lcd_set_brightness(0x18); //0x18
     f04:	88 e1       	ldi	r24, 0x18	; 24
     f06:	0e 94 39 03 	call	0x672	; 0x672 <lcd_set_brightness>
	clear_buffer(buff); 
     f0a:	84 e0       	ldi	r24, 0x04	; 4
     f0c:	91 e0       	ldi	r25, 0x01	; 1
     f0e:	0e 94 83 03 	call	0x706	; 0x706 <clear_buffer>
	// draw boundaries
	drawline(buff, 0, 0, 127, 0, 1); 
     f12:	ee 24       	eor	r14, r14
     f14:	e3 94       	inc	r14
     f16:	00 e0       	ldi	r16, 0x00	; 0
     f18:	2f e7       	ldi	r18, 0x7F	; 127
     f1a:	40 e0       	ldi	r20, 0x00	; 0
     f1c:	60 e0       	ldi	r22, 0x00	; 0
     f1e:	84 e0       	ldi	r24, 0x04	; 4
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
	drawline(buff, 128, 0, 128, 63, 1); 
     f26:	0f e3       	ldi	r16, 0x3F	; 63
     f28:	20 e8       	ldi	r18, 0x80	; 128
     f2a:	40 e0       	ldi	r20, 0x00	; 0
     f2c:	60 e8       	ldi	r22, 0x80	; 128
     f2e:	84 e0       	ldi	r24, 0x04	; 4
     f30:	91 e0       	ldi	r25, 0x01	; 1
     f32:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
	drawline(buff, 0, 63, 127, 63, 1); 
     f36:	2f e7       	ldi	r18, 0x7F	; 127
     f38:	4f e3       	ldi	r20, 0x3F	; 63
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	84 e0       	ldi	r24, 0x04	; 4
     f3e:	91 e0       	ldi	r25, 0x01	; 1
     f40:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
	drawline(buff, 1, 1, 1, 63, 1); 
     f44:	21 e0       	ldi	r18, 0x01	; 1
     f46:	41 e0       	ldi	r20, 0x01	; 1
     f48:	61 e0       	ldi	r22, 0x01	; 1
     f4a:	84 e0       	ldi	r24, 0x04	; 4
     f4c:	91 e0       	ldi	r25, 0x01	; 1
     f4e:	0e 94 0d 04 	call	0x81a	; 0x81a <drawline>
	
	// draw score
	char String1[1]; 
	sprintf(String1, "%i", score1); 
     f52:	80 91 21 05 	lds	r24, 0x0521	; 0x800521 <__data_end+0x1>
     f56:	8f 93       	push	r24
     f58:	80 91 20 05 	lds	r24, 0x0520	; 0x800520 <__data_end>
     f5c:	8f 93       	push	r24
     f5e:	0d e1       	ldi	r16, 0x1D	; 29
     f60:	15 e0       	ldi	r17, 0x05	; 5
     f62:	1f 93       	push	r17
     f64:	0f 93       	push	r16
     f66:	ce 01       	movw	r24, r28
     f68:	01 96       	adiw	r24, 0x01	; 1
     f6a:	7c 01       	movw	r14, r24
     f6c:	9f 93       	push	r25
     f6e:	8f 93       	push	r24
     f70:	0e 94 b8 0b 	call	0x1770	; 0x1770 <sprintf>
	drawstring(buff, 50, 0, String1); 
     f74:	97 01       	movw	r18, r14
     f76:	40 e0       	ldi	r20, 0x00	; 0
     f78:	62 e3       	ldi	r22, 0x32	; 50
     f7a:	84 e0       	ldi	r24, 0x04	; 4
     f7c:	91 e0       	ldi	r25, 0x01	; 1
     f7e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <drawstring>
	char s2[1]; 
	sprintf(s2, "%i", score2); 
     f82:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <score2>
     f86:	1f 92       	push	r1
     f88:	8f 93       	push	r24
     f8a:	1f 93       	push	r17
     f8c:	0f 93       	push	r16
     f8e:	8e 01       	movw	r16, r28
     f90:	0e 5f       	subi	r16, 0xFE	; 254
     f92:	1f 4f       	sbci	r17, 0xFF	; 255
     f94:	1f 93       	push	r17
     f96:	0f 93       	push	r16
     f98:	0e 94 b8 0b 	call	0x1770	; 0x1770 <sprintf>
	drawstring(buff, 69, 0, s2); 
     f9c:	98 01       	movw	r18, r16
     f9e:	40 e0       	ldi	r20, 0x00	; 0
     fa0:	65 e4       	ldi	r22, 0x45	; 69
     fa2:	84 e0       	ldi	r24, 0x04	; 4
     fa4:	91 e0       	ldi	r25, 0x01	; 1
     fa6:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <drawstring>
	
	// draw paddles
	fillrect(buff, p1X, p1Y, p1W, p1L, 1);
     faa:	ee 24       	eor	r14, r14
     fac:	e3 94       	inc	r14
     fae:	00 91 19 05 	lds	r16, 0x0519	; 0x800519 <p1L>
     fb2:	20 91 1a 05 	lds	r18, 0x051A	; 0x80051a <p1W>
     fb6:	40 91 1b 05 	lds	r20, 0x051B	; 0x80051b <p1Y>
     fba:	60 91 1c 05 	lds	r22, 0x051C	; 0x80051c <p1X>
     fbe:	84 e0       	ldi	r24, 0x04	; 4
     fc0:	91 e0       	ldi	r25, 0x01	; 1
     fc2:	0e 94 b9 04 	call	0x972	; 0x972 <fillrect>
	fillrect(buff, p2X, p2Y, p2W, p2L, 1); 
     fc6:	00 91 15 05 	lds	r16, 0x0515	; 0x800515 <p2L>
     fca:	20 91 16 05 	lds	r18, 0x0516	; 0x800516 <p2W>
     fce:	40 91 17 05 	lds	r20, 0x0517	; 0x800517 <p2Y>
     fd2:	60 91 18 05 	lds	r22, 0x0518	; 0x800518 <p2X>
     fd6:	84 e0       	ldi	r24, 0x04	; 4
     fd8:	91 e0       	ldi	r25, 0x01	; 1
     fda:	0e 94 b9 04 	call	0x972	; 0x972 <fillrect>
	
	
	// draw ball
	fillcircle(buff, ballX, ballY, ballR, 1); 
     fde:	01 e0       	ldi	r16, 0x01	; 1
     fe0:	20 91 14 05 	lds	r18, 0x0514	; 0x800514 <ballR>
     fe4:	40 91 2f 05 	lds	r20, 0x052F	; 0x80052f <ballY>
     fe8:	60 91 2b 05 	lds	r22, 0x052B	; 0x80052b <ballX>
     fec:	84 e0       	ldi	r24, 0x04	; 4
     fee:	91 e0       	ldi	r25, 0x01	; 1
     ff0:	0e 94 2b 05 	call	0xa56	; 0xa56 <fillcircle>
	write_buffer(buff); 
     ff4:	84 e0       	ldi	r24, 0x04	; 4
     ff6:	91 e0       	ldi	r25, 0x01	; 1
     ff8:	0e 94 44 03 	call	0x688	; 0x688 <write_buffer>
}
     ffc:	0f b6       	in	r0, 0x3f	; 63
     ffe:	f8 94       	cli
    1000:	de bf       	out	0x3e, r29	; 62
    1002:	0f be       	out	0x3f, r0	; 63
    1004:	cd bf       	out	0x3d, r28	; 61
    1006:	0f 90       	pop	r0
    1008:	0f 90       	pop	r0
    100a:	df 91       	pop	r29
    100c:	cf 91       	pop	r28
    100e:	1f 91       	pop	r17
    1010:	0f 91       	pop	r16
    1012:	ff 90       	pop	r15
    1014:	ef 90       	pop	r14
    1016:	08 95       	ret

00001018 <checkCollisions>:


//**** Example function checks for Horizontal and Vertical collisions of the Ball
void checkCollisions() {
	// check if ball hit p1 paddle 
	if (ballX - ballR <= p1X + p1W +1 &&  ballY >= p1Y 
    1018:	20 91 2b 05 	lds	r18, 0x052B	; 0x80052b <ballX>
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	60 91 14 05 	lds	r22, 0x0514	; 0x800514 <ballR>
    1022:	46 2f       	mov	r20, r22
    1024:	50 e0       	ldi	r21, 0x00	; 0
    1026:	f9 01       	movw	r30, r18
    1028:	e4 1b       	sub	r30, r20
    102a:	f5 0b       	sbc	r31, r21
    102c:	70 91 1c 05 	lds	r23, 0x051C	; 0x80051c <p1X>
    1030:	80 91 1a 05 	lds	r24, 0x051A	; 0x80051a <p1W>
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	87 0f       	add	r24, r23
    1038:	91 1d       	adc	r25, r1
    103a:	01 96       	adiw	r24, 0x01	; 1
    103c:	8e 17       	cp	r24, r30
    103e:	9f 07       	cpc	r25, r31
    1040:	ec f0       	brlt	.+58     	; 0x107c <checkCollisions+0x64>
    1042:	e0 91 2f 05 	lds	r30, 0x052F	; 0x80052f <ballY>
    1046:	80 91 1b 05 	lds	r24, 0x051B	; 0x80051b <p1Y>
    104a:	e8 17       	cp	r30, r24
    104c:	b8 f0       	brcs	.+46     	; 0x107c <checkCollisions+0x64>
		&& ballY <= p1Y + p1L) {
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	70 91 19 05 	lds	r23, 0x0519	; 0x800519 <p1L>
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	87 0f       	add	r24, r23
    1058:	91 1d       	adc	r25, r1
    105a:	8e 17       	cp	r24, r30
    105c:	9f 07       	cpc	r25, r31
    105e:	74 f0       	brlt	.+28     	; 0x107c <checkCollisions+0x64>
			ballDx = -1*ballDx; 
    1060:	80 91 27 05 	lds	r24, 0x0527	; 0x800527 <ballDx>
    1064:	90 91 28 05 	lds	r25, 0x0528	; 0x800528 <ballDx+0x1>
    1068:	91 95       	neg	r25
    106a:	81 95       	neg	r24
    106c:	91 09       	sbc	r25, r1
    106e:	90 93 28 05 	sts	0x0528, r25	; 0x800528 <ballDx+0x1>
    1072:	80 93 27 05 	sts	0x0527, r24	; 0x800527 <ballDx>
			beep_tone(); 
    1076:	0e 94 33 06 	call	0xc66	; 0xc66 <beep_tone>
    107a:	37 c0       	rjmp	.+110    	; 0x10ea <checkCollisions+0xd2>
		}
	// check if ball hit p2 paddle 
	else if (ballX + ballR >= p2X - 1 && ballY >= p2Y
    107c:	24 0f       	add	r18, r20
    107e:	35 1f       	adc	r19, r21
    1080:	80 91 18 05 	lds	r24, 0x0518	; 0x800518 <p2X>
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	01 97       	sbiw	r24, 0x01	; 1
    1088:	28 17       	cp	r18, r24
    108a:	39 07       	cpc	r19, r25
    108c:	ec f0       	brlt	.+58     	; 0x10c8 <checkCollisions+0xb0>
    108e:	20 91 2f 05 	lds	r18, 0x052F	; 0x80052f <ballY>
    1092:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <p2Y>
    1096:	28 17       	cp	r18, r24
    1098:	b8 f0       	brcs	.+46     	; 0x10c8 <checkCollisions+0xb0>
		&& ballY <= p2Y + p2L) {
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	40 91 15 05 	lds	r20, 0x0515	; 0x800515 <p2L>
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	84 0f       	add	r24, r20
    10a4:	91 1d       	adc	r25, r1
    10a6:	82 17       	cp	r24, r18
    10a8:	93 07       	cpc	r25, r19
    10aa:	74 f0       	brlt	.+28     	; 0x10c8 <checkCollisions+0xb0>
			ballDx = -1*ballDx; 
    10ac:	80 91 27 05 	lds	r24, 0x0527	; 0x800527 <ballDx>
    10b0:	90 91 28 05 	lds	r25, 0x0528	; 0x800528 <ballDx+0x1>
    10b4:	91 95       	neg	r25
    10b6:	81 95       	neg	r24
    10b8:	91 09       	sbc	r25, r1
    10ba:	90 93 28 05 	sts	0x0528, r25	; 0x800528 <ballDx+0x1>
    10be:	80 93 27 05 	sts	0x0527, r24	; 0x800527 <ballDx>
			beep_tone();
    10c2:	0e 94 33 06 	call	0xc66	; 0xc66 <beep_tone>
    10c6:	11 c0       	rjmp	.+34     	; 0x10ea <checkCollisions+0xd2>
		}
	
	// check if ball hit upper wall 
	else if (ballY - ballR == 0) {
    10c8:	80 91 2f 05 	lds	r24, 0x052F	; 0x80052f <ballY>
    10cc:	68 13       	cpse	r22, r24
    10ce:	0d c0       	rjmp	.+26     	; 0x10ea <checkCollisions+0xd2>
		ballDy = -1*ballDy;
    10d0:	80 91 25 05 	lds	r24, 0x0525	; 0x800525 <ballDy>
    10d4:	90 91 26 05 	lds	r25, 0x0526	; 0x800526 <ballDy+0x1>
    10d8:	91 95       	neg	r25
    10da:	81 95       	neg	r24
    10dc:	91 09       	sbc	r25, r1
    10de:	90 93 26 05 	sts	0x0526, r25	; 0x800526 <ballDy+0x1>
    10e2:	80 93 25 05 	sts	0x0525, r24	; 0x800525 <ballDy>
		beep_tone(); 
    10e6:	0e 94 33 06 	call	0xc66	; 0xc66 <beep_tone>
	}
	
	// check if ball hit lower wall 
	if (ballY + ballR >= 63) {
    10ea:	20 91 2f 05 	lds	r18, 0x052F	; 0x80052f <ballY>
    10ee:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <ballR>
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	82 0f       	add	r24, r18
    10f6:	91 1d       	adc	r25, r1
    10f8:	cf 97       	sbiw	r24, 0x3f	; 63
    10fa:	6c f0       	brlt	.+26     	; 0x1116 <checkCollisions+0xfe>
		ballDy = -1*ballDy;
    10fc:	80 91 25 05 	lds	r24, 0x0525	; 0x800525 <ballDy>
    1100:	90 91 26 05 	lds	r25, 0x0526	; 0x800526 <ballDy+0x1>
    1104:	91 95       	neg	r25
    1106:	81 95       	neg	r24
    1108:	91 09       	sbc	r25, r1
    110a:	90 93 26 05 	sts	0x0526, r25	; 0x800526 <ballDy+0x1>
    110e:	80 93 25 05 	sts	0x0525, r24	; 0x800525 <ballDy>
		beep_tone(); 
    1112:	0e 94 33 06 	call	0xc66	; 0xc66 <beep_tone>
    1116:	08 95       	ret

00001118 <main>:


int main(void)
{
	//setting up the gpio for backlight
	DDRD |= 0x80;
    1118:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
    111a:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
    111c:	8b b1       	in	r24, 0x0b	; 11
    111e:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1 << PIND6); // set pin D6 to out
    1120:	56 9a       	sbi	0x0a, 6	; 10
	DDRB |= (1 << PINB0) | (1 << PINB2); 
    1122:	84 b1       	in	r24, 0x04	; 4
    1124:	85 60       	ori	r24, 0x05	; 5
    1126:	84 b9       	out	0x04, r24	; 4
	
	DDRB |= 0x05;
    1128:	84 b1       	in	r24, 0x04	; 4
    112a:	85 60       	ori	r24, 0x05	; 5
    112c:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05;
    112e:	85 b1       	in	r24, 0x05	; 5
    1130:	8a 7f       	andi	r24, 0xFA	; 250
    1132:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0x00;
    1134:	85 b1       	in	r24, 0x05	; 5
    1136:	85 b9       	out	0x05, r24	; 5
	DDRD |= (1 << PIND7); 
    1138:	57 9a       	sbi	0x0a, 7	; 10
	
	DDRB |= 0x02; // set Port B pin 1 to output
    113a:	21 9a       	sbi	0x04, 1	; 4
	TCCR1B = 0x02; // set prescalar to 8 for channel 0 (2MHz)
    113c:	82 e0       	ldi	r24, 0x02	; 2
    113e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIMSK1 |= (1 << TOIE1); // enable overflow interrupt
    1142:	ef e6       	ldi	r30, 0x6F	; 111
    1144:	f0 e0       	ldi	r31, 0x00	; 0
    1146:	80 81       	ld	r24, Z
    1148:	81 60       	ori	r24, 0x01	; 1
    114a:	80 83       	st	Z, r24

 
	analogSetUp(); 
    114c:	0e 94 79 05 	call	0xaf2	; 0xaf2 <analogSetUp>
	
	//lcd initialisation
	lcd_init();
    1150:	0e 94 e7 02 	call	0x5ce	; 0x5ce <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
    1154:	8f ea       	ldi	r24, 0xAF	; 175
    1156:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <lcd_command>
	lcd_set_brightness(0x18);
    115a:	88 e1       	ldi	r24, 0x18	; 24
    115c:	0e 94 39 03 	call	0x672	; 0x672 <lcd_set_brightness>
	write_buffer(buff);
    1160:	84 e0       	ldi	r24, 0x04	; 4
    1162:	91 e0       	ldi	r25, 0x01	; 1
    1164:	0e 94 44 03 	call	0x688	; 0x688 <write_buffer>
    1168:	2f ef       	ldi	r18, 0xFF	; 255
    116a:	83 ed       	ldi	r24, 0xD3	; 211
    116c:	90 e3       	ldi	r25, 0x30	; 48
    116e:	21 50       	subi	r18, 0x01	; 1
    1170:	80 40       	sbci	r24, 0x00	; 0
    1172:	90 40       	sbci	r25, 0x00	; 0
    1174:	e1 f7       	brne	.-8      	; 0x116e <main+0x56>
    1176:	00 c0       	rjmp	.+0      	; 0x1178 <main+0x60>
    1178:	00 00       	nop
	_delay_ms(1000);
	clear_buffer(buff);
    117a:	84 e0       	ldi	r24, 0x04	; 4
    117c:	91 e0       	ldi	r25, 0x01	; 1
    117e:	0e 94 83 03 	call	0x706	; 0x706 <clear_buffer>
	
	reset_game(); 
    1182:	0e 94 2a 06 	call	0xc54	; 0xc54 <reset_game>
	mode = 2; 
    1186:	82 e0       	ldi	r24, 0x02	; 2
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	90 93 2a 05 	sts	0x052A, r25	; 0x80052a <mode+0x1>
    118e:	80 93 29 05 	sts	0x0529, r24	; 0x800529 <mode>
	

	while (1)
	{
		draw();
    1192:	0e 94 79 07 	call	0xef2	; 0xef2 <draw>
		checkInput();
    1196:	0e 94 3a 06 	call	0xc74	; 0xc74 <checkInput>
		checkCollisions();
    119a:	0e 94 0c 08 	call	0x1018	; 0x1018 <checkCollisions>
		update();
    119e:	0e 94 53 07 	call	0xea6	; 0xea6 <update>
    11a2:	2f ef       	ldi	r18, 0xFF	; 255
    11a4:	80 e7       	ldi	r24, 0x70	; 112
    11a6:	92 e0       	ldi	r25, 0x02	; 2
    11a8:	21 50       	subi	r18, 0x01	; 1
    11aa:	80 40       	sbci	r24, 0x00	; 0
    11ac:	90 40       	sbci	r25, 0x00	; 0
    11ae:	e1 f7       	brne	.-8      	; 0x11a8 <main+0x90>
    11b0:	00 c0       	rjmp	.+0      	; 0x11b2 <main+0x9a>
    11b2:	00 00       	nop
    11b4:	ee cf       	rjmp	.-36     	; 0x1192 <main+0x7a>

000011b6 <__vector_13>:
		_delay_ms(50);
	}
}

ISR(TIMER1_OVF_vect) {
    11b6:	1f 92       	push	r1
    11b8:	0f 92       	push	r0
    11ba:	0f b6       	in	r0, 0x3f	; 63
    11bc:	0f 92       	push	r0
    11be:	11 24       	eor	r1, r1
	PORTB &= ~(1 << PINB1);
    11c0:	29 98       	cbi	0x05, 1	; 5
	cli();  
    11c2:	f8 94       	cli
    11c4:	0f 90       	pop	r0
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	0f 90       	pop	r0
    11ca:	1f 90       	pop	r1
    11cc:	18 95       	reti

000011ce <__subsf3>:
    11ce:	50 58       	subi	r21, 0x80	; 128

000011d0 <__addsf3>:
    11d0:	bb 27       	eor	r27, r27
    11d2:	aa 27       	eor	r26, r26
    11d4:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__addsf3x>
    11d8:	0c 94 b0 0a 	jmp	0x1560	; 0x1560 <__fp_round>
    11dc:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__fp_pscA>
    11e0:	38 f0       	brcs	.+14     	; 0x11f0 <__addsf3+0x20>
    11e2:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__fp_pscB>
    11e6:	20 f0       	brcs	.+8      	; 0x11f0 <__addsf3+0x20>
    11e8:	39 f4       	brne	.+14     	; 0x11f8 <__addsf3+0x28>
    11ea:	9f 3f       	cpi	r25, 0xFF	; 255
    11ec:	19 f4       	brne	.+6      	; 0x11f4 <__addsf3+0x24>
    11ee:	26 f4       	brtc	.+8      	; 0x11f8 <__addsf3+0x28>
    11f0:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__fp_nan>
    11f4:	0e f4       	brtc	.+2      	; 0x11f8 <__addsf3+0x28>
    11f6:	e0 95       	com	r30
    11f8:	e7 fb       	bst	r30, 7
    11fa:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__fp_inf>

000011fe <__addsf3x>:
    11fe:	e9 2f       	mov	r30, r25
    1200:	0e 94 c1 0a 	call	0x1582	; 0x1582 <__fp_split3>
    1204:	58 f3       	brcs	.-42     	; 0x11dc <__addsf3+0xc>
    1206:	ba 17       	cp	r27, r26
    1208:	62 07       	cpc	r22, r18
    120a:	73 07       	cpc	r23, r19
    120c:	84 07       	cpc	r24, r20
    120e:	95 07       	cpc	r25, r21
    1210:	20 f0       	brcs	.+8      	; 0x121a <__addsf3x+0x1c>
    1212:	79 f4       	brne	.+30     	; 0x1232 <__addsf3x+0x34>
    1214:	a6 f5       	brtc	.+104    	; 0x127e <__addsf3x+0x80>
    1216:	0c 94 e3 0a 	jmp	0x15c6	; 0x15c6 <__fp_zero>
    121a:	0e f4       	brtc	.+2      	; 0x121e <__addsf3x+0x20>
    121c:	e0 95       	com	r30
    121e:	0b 2e       	mov	r0, r27
    1220:	ba 2f       	mov	r27, r26
    1222:	a0 2d       	mov	r26, r0
    1224:	0b 01       	movw	r0, r22
    1226:	b9 01       	movw	r22, r18
    1228:	90 01       	movw	r18, r0
    122a:	0c 01       	movw	r0, r24
    122c:	ca 01       	movw	r24, r20
    122e:	a0 01       	movw	r20, r0
    1230:	11 24       	eor	r1, r1
    1232:	ff 27       	eor	r31, r31
    1234:	59 1b       	sub	r21, r25
    1236:	99 f0       	breq	.+38     	; 0x125e <__addsf3x+0x60>
    1238:	59 3f       	cpi	r21, 0xF9	; 249
    123a:	50 f4       	brcc	.+20     	; 0x1250 <__addsf3x+0x52>
    123c:	50 3e       	cpi	r21, 0xE0	; 224
    123e:	68 f1       	brcs	.+90     	; 0x129a <__addsf3x+0x9c>
    1240:	1a 16       	cp	r1, r26
    1242:	f0 40       	sbci	r31, 0x00	; 0
    1244:	a2 2f       	mov	r26, r18
    1246:	23 2f       	mov	r18, r19
    1248:	34 2f       	mov	r19, r20
    124a:	44 27       	eor	r20, r20
    124c:	58 5f       	subi	r21, 0xF8	; 248
    124e:	f3 cf       	rjmp	.-26     	; 0x1236 <__addsf3x+0x38>
    1250:	46 95       	lsr	r20
    1252:	37 95       	ror	r19
    1254:	27 95       	ror	r18
    1256:	a7 95       	ror	r26
    1258:	f0 40       	sbci	r31, 0x00	; 0
    125a:	53 95       	inc	r21
    125c:	c9 f7       	brne	.-14     	; 0x1250 <__addsf3x+0x52>
    125e:	7e f4       	brtc	.+30     	; 0x127e <__addsf3x+0x80>
    1260:	1f 16       	cp	r1, r31
    1262:	ba 0b       	sbc	r27, r26
    1264:	62 0b       	sbc	r22, r18
    1266:	73 0b       	sbc	r23, r19
    1268:	84 0b       	sbc	r24, r20
    126a:	ba f0       	brmi	.+46     	; 0x129a <__addsf3x+0x9c>
    126c:	91 50       	subi	r25, 0x01	; 1
    126e:	a1 f0       	breq	.+40     	; 0x1298 <__addsf3x+0x9a>
    1270:	ff 0f       	add	r31, r31
    1272:	bb 1f       	adc	r27, r27
    1274:	66 1f       	adc	r22, r22
    1276:	77 1f       	adc	r23, r23
    1278:	88 1f       	adc	r24, r24
    127a:	c2 f7       	brpl	.-16     	; 0x126c <__addsf3x+0x6e>
    127c:	0e c0       	rjmp	.+28     	; 0x129a <__addsf3x+0x9c>
    127e:	ba 0f       	add	r27, r26
    1280:	62 1f       	adc	r22, r18
    1282:	73 1f       	adc	r23, r19
    1284:	84 1f       	adc	r24, r20
    1286:	48 f4       	brcc	.+18     	; 0x129a <__addsf3x+0x9c>
    1288:	87 95       	ror	r24
    128a:	77 95       	ror	r23
    128c:	67 95       	ror	r22
    128e:	b7 95       	ror	r27
    1290:	f7 95       	ror	r31
    1292:	9e 3f       	cpi	r25, 0xFE	; 254
    1294:	08 f0       	brcs	.+2      	; 0x1298 <__addsf3x+0x9a>
    1296:	b0 cf       	rjmp	.-160    	; 0x11f8 <__addsf3+0x28>
    1298:	93 95       	inc	r25
    129a:	88 0f       	add	r24, r24
    129c:	08 f0       	brcs	.+2      	; 0x12a0 <__addsf3x+0xa2>
    129e:	99 27       	eor	r25, r25
    12a0:	ee 0f       	add	r30, r30
    12a2:	97 95       	ror	r25
    12a4:	87 95       	ror	r24
    12a6:	08 95       	ret

000012a8 <__cmpsf2>:
    12a8:	0e 94 75 0a 	call	0x14ea	; 0x14ea <__fp_cmp>
    12ac:	08 f4       	brcc	.+2      	; 0x12b0 <__cmpsf2+0x8>
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	08 95       	ret

000012b2 <__divsf3>:
    12b2:	0e 94 6d 09 	call	0x12da	; 0x12da <__divsf3x>
    12b6:	0c 94 b0 0a 	jmp	0x1560	; 0x1560 <__fp_round>
    12ba:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__fp_pscB>
    12be:	58 f0       	brcs	.+22     	; 0x12d6 <__divsf3+0x24>
    12c0:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__fp_pscA>
    12c4:	40 f0       	brcs	.+16     	; 0x12d6 <__divsf3+0x24>
    12c6:	29 f4       	brne	.+10     	; 0x12d2 <__divsf3+0x20>
    12c8:	5f 3f       	cpi	r21, 0xFF	; 255
    12ca:	29 f0       	breq	.+10     	; 0x12d6 <__divsf3+0x24>
    12cc:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__fp_inf>
    12d0:	51 11       	cpse	r21, r1
    12d2:	0c 94 e4 0a 	jmp	0x15c8	; 0x15c8 <__fp_szero>
    12d6:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__fp_nan>

000012da <__divsf3x>:
    12da:	0e 94 c1 0a 	call	0x1582	; 0x1582 <__fp_split3>
    12de:	68 f3       	brcs	.-38     	; 0x12ba <__divsf3+0x8>

000012e0 <__divsf3_pse>:
    12e0:	99 23       	and	r25, r25
    12e2:	b1 f3       	breq	.-20     	; 0x12d0 <__divsf3+0x1e>
    12e4:	55 23       	and	r21, r21
    12e6:	91 f3       	breq	.-28     	; 0x12cc <__divsf3+0x1a>
    12e8:	95 1b       	sub	r25, r21
    12ea:	55 0b       	sbc	r21, r21
    12ec:	bb 27       	eor	r27, r27
    12ee:	aa 27       	eor	r26, r26
    12f0:	62 17       	cp	r22, r18
    12f2:	73 07       	cpc	r23, r19
    12f4:	84 07       	cpc	r24, r20
    12f6:	38 f0       	brcs	.+14     	; 0x1306 <__divsf3_pse+0x26>
    12f8:	9f 5f       	subi	r25, 0xFF	; 255
    12fa:	5f 4f       	sbci	r21, 0xFF	; 255
    12fc:	22 0f       	add	r18, r18
    12fe:	33 1f       	adc	r19, r19
    1300:	44 1f       	adc	r20, r20
    1302:	aa 1f       	adc	r26, r26
    1304:	a9 f3       	breq	.-22     	; 0x12f0 <__divsf3_pse+0x10>
    1306:	35 d0       	rcall	.+106    	; 0x1372 <__divsf3_pse+0x92>
    1308:	0e 2e       	mov	r0, r30
    130a:	3a f0       	brmi	.+14     	; 0x131a <__divsf3_pse+0x3a>
    130c:	e0 e8       	ldi	r30, 0x80	; 128
    130e:	32 d0       	rcall	.+100    	; 0x1374 <__divsf3_pse+0x94>
    1310:	91 50       	subi	r25, 0x01	; 1
    1312:	50 40       	sbci	r21, 0x00	; 0
    1314:	e6 95       	lsr	r30
    1316:	00 1c       	adc	r0, r0
    1318:	ca f7       	brpl	.-14     	; 0x130c <__divsf3_pse+0x2c>
    131a:	2b d0       	rcall	.+86     	; 0x1372 <__divsf3_pse+0x92>
    131c:	fe 2f       	mov	r31, r30
    131e:	29 d0       	rcall	.+82     	; 0x1372 <__divsf3_pse+0x92>
    1320:	66 0f       	add	r22, r22
    1322:	77 1f       	adc	r23, r23
    1324:	88 1f       	adc	r24, r24
    1326:	bb 1f       	adc	r27, r27
    1328:	26 17       	cp	r18, r22
    132a:	37 07       	cpc	r19, r23
    132c:	48 07       	cpc	r20, r24
    132e:	ab 07       	cpc	r26, r27
    1330:	b0 e8       	ldi	r27, 0x80	; 128
    1332:	09 f0       	breq	.+2      	; 0x1336 <__divsf3_pse+0x56>
    1334:	bb 0b       	sbc	r27, r27
    1336:	80 2d       	mov	r24, r0
    1338:	bf 01       	movw	r22, r30
    133a:	ff 27       	eor	r31, r31
    133c:	93 58       	subi	r25, 0x83	; 131
    133e:	5f 4f       	sbci	r21, 0xFF	; 255
    1340:	3a f0       	brmi	.+14     	; 0x1350 <__divsf3_pse+0x70>
    1342:	9e 3f       	cpi	r25, 0xFE	; 254
    1344:	51 05       	cpc	r21, r1
    1346:	78 f0       	brcs	.+30     	; 0x1366 <__divsf3_pse+0x86>
    1348:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__fp_inf>
    134c:	0c 94 e4 0a 	jmp	0x15c8	; 0x15c8 <__fp_szero>
    1350:	5f 3f       	cpi	r21, 0xFF	; 255
    1352:	e4 f3       	brlt	.-8      	; 0x134c <__divsf3_pse+0x6c>
    1354:	98 3e       	cpi	r25, 0xE8	; 232
    1356:	d4 f3       	brlt	.-12     	; 0x134c <__divsf3_pse+0x6c>
    1358:	86 95       	lsr	r24
    135a:	77 95       	ror	r23
    135c:	67 95       	ror	r22
    135e:	b7 95       	ror	r27
    1360:	f7 95       	ror	r31
    1362:	9f 5f       	subi	r25, 0xFF	; 255
    1364:	c9 f7       	brne	.-14     	; 0x1358 <__divsf3_pse+0x78>
    1366:	88 0f       	add	r24, r24
    1368:	91 1d       	adc	r25, r1
    136a:	96 95       	lsr	r25
    136c:	87 95       	ror	r24
    136e:	97 f9       	bld	r25, 7
    1370:	08 95       	ret
    1372:	e1 e0       	ldi	r30, 0x01	; 1
    1374:	66 0f       	add	r22, r22
    1376:	77 1f       	adc	r23, r23
    1378:	88 1f       	adc	r24, r24
    137a:	bb 1f       	adc	r27, r27
    137c:	62 17       	cp	r22, r18
    137e:	73 07       	cpc	r23, r19
    1380:	84 07       	cpc	r24, r20
    1382:	ba 07       	cpc	r27, r26
    1384:	20 f0       	brcs	.+8      	; 0x138e <__divsf3_pse+0xae>
    1386:	62 1b       	sub	r22, r18
    1388:	73 0b       	sbc	r23, r19
    138a:	84 0b       	sbc	r24, r20
    138c:	ba 0b       	sbc	r27, r26
    138e:	ee 1f       	adc	r30, r30
    1390:	88 f7       	brcc	.-30     	; 0x1374 <__divsf3_pse+0x94>
    1392:	e0 95       	com	r30
    1394:	08 95       	ret

00001396 <__fixunssfsi>:
    1396:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fp_splitA>
    139a:	88 f0       	brcs	.+34     	; 0x13be <__fixunssfsi+0x28>
    139c:	9f 57       	subi	r25, 0x7F	; 127
    139e:	98 f0       	brcs	.+38     	; 0x13c6 <__fixunssfsi+0x30>
    13a0:	b9 2f       	mov	r27, r25
    13a2:	99 27       	eor	r25, r25
    13a4:	b7 51       	subi	r27, 0x17	; 23
    13a6:	b0 f0       	brcs	.+44     	; 0x13d4 <__fixunssfsi+0x3e>
    13a8:	e1 f0       	breq	.+56     	; 0x13e2 <__fixunssfsi+0x4c>
    13aa:	66 0f       	add	r22, r22
    13ac:	77 1f       	adc	r23, r23
    13ae:	88 1f       	adc	r24, r24
    13b0:	99 1f       	adc	r25, r25
    13b2:	1a f0       	brmi	.+6      	; 0x13ba <__fixunssfsi+0x24>
    13b4:	ba 95       	dec	r27
    13b6:	c9 f7       	brne	.-14     	; 0x13aa <__fixunssfsi+0x14>
    13b8:	14 c0       	rjmp	.+40     	; 0x13e2 <__fixunssfsi+0x4c>
    13ba:	b1 30       	cpi	r27, 0x01	; 1
    13bc:	91 f0       	breq	.+36     	; 0x13e2 <__fixunssfsi+0x4c>
    13be:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <__fp_zero>
    13c2:	b1 e0       	ldi	r27, 0x01	; 1
    13c4:	08 95       	ret
    13c6:	0c 94 e3 0a 	jmp	0x15c6	; 0x15c6 <__fp_zero>
    13ca:	67 2f       	mov	r22, r23
    13cc:	78 2f       	mov	r23, r24
    13ce:	88 27       	eor	r24, r24
    13d0:	b8 5f       	subi	r27, 0xF8	; 248
    13d2:	39 f0       	breq	.+14     	; 0x13e2 <__fixunssfsi+0x4c>
    13d4:	b9 3f       	cpi	r27, 0xF9	; 249
    13d6:	cc f3       	brlt	.-14     	; 0x13ca <__fixunssfsi+0x34>
    13d8:	86 95       	lsr	r24
    13da:	77 95       	ror	r23
    13dc:	67 95       	ror	r22
    13de:	b3 95       	inc	r27
    13e0:	d9 f7       	brne	.-10     	; 0x13d8 <__fixunssfsi+0x42>
    13e2:	3e f4       	brtc	.+14     	; 0x13f2 <__fixunssfsi+0x5c>
    13e4:	90 95       	com	r25
    13e6:	80 95       	com	r24
    13e8:	70 95       	com	r23
    13ea:	61 95       	neg	r22
    13ec:	7f 4f       	sbci	r23, 0xFF	; 255
    13ee:	8f 4f       	sbci	r24, 0xFF	; 255
    13f0:	9f 4f       	sbci	r25, 0xFF	; 255
    13f2:	08 95       	ret

000013f4 <__floatunsisf>:
    13f4:	e8 94       	clt
    13f6:	09 c0       	rjmp	.+18     	; 0x140a <__floatsisf+0x12>

000013f8 <__floatsisf>:
    13f8:	97 fb       	bst	r25, 7
    13fa:	3e f4       	brtc	.+14     	; 0x140a <__floatsisf+0x12>
    13fc:	90 95       	com	r25
    13fe:	80 95       	com	r24
    1400:	70 95       	com	r23
    1402:	61 95       	neg	r22
    1404:	7f 4f       	sbci	r23, 0xFF	; 255
    1406:	8f 4f       	sbci	r24, 0xFF	; 255
    1408:	9f 4f       	sbci	r25, 0xFF	; 255
    140a:	99 23       	and	r25, r25
    140c:	a9 f0       	breq	.+42     	; 0x1438 <__floatsisf+0x40>
    140e:	f9 2f       	mov	r31, r25
    1410:	96 e9       	ldi	r25, 0x96	; 150
    1412:	bb 27       	eor	r27, r27
    1414:	93 95       	inc	r25
    1416:	f6 95       	lsr	r31
    1418:	87 95       	ror	r24
    141a:	77 95       	ror	r23
    141c:	67 95       	ror	r22
    141e:	b7 95       	ror	r27
    1420:	f1 11       	cpse	r31, r1
    1422:	f8 cf       	rjmp	.-16     	; 0x1414 <__floatsisf+0x1c>
    1424:	fa f4       	brpl	.+62     	; 0x1464 <__floatsisf+0x6c>
    1426:	bb 0f       	add	r27, r27
    1428:	11 f4       	brne	.+4      	; 0x142e <__floatsisf+0x36>
    142a:	60 ff       	sbrs	r22, 0
    142c:	1b c0       	rjmp	.+54     	; 0x1464 <__floatsisf+0x6c>
    142e:	6f 5f       	subi	r22, 0xFF	; 255
    1430:	7f 4f       	sbci	r23, 0xFF	; 255
    1432:	8f 4f       	sbci	r24, 0xFF	; 255
    1434:	9f 4f       	sbci	r25, 0xFF	; 255
    1436:	16 c0       	rjmp	.+44     	; 0x1464 <__floatsisf+0x6c>
    1438:	88 23       	and	r24, r24
    143a:	11 f0       	breq	.+4      	; 0x1440 <__floatsisf+0x48>
    143c:	96 e9       	ldi	r25, 0x96	; 150
    143e:	11 c0       	rjmp	.+34     	; 0x1462 <__floatsisf+0x6a>
    1440:	77 23       	and	r23, r23
    1442:	21 f0       	breq	.+8      	; 0x144c <__floatsisf+0x54>
    1444:	9e e8       	ldi	r25, 0x8E	; 142
    1446:	87 2f       	mov	r24, r23
    1448:	76 2f       	mov	r23, r22
    144a:	05 c0       	rjmp	.+10     	; 0x1456 <__floatsisf+0x5e>
    144c:	66 23       	and	r22, r22
    144e:	71 f0       	breq	.+28     	; 0x146c <__floatsisf+0x74>
    1450:	96 e8       	ldi	r25, 0x86	; 134
    1452:	86 2f       	mov	r24, r22
    1454:	70 e0       	ldi	r23, 0x00	; 0
    1456:	60 e0       	ldi	r22, 0x00	; 0
    1458:	2a f0       	brmi	.+10     	; 0x1464 <__floatsisf+0x6c>
    145a:	9a 95       	dec	r25
    145c:	66 0f       	add	r22, r22
    145e:	77 1f       	adc	r23, r23
    1460:	88 1f       	adc	r24, r24
    1462:	da f7       	brpl	.-10     	; 0x145a <__floatsisf+0x62>
    1464:	88 0f       	add	r24, r24
    1466:	96 95       	lsr	r25
    1468:	87 95       	ror	r24
    146a:	97 f9       	bld	r25, 7
    146c:	08 95       	ret

0000146e <fmax>:
    146e:	99 0f       	add	r25, r25
    1470:	bb 0b       	sbc	r27, r27
    1472:	55 0f       	add	r21, r21
    1474:	aa 0b       	sbc	r26, r26
    1476:	e0 e8       	ldi	r30, 0x80	; 128
    1478:	fe ef       	ldi	r31, 0xFE	; 254
    147a:	16 16       	cp	r1, r22
    147c:	17 06       	cpc	r1, r23
    147e:	e8 07       	cpc	r30, r24
    1480:	f9 07       	cpc	r31, r25
    1482:	70 f0       	brcs	.+28     	; 0x14a0 <fmax+0x32>
    1484:	12 16       	cp	r1, r18
    1486:	13 06       	cpc	r1, r19
    1488:	e4 07       	cpc	r30, r20
    148a:	f5 07       	cpc	r31, r21
    148c:	60 f0       	brcs	.+24     	; 0x14a6 <fmax+0x38>
    148e:	ba 17       	cp	r27, r26
    1490:	3c f0       	brlt	.+14     	; 0x14a0 <fmax+0x32>
    1492:	49 f4       	brne	.+18     	; 0x14a6 <fmax+0x38>
    1494:	62 17       	cp	r22, r18
    1496:	73 07       	cpc	r23, r19
    1498:	84 07       	cpc	r24, r20
    149a:	95 07       	cpc	r25, r21
    149c:	a7 95       	ror	r26
    149e:	1b f4       	brvc	.+6      	; 0x14a6 <fmax+0x38>
    14a0:	b9 01       	movw	r22, r18
    14a2:	ca 01       	movw	r24, r20
    14a4:	ba 2f       	mov	r27, r26
    14a6:	b6 95       	lsr	r27
    14a8:	97 95       	ror	r25
    14aa:	08 95       	ret

000014ac <fmin>:
    14ac:	99 0f       	add	r25, r25
    14ae:	bb 0b       	sbc	r27, r27
    14b0:	55 0f       	add	r21, r21
    14b2:	aa 0b       	sbc	r26, r26
    14b4:	e0 e8       	ldi	r30, 0x80	; 128
    14b6:	fe ef       	ldi	r31, 0xFE	; 254
    14b8:	16 16       	cp	r1, r22
    14ba:	17 06       	cpc	r1, r23
    14bc:	e8 07       	cpc	r30, r24
    14be:	f9 07       	cpc	r31, r25
    14c0:	70 f0       	brcs	.+28     	; 0x14de <fmin+0x32>
    14c2:	12 16       	cp	r1, r18
    14c4:	13 06       	cpc	r1, r19
    14c6:	e4 07       	cpc	r30, r20
    14c8:	f5 07       	cpc	r31, r21
    14ca:	60 f0       	brcs	.+24     	; 0x14e4 <fmin+0x38>
    14cc:	ba 17       	cp	r27, r26
    14ce:	54 f0       	brlt	.+20     	; 0x14e4 <fmin+0x38>
    14d0:	31 f4       	brne	.+12     	; 0x14de <fmin+0x32>
    14d2:	26 17       	cp	r18, r22
    14d4:	37 07       	cpc	r19, r23
    14d6:	48 07       	cpc	r20, r24
    14d8:	59 07       	cpc	r21, r25
    14da:	a7 95       	ror	r26
    14dc:	1b f4       	brvc	.+6      	; 0x14e4 <fmin+0x38>
    14de:	b9 01       	movw	r22, r18
    14e0:	ca 01       	movw	r24, r20
    14e2:	ba 2f       	mov	r27, r26
    14e4:	b6 95       	lsr	r27
    14e6:	97 95       	ror	r25
    14e8:	08 95       	ret

000014ea <__fp_cmp>:
    14ea:	99 0f       	add	r25, r25
    14ec:	00 08       	sbc	r0, r0
    14ee:	55 0f       	add	r21, r21
    14f0:	aa 0b       	sbc	r26, r26
    14f2:	e0 e8       	ldi	r30, 0x80	; 128
    14f4:	fe ef       	ldi	r31, 0xFE	; 254
    14f6:	16 16       	cp	r1, r22
    14f8:	17 06       	cpc	r1, r23
    14fa:	e8 07       	cpc	r30, r24
    14fc:	f9 07       	cpc	r31, r25
    14fe:	c0 f0       	brcs	.+48     	; 0x1530 <__fp_cmp+0x46>
    1500:	12 16       	cp	r1, r18
    1502:	13 06       	cpc	r1, r19
    1504:	e4 07       	cpc	r30, r20
    1506:	f5 07       	cpc	r31, r21
    1508:	98 f0       	brcs	.+38     	; 0x1530 <__fp_cmp+0x46>
    150a:	62 1b       	sub	r22, r18
    150c:	73 0b       	sbc	r23, r19
    150e:	84 0b       	sbc	r24, r20
    1510:	95 0b       	sbc	r25, r21
    1512:	39 f4       	brne	.+14     	; 0x1522 <__fp_cmp+0x38>
    1514:	0a 26       	eor	r0, r26
    1516:	61 f0       	breq	.+24     	; 0x1530 <__fp_cmp+0x46>
    1518:	23 2b       	or	r18, r19
    151a:	24 2b       	or	r18, r20
    151c:	25 2b       	or	r18, r21
    151e:	21 f4       	brne	.+8      	; 0x1528 <__fp_cmp+0x3e>
    1520:	08 95       	ret
    1522:	0a 26       	eor	r0, r26
    1524:	09 f4       	brne	.+2      	; 0x1528 <__fp_cmp+0x3e>
    1526:	a1 40       	sbci	r26, 0x01	; 1
    1528:	a6 95       	lsr	r26
    152a:	8f ef       	ldi	r24, 0xFF	; 255
    152c:	81 1d       	adc	r24, r1
    152e:	81 1d       	adc	r24, r1
    1530:	08 95       	ret

00001532 <__fp_inf>:
    1532:	97 f9       	bld	r25, 7
    1534:	9f 67       	ori	r25, 0x7F	; 127
    1536:	80 e8       	ldi	r24, 0x80	; 128
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	60 e0       	ldi	r22, 0x00	; 0
    153c:	08 95       	ret

0000153e <__fp_nan>:
    153e:	9f ef       	ldi	r25, 0xFF	; 255
    1540:	80 ec       	ldi	r24, 0xC0	; 192
    1542:	08 95       	ret

00001544 <__fp_pscA>:
    1544:	00 24       	eor	r0, r0
    1546:	0a 94       	dec	r0
    1548:	16 16       	cp	r1, r22
    154a:	17 06       	cpc	r1, r23
    154c:	18 06       	cpc	r1, r24
    154e:	09 06       	cpc	r0, r25
    1550:	08 95       	ret

00001552 <__fp_pscB>:
    1552:	00 24       	eor	r0, r0
    1554:	0a 94       	dec	r0
    1556:	12 16       	cp	r1, r18
    1558:	13 06       	cpc	r1, r19
    155a:	14 06       	cpc	r1, r20
    155c:	05 06       	cpc	r0, r21
    155e:	08 95       	ret

00001560 <__fp_round>:
    1560:	09 2e       	mov	r0, r25
    1562:	03 94       	inc	r0
    1564:	00 0c       	add	r0, r0
    1566:	11 f4       	brne	.+4      	; 0x156c <__fp_round+0xc>
    1568:	88 23       	and	r24, r24
    156a:	52 f0       	brmi	.+20     	; 0x1580 <__fp_round+0x20>
    156c:	bb 0f       	add	r27, r27
    156e:	40 f4       	brcc	.+16     	; 0x1580 <__fp_round+0x20>
    1570:	bf 2b       	or	r27, r31
    1572:	11 f4       	brne	.+4      	; 0x1578 <__fp_round+0x18>
    1574:	60 ff       	sbrs	r22, 0
    1576:	04 c0       	rjmp	.+8      	; 0x1580 <__fp_round+0x20>
    1578:	6f 5f       	subi	r22, 0xFF	; 255
    157a:	7f 4f       	sbci	r23, 0xFF	; 255
    157c:	8f 4f       	sbci	r24, 0xFF	; 255
    157e:	9f 4f       	sbci	r25, 0xFF	; 255
    1580:	08 95       	ret

00001582 <__fp_split3>:
    1582:	57 fd       	sbrc	r21, 7
    1584:	90 58       	subi	r25, 0x80	; 128
    1586:	44 0f       	add	r20, r20
    1588:	55 1f       	adc	r21, r21
    158a:	59 f0       	breq	.+22     	; 0x15a2 <__fp_splitA+0x10>
    158c:	5f 3f       	cpi	r21, 0xFF	; 255
    158e:	71 f0       	breq	.+28     	; 0x15ac <__fp_splitA+0x1a>
    1590:	47 95       	ror	r20

00001592 <__fp_splitA>:
    1592:	88 0f       	add	r24, r24
    1594:	97 fb       	bst	r25, 7
    1596:	99 1f       	adc	r25, r25
    1598:	61 f0       	breq	.+24     	; 0x15b2 <__fp_splitA+0x20>
    159a:	9f 3f       	cpi	r25, 0xFF	; 255
    159c:	79 f0       	breq	.+30     	; 0x15bc <__fp_splitA+0x2a>
    159e:	87 95       	ror	r24
    15a0:	08 95       	ret
    15a2:	12 16       	cp	r1, r18
    15a4:	13 06       	cpc	r1, r19
    15a6:	14 06       	cpc	r1, r20
    15a8:	55 1f       	adc	r21, r21
    15aa:	f2 cf       	rjmp	.-28     	; 0x1590 <__fp_split3+0xe>
    15ac:	46 95       	lsr	r20
    15ae:	f1 df       	rcall	.-30     	; 0x1592 <__fp_splitA>
    15b0:	08 c0       	rjmp	.+16     	; 0x15c2 <__fp_splitA+0x30>
    15b2:	16 16       	cp	r1, r22
    15b4:	17 06       	cpc	r1, r23
    15b6:	18 06       	cpc	r1, r24
    15b8:	99 1f       	adc	r25, r25
    15ba:	f1 cf       	rjmp	.-30     	; 0x159e <__fp_splitA+0xc>
    15bc:	86 95       	lsr	r24
    15be:	71 05       	cpc	r23, r1
    15c0:	61 05       	cpc	r22, r1
    15c2:	08 94       	sec
    15c4:	08 95       	ret

000015c6 <__fp_zero>:
    15c6:	e8 94       	clt

000015c8 <__fp_szero>:
    15c8:	bb 27       	eor	r27, r27
    15ca:	66 27       	eor	r22, r22
    15cc:	77 27       	eor	r23, r23
    15ce:	cb 01       	movw	r24, r22
    15d0:	97 f9       	bld	r25, 7
    15d2:	08 95       	ret

000015d4 <__gesf2>:
    15d4:	0e 94 75 0a 	call	0x14ea	; 0x14ea <__fp_cmp>
    15d8:	08 f4       	brcc	.+2      	; 0x15dc <__gesf2+0x8>
    15da:	8f ef       	ldi	r24, 0xFF	; 255
    15dc:	08 95       	ret

000015de <__mulsf3>:
    15de:	0e 94 02 0b 	call	0x1604	; 0x1604 <__mulsf3x>
    15e2:	0c 94 b0 0a 	jmp	0x1560	; 0x1560 <__fp_round>
    15e6:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__fp_pscA>
    15ea:	38 f0       	brcs	.+14     	; 0x15fa <__mulsf3+0x1c>
    15ec:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__fp_pscB>
    15f0:	20 f0       	brcs	.+8      	; 0x15fa <__mulsf3+0x1c>
    15f2:	95 23       	and	r25, r21
    15f4:	11 f0       	breq	.+4      	; 0x15fa <__mulsf3+0x1c>
    15f6:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__fp_inf>
    15fa:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__fp_nan>
    15fe:	11 24       	eor	r1, r1
    1600:	0c 94 e4 0a 	jmp	0x15c8	; 0x15c8 <__fp_szero>

00001604 <__mulsf3x>:
    1604:	0e 94 c1 0a 	call	0x1582	; 0x1582 <__fp_split3>
    1608:	70 f3       	brcs	.-36     	; 0x15e6 <__mulsf3+0x8>

0000160a <__mulsf3_pse>:
    160a:	95 9f       	mul	r25, r21
    160c:	c1 f3       	breq	.-16     	; 0x15fe <__mulsf3+0x20>
    160e:	95 0f       	add	r25, r21
    1610:	50 e0       	ldi	r21, 0x00	; 0
    1612:	55 1f       	adc	r21, r21
    1614:	62 9f       	mul	r22, r18
    1616:	f0 01       	movw	r30, r0
    1618:	72 9f       	mul	r23, r18
    161a:	bb 27       	eor	r27, r27
    161c:	f0 0d       	add	r31, r0
    161e:	b1 1d       	adc	r27, r1
    1620:	63 9f       	mul	r22, r19
    1622:	aa 27       	eor	r26, r26
    1624:	f0 0d       	add	r31, r0
    1626:	b1 1d       	adc	r27, r1
    1628:	aa 1f       	adc	r26, r26
    162a:	64 9f       	mul	r22, r20
    162c:	66 27       	eor	r22, r22
    162e:	b0 0d       	add	r27, r0
    1630:	a1 1d       	adc	r26, r1
    1632:	66 1f       	adc	r22, r22
    1634:	82 9f       	mul	r24, r18
    1636:	22 27       	eor	r18, r18
    1638:	b0 0d       	add	r27, r0
    163a:	a1 1d       	adc	r26, r1
    163c:	62 1f       	adc	r22, r18
    163e:	73 9f       	mul	r23, r19
    1640:	b0 0d       	add	r27, r0
    1642:	a1 1d       	adc	r26, r1
    1644:	62 1f       	adc	r22, r18
    1646:	83 9f       	mul	r24, r19
    1648:	a0 0d       	add	r26, r0
    164a:	61 1d       	adc	r22, r1
    164c:	22 1f       	adc	r18, r18
    164e:	74 9f       	mul	r23, r20
    1650:	33 27       	eor	r19, r19
    1652:	a0 0d       	add	r26, r0
    1654:	61 1d       	adc	r22, r1
    1656:	23 1f       	adc	r18, r19
    1658:	84 9f       	mul	r24, r20
    165a:	60 0d       	add	r22, r0
    165c:	21 1d       	adc	r18, r1
    165e:	82 2f       	mov	r24, r18
    1660:	76 2f       	mov	r23, r22
    1662:	6a 2f       	mov	r22, r26
    1664:	11 24       	eor	r1, r1
    1666:	9f 57       	subi	r25, 0x7F	; 127
    1668:	50 40       	sbci	r21, 0x00	; 0
    166a:	9a f0       	brmi	.+38     	; 0x1692 <__mulsf3_pse+0x88>
    166c:	f1 f0       	breq	.+60     	; 0x16aa <__mulsf3_pse+0xa0>
    166e:	88 23       	and	r24, r24
    1670:	4a f0       	brmi	.+18     	; 0x1684 <__mulsf3_pse+0x7a>
    1672:	ee 0f       	add	r30, r30
    1674:	ff 1f       	adc	r31, r31
    1676:	bb 1f       	adc	r27, r27
    1678:	66 1f       	adc	r22, r22
    167a:	77 1f       	adc	r23, r23
    167c:	88 1f       	adc	r24, r24
    167e:	91 50       	subi	r25, 0x01	; 1
    1680:	50 40       	sbci	r21, 0x00	; 0
    1682:	a9 f7       	brne	.-22     	; 0x166e <__mulsf3_pse+0x64>
    1684:	9e 3f       	cpi	r25, 0xFE	; 254
    1686:	51 05       	cpc	r21, r1
    1688:	80 f0       	brcs	.+32     	; 0x16aa <__mulsf3_pse+0xa0>
    168a:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <__fp_inf>
    168e:	0c 94 e4 0a 	jmp	0x15c8	; 0x15c8 <__fp_szero>
    1692:	5f 3f       	cpi	r21, 0xFF	; 255
    1694:	e4 f3       	brlt	.-8      	; 0x168e <__mulsf3_pse+0x84>
    1696:	98 3e       	cpi	r25, 0xE8	; 232
    1698:	d4 f3       	brlt	.-12     	; 0x168e <__mulsf3_pse+0x84>
    169a:	86 95       	lsr	r24
    169c:	77 95       	ror	r23
    169e:	67 95       	ror	r22
    16a0:	b7 95       	ror	r27
    16a2:	f7 95       	ror	r31
    16a4:	e7 95       	ror	r30
    16a6:	9f 5f       	subi	r25, 0xFF	; 255
    16a8:	c1 f7       	brne	.-16     	; 0x169a <__mulsf3_pse+0x90>
    16aa:	fe 2b       	or	r31, r30
    16ac:	88 0f       	add	r24, r24
    16ae:	91 1d       	adc	r25, r1
    16b0:	96 95       	lsr	r25
    16b2:	87 95       	ror	r24
    16b4:	97 f9       	bld	r25, 7
    16b6:	08 95       	ret

000016b8 <do_rand>:
    16b8:	8f 92       	push	r8
    16ba:	9f 92       	push	r9
    16bc:	af 92       	push	r10
    16be:	bf 92       	push	r11
    16c0:	cf 92       	push	r12
    16c2:	df 92       	push	r13
    16c4:	ef 92       	push	r14
    16c6:	ff 92       	push	r15
    16c8:	cf 93       	push	r28
    16ca:	df 93       	push	r29
    16cc:	ec 01       	movw	r28, r24
    16ce:	68 81       	ld	r22, Y
    16d0:	79 81       	ldd	r23, Y+1	; 0x01
    16d2:	8a 81       	ldd	r24, Y+2	; 0x02
    16d4:	9b 81       	ldd	r25, Y+3	; 0x03
    16d6:	61 15       	cp	r22, r1
    16d8:	71 05       	cpc	r23, r1
    16da:	81 05       	cpc	r24, r1
    16dc:	91 05       	cpc	r25, r1
    16de:	21 f4       	brne	.+8      	; 0x16e8 <do_rand+0x30>
    16e0:	64 e2       	ldi	r22, 0x24	; 36
    16e2:	79 ed       	ldi	r23, 0xD9	; 217
    16e4:	8b e5       	ldi	r24, 0x5B	; 91
    16e6:	97 e0       	ldi	r25, 0x07	; 7
    16e8:	2d e1       	ldi	r18, 0x1D	; 29
    16ea:	33 ef       	ldi	r19, 0xF3	; 243
    16ec:	41 e0       	ldi	r20, 0x01	; 1
    16ee:	50 e0       	ldi	r21, 0x00	; 0
    16f0:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <__divmodsi4>
    16f4:	49 01       	movw	r8, r18
    16f6:	5a 01       	movw	r10, r20
    16f8:	9b 01       	movw	r18, r22
    16fa:	ac 01       	movw	r20, r24
    16fc:	a7 ea       	ldi	r26, 0xA7	; 167
    16fe:	b1 e4       	ldi	r27, 0x41	; 65
    1700:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <__muluhisi3>
    1704:	6b 01       	movw	r12, r22
    1706:	7c 01       	movw	r14, r24
    1708:	ac ee       	ldi	r26, 0xEC	; 236
    170a:	b4 ef       	ldi	r27, 0xF4	; 244
    170c:	a5 01       	movw	r20, r10
    170e:	94 01       	movw	r18, r8
    1710:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <__mulohisi3>
    1714:	dc 01       	movw	r26, r24
    1716:	cb 01       	movw	r24, r22
    1718:	8c 0d       	add	r24, r12
    171a:	9d 1d       	adc	r25, r13
    171c:	ae 1d       	adc	r26, r14
    171e:	bf 1d       	adc	r27, r15
    1720:	b7 ff       	sbrs	r27, 7
    1722:	03 c0       	rjmp	.+6      	; 0x172a <do_rand+0x72>
    1724:	01 97       	sbiw	r24, 0x01	; 1
    1726:	a1 09       	sbc	r26, r1
    1728:	b0 48       	sbci	r27, 0x80	; 128
    172a:	88 83       	st	Y, r24
    172c:	99 83       	std	Y+1, r25	; 0x01
    172e:	aa 83       	std	Y+2, r26	; 0x02
    1730:	bb 83       	std	Y+3, r27	; 0x03
    1732:	9f 77       	andi	r25, 0x7F	; 127
    1734:	df 91       	pop	r29
    1736:	cf 91       	pop	r28
    1738:	ff 90       	pop	r15
    173a:	ef 90       	pop	r14
    173c:	df 90       	pop	r13
    173e:	cf 90       	pop	r12
    1740:	bf 90       	pop	r11
    1742:	af 90       	pop	r10
    1744:	9f 90       	pop	r9
    1746:	8f 90       	pop	r8
    1748:	08 95       	ret

0000174a <rand_r>:
    174a:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <do_rand>
    174e:	08 95       	ret

00001750 <rand>:
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	91 e0       	ldi	r25, 0x01	; 1
    1754:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <do_rand>
    1758:	08 95       	ret

0000175a <srand>:
    175a:	a0 e0       	ldi	r26, 0x00	; 0
    175c:	b0 e0       	ldi	r27, 0x00	; 0
    175e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1762:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1766:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    176a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    176e:	08 95       	ret

00001770 <sprintf>:
    1770:	ae e0       	ldi	r26, 0x0E	; 14
    1772:	b0 e0       	ldi	r27, 0x00	; 0
    1774:	ee eb       	ldi	r30, 0xBE	; 190
    1776:	fb e0       	ldi	r31, 0x0B	; 11
    1778:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__prologue_saves__+0x1c>
    177c:	0d 89       	ldd	r16, Y+21	; 0x15
    177e:	1e 89       	ldd	r17, Y+22	; 0x16
    1780:	86 e0       	ldi	r24, 0x06	; 6
    1782:	8c 83       	std	Y+4, r24	; 0x04
    1784:	1a 83       	std	Y+2, r17	; 0x02
    1786:	09 83       	std	Y+1, r16	; 0x01
    1788:	8f ef       	ldi	r24, 0xFF	; 255
    178a:	9f e7       	ldi	r25, 0x7F	; 127
    178c:	9e 83       	std	Y+6, r25	; 0x06
    178e:	8d 83       	std	Y+5, r24	; 0x05
    1790:	ae 01       	movw	r20, r28
    1792:	47 5e       	subi	r20, 0xE7	; 231
    1794:	5f 4f       	sbci	r21, 0xFF	; 255
    1796:	6f 89       	ldd	r22, Y+23	; 0x17
    1798:	78 8d       	ldd	r23, Y+24	; 0x18
    179a:	ce 01       	movw	r24, r28
    179c:	01 96       	adiw	r24, 0x01	; 1
    179e:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <vfprintf>
    17a2:	ef 81       	ldd	r30, Y+7	; 0x07
    17a4:	f8 85       	ldd	r31, Y+8	; 0x08
    17a6:	e0 0f       	add	r30, r16
    17a8:	f1 1f       	adc	r31, r17
    17aa:	10 82       	st	Z, r1
    17ac:	2e 96       	adiw	r28, 0x0e	; 14
    17ae:	e4 e0       	ldi	r30, 0x04	; 4
    17b0:	0c 94 c7 0e 	jmp	0x1d8e	; 0x1d8e <__epilogue_restores__+0x1c>

000017b4 <vfprintf>:
    17b4:	ab e0       	ldi	r26, 0x0B	; 11
    17b6:	b0 e0       	ldi	r27, 0x00	; 0
    17b8:	e0 ee       	ldi	r30, 0xE0	; 224
    17ba:	fb e0       	ldi	r31, 0x0B	; 11
    17bc:	0c 94 9d 0e 	jmp	0x1d3a	; 0x1d3a <__prologue_saves__>
    17c0:	6c 01       	movw	r12, r24
    17c2:	7b 01       	movw	r14, r22
    17c4:	8a 01       	movw	r16, r20
    17c6:	fc 01       	movw	r30, r24
    17c8:	17 82       	std	Z+7, r1	; 0x07
    17ca:	16 82       	std	Z+6, r1	; 0x06
    17cc:	83 81       	ldd	r24, Z+3	; 0x03
    17ce:	81 ff       	sbrs	r24, 1
    17d0:	cc c1       	rjmp	.+920    	; 0x1b6a <vfprintf+0x3b6>
    17d2:	ce 01       	movw	r24, r28
    17d4:	01 96       	adiw	r24, 0x01	; 1
    17d6:	3c 01       	movw	r6, r24
    17d8:	f6 01       	movw	r30, r12
    17da:	93 81       	ldd	r25, Z+3	; 0x03
    17dc:	f7 01       	movw	r30, r14
    17de:	93 fd       	sbrc	r25, 3
    17e0:	85 91       	lpm	r24, Z+
    17e2:	93 ff       	sbrs	r25, 3
    17e4:	81 91       	ld	r24, Z+
    17e6:	7f 01       	movw	r14, r30
    17e8:	88 23       	and	r24, r24
    17ea:	09 f4       	brne	.+2      	; 0x17ee <vfprintf+0x3a>
    17ec:	ba c1       	rjmp	.+884    	; 0x1b62 <vfprintf+0x3ae>
    17ee:	85 32       	cpi	r24, 0x25	; 37
    17f0:	39 f4       	brne	.+14     	; 0x1800 <vfprintf+0x4c>
    17f2:	93 fd       	sbrc	r25, 3
    17f4:	85 91       	lpm	r24, Z+
    17f6:	93 ff       	sbrs	r25, 3
    17f8:	81 91       	ld	r24, Z+
    17fa:	7f 01       	movw	r14, r30
    17fc:	85 32       	cpi	r24, 0x25	; 37
    17fe:	29 f4       	brne	.+10     	; 0x180a <vfprintf+0x56>
    1800:	b6 01       	movw	r22, r12
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1808:	e7 cf       	rjmp	.-50     	; 0x17d8 <vfprintf+0x24>
    180a:	91 2c       	mov	r9, r1
    180c:	21 2c       	mov	r2, r1
    180e:	31 2c       	mov	r3, r1
    1810:	ff e1       	ldi	r31, 0x1F	; 31
    1812:	f3 15       	cp	r31, r3
    1814:	d8 f0       	brcs	.+54     	; 0x184c <vfprintf+0x98>
    1816:	8b 32       	cpi	r24, 0x2B	; 43
    1818:	79 f0       	breq	.+30     	; 0x1838 <vfprintf+0x84>
    181a:	38 f4       	brcc	.+14     	; 0x182a <vfprintf+0x76>
    181c:	80 32       	cpi	r24, 0x20	; 32
    181e:	79 f0       	breq	.+30     	; 0x183e <vfprintf+0x8a>
    1820:	83 32       	cpi	r24, 0x23	; 35
    1822:	a1 f4       	brne	.+40     	; 0x184c <vfprintf+0x98>
    1824:	23 2d       	mov	r18, r3
    1826:	20 61       	ori	r18, 0x10	; 16
    1828:	1d c0       	rjmp	.+58     	; 0x1864 <vfprintf+0xb0>
    182a:	8d 32       	cpi	r24, 0x2D	; 45
    182c:	61 f0       	breq	.+24     	; 0x1846 <vfprintf+0x92>
    182e:	80 33       	cpi	r24, 0x30	; 48
    1830:	69 f4       	brne	.+26     	; 0x184c <vfprintf+0x98>
    1832:	23 2d       	mov	r18, r3
    1834:	21 60       	ori	r18, 0x01	; 1
    1836:	16 c0       	rjmp	.+44     	; 0x1864 <vfprintf+0xb0>
    1838:	83 2d       	mov	r24, r3
    183a:	82 60       	ori	r24, 0x02	; 2
    183c:	38 2e       	mov	r3, r24
    183e:	e3 2d       	mov	r30, r3
    1840:	e4 60       	ori	r30, 0x04	; 4
    1842:	3e 2e       	mov	r3, r30
    1844:	2a c0       	rjmp	.+84     	; 0x189a <vfprintf+0xe6>
    1846:	f3 2d       	mov	r31, r3
    1848:	f8 60       	ori	r31, 0x08	; 8
    184a:	1d c0       	rjmp	.+58     	; 0x1886 <vfprintf+0xd2>
    184c:	37 fc       	sbrc	r3, 7
    184e:	2d c0       	rjmp	.+90     	; 0x18aa <vfprintf+0xf6>
    1850:	20 ed       	ldi	r18, 0xD0	; 208
    1852:	28 0f       	add	r18, r24
    1854:	2a 30       	cpi	r18, 0x0A	; 10
    1856:	40 f0       	brcs	.+16     	; 0x1868 <vfprintf+0xb4>
    1858:	8e 32       	cpi	r24, 0x2E	; 46
    185a:	b9 f4       	brne	.+46     	; 0x188a <vfprintf+0xd6>
    185c:	36 fc       	sbrc	r3, 6
    185e:	81 c1       	rjmp	.+770    	; 0x1b62 <vfprintf+0x3ae>
    1860:	23 2d       	mov	r18, r3
    1862:	20 64       	ori	r18, 0x40	; 64
    1864:	32 2e       	mov	r3, r18
    1866:	19 c0       	rjmp	.+50     	; 0x189a <vfprintf+0xe6>
    1868:	36 fe       	sbrs	r3, 6
    186a:	06 c0       	rjmp	.+12     	; 0x1878 <vfprintf+0xc4>
    186c:	8a e0       	ldi	r24, 0x0A	; 10
    186e:	98 9e       	mul	r9, r24
    1870:	20 0d       	add	r18, r0
    1872:	11 24       	eor	r1, r1
    1874:	92 2e       	mov	r9, r18
    1876:	11 c0       	rjmp	.+34     	; 0x189a <vfprintf+0xe6>
    1878:	ea e0       	ldi	r30, 0x0A	; 10
    187a:	2e 9e       	mul	r2, r30
    187c:	20 0d       	add	r18, r0
    187e:	11 24       	eor	r1, r1
    1880:	22 2e       	mov	r2, r18
    1882:	f3 2d       	mov	r31, r3
    1884:	f0 62       	ori	r31, 0x20	; 32
    1886:	3f 2e       	mov	r3, r31
    1888:	08 c0       	rjmp	.+16     	; 0x189a <vfprintf+0xe6>
    188a:	8c 36       	cpi	r24, 0x6C	; 108
    188c:	21 f4       	brne	.+8      	; 0x1896 <vfprintf+0xe2>
    188e:	83 2d       	mov	r24, r3
    1890:	80 68       	ori	r24, 0x80	; 128
    1892:	38 2e       	mov	r3, r24
    1894:	02 c0       	rjmp	.+4      	; 0x189a <vfprintf+0xe6>
    1896:	88 36       	cpi	r24, 0x68	; 104
    1898:	41 f4       	brne	.+16     	; 0x18aa <vfprintf+0xf6>
    189a:	f7 01       	movw	r30, r14
    189c:	93 fd       	sbrc	r25, 3
    189e:	85 91       	lpm	r24, Z+
    18a0:	93 ff       	sbrs	r25, 3
    18a2:	81 91       	ld	r24, Z+
    18a4:	7f 01       	movw	r14, r30
    18a6:	81 11       	cpse	r24, r1
    18a8:	b3 cf       	rjmp	.-154    	; 0x1810 <vfprintf+0x5c>
    18aa:	98 2f       	mov	r25, r24
    18ac:	9f 7d       	andi	r25, 0xDF	; 223
    18ae:	95 54       	subi	r25, 0x45	; 69
    18b0:	93 30       	cpi	r25, 0x03	; 3
    18b2:	28 f4       	brcc	.+10     	; 0x18be <vfprintf+0x10a>
    18b4:	0c 5f       	subi	r16, 0xFC	; 252
    18b6:	1f 4f       	sbci	r17, 0xFF	; 255
    18b8:	9f e3       	ldi	r25, 0x3F	; 63
    18ba:	99 83       	std	Y+1, r25	; 0x01
    18bc:	0d c0       	rjmp	.+26     	; 0x18d8 <vfprintf+0x124>
    18be:	83 36       	cpi	r24, 0x63	; 99
    18c0:	31 f0       	breq	.+12     	; 0x18ce <vfprintf+0x11a>
    18c2:	83 37       	cpi	r24, 0x73	; 115
    18c4:	71 f0       	breq	.+28     	; 0x18e2 <vfprintf+0x12e>
    18c6:	83 35       	cpi	r24, 0x53	; 83
    18c8:	09 f0       	breq	.+2      	; 0x18cc <vfprintf+0x118>
    18ca:	59 c0       	rjmp	.+178    	; 0x197e <vfprintf+0x1ca>
    18cc:	21 c0       	rjmp	.+66     	; 0x1910 <vfprintf+0x15c>
    18ce:	f8 01       	movw	r30, r16
    18d0:	80 81       	ld	r24, Z
    18d2:	89 83       	std	Y+1, r24	; 0x01
    18d4:	0e 5f       	subi	r16, 0xFE	; 254
    18d6:	1f 4f       	sbci	r17, 0xFF	; 255
    18d8:	88 24       	eor	r8, r8
    18da:	83 94       	inc	r8
    18dc:	91 2c       	mov	r9, r1
    18de:	53 01       	movw	r10, r6
    18e0:	13 c0       	rjmp	.+38     	; 0x1908 <vfprintf+0x154>
    18e2:	28 01       	movw	r4, r16
    18e4:	f2 e0       	ldi	r31, 0x02	; 2
    18e6:	4f 0e       	add	r4, r31
    18e8:	51 1c       	adc	r5, r1
    18ea:	f8 01       	movw	r30, r16
    18ec:	a0 80       	ld	r10, Z
    18ee:	b1 80       	ldd	r11, Z+1	; 0x01
    18f0:	36 fe       	sbrs	r3, 6
    18f2:	03 c0       	rjmp	.+6      	; 0x18fa <vfprintf+0x146>
    18f4:	69 2d       	mov	r22, r9
    18f6:	70 e0       	ldi	r23, 0x00	; 0
    18f8:	02 c0       	rjmp	.+4      	; 0x18fe <vfprintf+0x14a>
    18fa:	6f ef       	ldi	r22, 0xFF	; 255
    18fc:	7f ef       	ldi	r23, 0xFF	; 255
    18fe:	c5 01       	movw	r24, r10
    1900:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <strnlen>
    1904:	4c 01       	movw	r8, r24
    1906:	82 01       	movw	r16, r4
    1908:	f3 2d       	mov	r31, r3
    190a:	ff 77       	andi	r31, 0x7F	; 127
    190c:	3f 2e       	mov	r3, r31
    190e:	16 c0       	rjmp	.+44     	; 0x193c <vfprintf+0x188>
    1910:	28 01       	movw	r4, r16
    1912:	22 e0       	ldi	r18, 0x02	; 2
    1914:	42 0e       	add	r4, r18
    1916:	51 1c       	adc	r5, r1
    1918:	f8 01       	movw	r30, r16
    191a:	a0 80       	ld	r10, Z
    191c:	b1 80       	ldd	r11, Z+1	; 0x01
    191e:	36 fe       	sbrs	r3, 6
    1920:	03 c0       	rjmp	.+6      	; 0x1928 <vfprintf+0x174>
    1922:	69 2d       	mov	r22, r9
    1924:	70 e0       	ldi	r23, 0x00	; 0
    1926:	02 c0       	rjmp	.+4      	; 0x192c <vfprintf+0x178>
    1928:	6f ef       	ldi	r22, 0xFF	; 255
    192a:	7f ef       	ldi	r23, 0xFF	; 255
    192c:	c5 01       	movw	r24, r10
    192e:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <strnlen_P>
    1932:	4c 01       	movw	r8, r24
    1934:	f3 2d       	mov	r31, r3
    1936:	f0 68       	ori	r31, 0x80	; 128
    1938:	3f 2e       	mov	r3, r31
    193a:	82 01       	movw	r16, r4
    193c:	33 fc       	sbrc	r3, 3
    193e:	1b c0       	rjmp	.+54     	; 0x1976 <vfprintf+0x1c2>
    1940:	82 2d       	mov	r24, r2
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	88 16       	cp	r8, r24
    1946:	99 06       	cpc	r9, r25
    1948:	b0 f4       	brcc	.+44     	; 0x1976 <vfprintf+0x1c2>
    194a:	b6 01       	movw	r22, r12
    194c:	80 e2       	ldi	r24, 0x20	; 32
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1954:	2a 94       	dec	r2
    1956:	f4 cf       	rjmp	.-24     	; 0x1940 <vfprintf+0x18c>
    1958:	f5 01       	movw	r30, r10
    195a:	37 fc       	sbrc	r3, 7
    195c:	85 91       	lpm	r24, Z+
    195e:	37 fe       	sbrs	r3, 7
    1960:	81 91       	ld	r24, Z+
    1962:	5f 01       	movw	r10, r30
    1964:	b6 01       	movw	r22, r12
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    196c:	21 10       	cpse	r2, r1
    196e:	2a 94       	dec	r2
    1970:	21 e0       	ldi	r18, 0x01	; 1
    1972:	82 1a       	sub	r8, r18
    1974:	91 08       	sbc	r9, r1
    1976:	81 14       	cp	r8, r1
    1978:	91 04       	cpc	r9, r1
    197a:	71 f7       	brne	.-36     	; 0x1958 <vfprintf+0x1a4>
    197c:	e8 c0       	rjmp	.+464    	; 0x1b4e <vfprintf+0x39a>
    197e:	84 36       	cpi	r24, 0x64	; 100
    1980:	11 f0       	breq	.+4      	; 0x1986 <vfprintf+0x1d2>
    1982:	89 36       	cpi	r24, 0x69	; 105
    1984:	41 f5       	brne	.+80     	; 0x19d6 <vfprintf+0x222>
    1986:	f8 01       	movw	r30, r16
    1988:	37 fe       	sbrs	r3, 7
    198a:	07 c0       	rjmp	.+14     	; 0x199a <vfprintf+0x1e6>
    198c:	60 81       	ld	r22, Z
    198e:	71 81       	ldd	r23, Z+1	; 0x01
    1990:	82 81       	ldd	r24, Z+2	; 0x02
    1992:	93 81       	ldd	r25, Z+3	; 0x03
    1994:	0c 5f       	subi	r16, 0xFC	; 252
    1996:	1f 4f       	sbci	r17, 0xFF	; 255
    1998:	08 c0       	rjmp	.+16     	; 0x19aa <vfprintf+0x1f6>
    199a:	60 81       	ld	r22, Z
    199c:	71 81       	ldd	r23, Z+1	; 0x01
    199e:	07 2e       	mov	r0, r23
    19a0:	00 0c       	add	r0, r0
    19a2:	88 0b       	sbc	r24, r24
    19a4:	99 0b       	sbc	r25, r25
    19a6:	0e 5f       	subi	r16, 0xFE	; 254
    19a8:	1f 4f       	sbci	r17, 0xFF	; 255
    19aa:	f3 2d       	mov	r31, r3
    19ac:	ff 76       	andi	r31, 0x6F	; 111
    19ae:	3f 2e       	mov	r3, r31
    19b0:	97 ff       	sbrs	r25, 7
    19b2:	09 c0       	rjmp	.+18     	; 0x19c6 <vfprintf+0x212>
    19b4:	90 95       	com	r25
    19b6:	80 95       	com	r24
    19b8:	70 95       	com	r23
    19ba:	61 95       	neg	r22
    19bc:	7f 4f       	sbci	r23, 0xFF	; 255
    19be:	8f 4f       	sbci	r24, 0xFF	; 255
    19c0:	9f 4f       	sbci	r25, 0xFF	; 255
    19c2:	f0 68       	ori	r31, 0x80	; 128
    19c4:	3f 2e       	mov	r3, r31
    19c6:	2a e0       	ldi	r18, 0x0A	; 10
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	a3 01       	movw	r20, r6
    19cc:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__ultoa_invert>
    19d0:	88 2e       	mov	r8, r24
    19d2:	86 18       	sub	r8, r6
    19d4:	45 c0       	rjmp	.+138    	; 0x1a60 <vfprintf+0x2ac>
    19d6:	85 37       	cpi	r24, 0x75	; 117
    19d8:	31 f4       	brne	.+12     	; 0x19e6 <vfprintf+0x232>
    19da:	23 2d       	mov	r18, r3
    19dc:	2f 7e       	andi	r18, 0xEF	; 239
    19de:	b2 2e       	mov	r11, r18
    19e0:	2a e0       	ldi	r18, 0x0A	; 10
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	25 c0       	rjmp	.+74     	; 0x1a30 <vfprintf+0x27c>
    19e6:	93 2d       	mov	r25, r3
    19e8:	99 7f       	andi	r25, 0xF9	; 249
    19ea:	b9 2e       	mov	r11, r25
    19ec:	8f 36       	cpi	r24, 0x6F	; 111
    19ee:	c1 f0       	breq	.+48     	; 0x1a20 <vfprintf+0x26c>
    19f0:	18 f4       	brcc	.+6      	; 0x19f8 <vfprintf+0x244>
    19f2:	88 35       	cpi	r24, 0x58	; 88
    19f4:	79 f0       	breq	.+30     	; 0x1a14 <vfprintf+0x260>
    19f6:	b5 c0       	rjmp	.+362    	; 0x1b62 <vfprintf+0x3ae>
    19f8:	80 37       	cpi	r24, 0x70	; 112
    19fa:	19 f0       	breq	.+6      	; 0x1a02 <vfprintf+0x24e>
    19fc:	88 37       	cpi	r24, 0x78	; 120
    19fe:	21 f0       	breq	.+8      	; 0x1a08 <vfprintf+0x254>
    1a00:	b0 c0       	rjmp	.+352    	; 0x1b62 <vfprintf+0x3ae>
    1a02:	e9 2f       	mov	r30, r25
    1a04:	e0 61       	ori	r30, 0x10	; 16
    1a06:	be 2e       	mov	r11, r30
    1a08:	b4 fe       	sbrs	r11, 4
    1a0a:	0d c0       	rjmp	.+26     	; 0x1a26 <vfprintf+0x272>
    1a0c:	fb 2d       	mov	r31, r11
    1a0e:	f4 60       	ori	r31, 0x04	; 4
    1a10:	bf 2e       	mov	r11, r31
    1a12:	09 c0       	rjmp	.+18     	; 0x1a26 <vfprintf+0x272>
    1a14:	34 fe       	sbrs	r3, 4
    1a16:	0a c0       	rjmp	.+20     	; 0x1a2c <vfprintf+0x278>
    1a18:	29 2f       	mov	r18, r25
    1a1a:	26 60       	ori	r18, 0x06	; 6
    1a1c:	b2 2e       	mov	r11, r18
    1a1e:	06 c0       	rjmp	.+12     	; 0x1a2c <vfprintf+0x278>
    1a20:	28 e0       	ldi	r18, 0x08	; 8
    1a22:	30 e0       	ldi	r19, 0x00	; 0
    1a24:	05 c0       	rjmp	.+10     	; 0x1a30 <vfprintf+0x27c>
    1a26:	20 e1       	ldi	r18, 0x10	; 16
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	02 c0       	rjmp	.+4      	; 0x1a30 <vfprintf+0x27c>
    1a2c:	20 e1       	ldi	r18, 0x10	; 16
    1a2e:	32 e0       	ldi	r19, 0x02	; 2
    1a30:	f8 01       	movw	r30, r16
    1a32:	b7 fe       	sbrs	r11, 7
    1a34:	07 c0       	rjmp	.+14     	; 0x1a44 <vfprintf+0x290>
    1a36:	60 81       	ld	r22, Z
    1a38:	71 81       	ldd	r23, Z+1	; 0x01
    1a3a:	82 81       	ldd	r24, Z+2	; 0x02
    1a3c:	93 81       	ldd	r25, Z+3	; 0x03
    1a3e:	0c 5f       	subi	r16, 0xFC	; 252
    1a40:	1f 4f       	sbci	r17, 0xFF	; 255
    1a42:	06 c0       	rjmp	.+12     	; 0x1a50 <vfprintf+0x29c>
    1a44:	60 81       	ld	r22, Z
    1a46:	71 81       	ldd	r23, Z+1	; 0x01
    1a48:	80 e0       	ldi	r24, 0x00	; 0
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	0e 5f       	subi	r16, 0xFE	; 254
    1a4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a50:	a3 01       	movw	r20, r6
    1a52:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__ultoa_invert>
    1a56:	88 2e       	mov	r8, r24
    1a58:	86 18       	sub	r8, r6
    1a5a:	fb 2d       	mov	r31, r11
    1a5c:	ff 77       	andi	r31, 0x7F	; 127
    1a5e:	3f 2e       	mov	r3, r31
    1a60:	36 fe       	sbrs	r3, 6
    1a62:	0d c0       	rjmp	.+26     	; 0x1a7e <vfprintf+0x2ca>
    1a64:	23 2d       	mov	r18, r3
    1a66:	2e 7f       	andi	r18, 0xFE	; 254
    1a68:	a2 2e       	mov	r10, r18
    1a6a:	89 14       	cp	r8, r9
    1a6c:	58 f4       	brcc	.+22     	; 0x1a84 <vfprintf+0x2d0>
    1a6e:	34 fe       	sbrs	r3, 4
    1a70:	0b c0       	rjmp	.+22     	; 0x1a88 <vfprintf+0x2d4>
    1a72:	32 fc       	sbrc	r3, 2
    1a74:	09 c0       	rjmp	.+18     	; 0x1a88 <vfprintf+0x2d4>
    1a76:	83 2d       	mov	r24, r3
    1a78:	8e 7e       	andi	r24, 0xEE	; 238
    1a7a:	a8 2e       	mov	r10, r24
    1a7c:	05 c0       	rjmp	.+10     	; 0x1a88 <vfprintf+0x2d4>
    1a7e:	b8 2c       	mov	r11, r8
    1a80:	a3 2c       	mov	r10, r3
    1a82:	03 c0       	rjmp	.+6      	; 0x1a8a <vfprintf+0x2d6>
    1a84:	b8 2c       	mov	r11, r8
    1a86:	01 c0       	rjmp	.+2      	; 0x1a8a <vfprintf+0x2d6>
    1a88:	b9 2c       	mov	r11, r9
    1a8a:	a4 fe       	sbrs	r10, 4
    1a8c:	0f c0       	rjmp	.+30     	; 0x1aac <vfprintf+0x2f8>
    1a8e:	fe 01       	movw	r30, r28
    1a90:	e8 0d       	add	r30, r8
    1a92:	f1 1d       	adc	r31, r1
    1a94:	80 81       	ld	r24, Z
    1a96:	80 33       	cpi	r24, 0x30	; 48
    1a98:	21 f4       	brne	.+8      	; 0x1aa2 <vfprintf+0x2ee>
    1a9a:	9a 2d       	mov	r25, r10
    1a9c:	99 7e       	andi	r25, 0xE9	; 233
    1a9e:	a9 2e       	mov	r10, r25
    1aa0:	09 c0       	rjmp	.+18     	; 0x1ab4 <vfprintf+0x300>
    1aa2:	a2 fe       	sbrs	r10, 2
    1aa4:	06 c0       	rjmp	.+12     	; 0x1ab2 <vfprintf+0x2fe>
    1aa6:	b3 94       	inc	r11
    1aa8:	b3 94       	inc	r11
    1aaa:	04 c0       	rjmp	.+8      	; 0x1ab4 <vfprintf+0x300>
    1aac:	8a 2d       	mov	r24, r10
    1aae:	86 78       	andi	r24, 0x86	; 134
    1ab0:	09 f0       	breq	.+2      	; 0x1ab4 <vfprintf+0x300>
    1ab2:	b3 94       	inc	r11
    1ab4:	a3 fc       	sbrc	r10, 3
    1ab6:	11 c0       	rjmp	.+34     	; 0x1ada <vfprintf+0x326>
    1ab8:	a0 fe       	sbrs	r10, 0
    1aba:	06 c0       	rjmp	.+12     	; 0x1ac8 <vfprintf+0x314>
    1abc:	b2 14       	cp	r11, r2
    1abe:	88 f4       	brcc	.+34     	; 0x1ae2 <vfprintf+0x32e>
    1ac0:	28 0c       	add	r2, r8
    1ac2:	92 2c       	mov	r9, r2
    1ac4:	9b 18       	sub	r9, r11
    1ac6:	0e c0       	rjmp	.+28     	; 0x1ae4 <vfprintf+0x330>
    1ac8:	b2 14       	cp	r11, r2
    1aca:	60 f4       	brcc	.+24     	; 0x1ae4 <vfprintf+0x330>
    1acc:	b6 01       	movw	r22, r12
    1ace:	80 e2       	ldi	r24, 0x20	; 32
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1ad6:	b3 94       	inc	r11
    1ad8:	f7 cf       	rjmp	.-18     	; 0x1ac8 <vfprintf+0x314>
    1ada:	b2 14       	cp	r11, r2
    1adc:	18 f4       	brcc	.+6      	; 0x1ae4 <vfprintf+0x330>
    1ade:	2b 18       	sub	r2, r11
    1ae0:	02 c0       	rjmp	.+4      	; 0x1ae6 <vfprintf+0x332>
    1ae2:	98 2c       	mov	r9, r8
    1ae4:	21 2c       	mov	r2, r1
    1ae6:	a4 fe       	sbrs	r10, 4
    1ae8:	10 c0       	rjmp	.+32     	; 0x1b0a <vfprintf+0x356>
    1aea:	b6 01       	movw	r22, r12
    1aec:	80 e3       	ldi	r24, 0x30	; 48
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1af4:	a2 fe       	sbrs	r10, 2
    1af6:	17 c0       	rjmp	.+46     	; 0x1b26 <vfprintf+0x372>
    1af8:	a1 fc       	sbrc	r10, 1
    1afa:	03 c0       	rjmp	.+6      	; 0x1b02 <vfprintf+0x34e>
    1afc:	88 e7       	ldi	r24, 0x78	; 120
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	02 c0       	rjmp	.+4      	; 0x1b06 <vfprintf+0x352>
    1b02:	88 e5       	ldi	r24, 0x58	; 88
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	b6 01       	movw	r22, r12
    1b08:	0c c0       	rjmp	.+24     	; 0x1b22 <vfprintf+0x36e>
    1b0a:	8a 2d       	mov	r24, r10
    1b0c:	86 78       	andi	r24, 0x86	; 134
    1b0e:	59 f0       	breq	.+22     	; 0x1b26 <vfprintf+0x372>
    1b10:	a1 fe       	sbrs	r10, 1
    1b12:	02 c0       	rjmp	.+4      	; 0x1b18 <vfprintf+0x364>
    1b14:	8b e2       	ldi	r24, 0x2B	; 43
    1b16:	01 c0       	rjmp	.+2      	; 0x1b1a <vfprintf+0x366>
    1b18:	80 e2       	ldi	r24, 0x20	; 32
    1b1a:	a7 fc       	sbrc	r10, 7
    1b1c:	8d e2       	ldi	r24, 0x2D	; 45
    1b1e:	b6 01       	movw	r22, r12
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1b26:	89 14       	cp	r8, r9
    1b28:	38 f4       	brcc	.+14     	; 0x1b38 <vfprintf+0x384>
    1b2a:	b6 01       	movw	r22, r12
    1b2c:	80 e3       	ldi	r24, 0x30	; 48
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1b34:	9a 94       	dec	r9
    1b36:	f7 cf       	rjmp	.-18     	; 0x1b26 <vfprintf+0x372>
    1b38:	8a 94       	dec	r8
    1b3a:	f3 01       	movw	r30, r6
    1b3c:	e8 0d       	add	r30, r8
    1b3e:	f1 1d       	adc	r31, r1
    1b40:	80 81       	ld	r24, Z
    1b42:	b6 01       	movw	r22, r12
    1b44:	90 e0       	ldi	r25, 0x00	; 0
    1b46:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1b4a:	81 10       	cpse	r8, r1
    1b4c:	f5 cf       	rjmp	.-22     	; 0x1b38 <vfprintf+0x384>
    1b4e:	22 20       	and	r2, r2
    1b50:	09 f4       	brne	.+2      	; 0x1b54 <vfprintf+0x3a0>
    1b52:	42 ce       	rjmp	.-892    	; 0x17d8 <vfprintf+0x24>
    1b54:	b6 01       	movw	r22, r12
    1b56:	80 e2       	ldi	r24, 0x20	; 32
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <fputc>
    1b5e:	2a 94       	dec	r2
    1b60:	f6 cf       	rjmp	.-20     	; 0x1b4e <vfprintf+0x39a>
    1b62:	f6 01       	movw	r30, r12
    1b64:	86 81       	ldd	r24, Z+6	; 0x06
    1b66:	97 81       	ldd	r25, Z+7	; 0x07
    1b68:	02 c0       	rjmp	.+4      	; 0x1b6e <vfprintf+0x3ba>
    1b6a:	8f ef       	ldi	r24, 0xFF	; 255
    1b6c:	9f ef       	ldi	r25, 0xFF	; 255
    1b6e:	2b 96       	adiw	r28, 0x0b	; 11
    1b70:	e2 e1       	ldi	r30, 0x12	; 18
    1b72:	0c 94 b9 0e 	jmp	0x1d72	; 0x1d72 <__epilogue_restores__>

00001b76 <strnlen_P>:
    1b76:	fc 01       	movw	r30, r24
    1b78:	05 90       	lpm	r0, Z+
    1b7a:	61 50       	subi	r22, 0x01	; 1
    1b7c:	70 40       	sbci	r23, 0x00	; 0
    1b7e:	01 10       	cpse	r0, r1
    1b80:	d8 f7       	brcc	.-10     	; 0x1b78 <strnlen_P+0x2>
    1b82:	80 95       	com	r24
    1b84:	90 95       	com	r25
    1b86:	8e 0f       	add	r24, r30
    1b88:	9f 1f       	adc	r25, r31
    1b8a:	08 95       	ret

00001b8c <strnlen>:
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	61 50       	subi	r22, 0x01	; 1
    1b90:	70 40       	sbci	r23, 0x00	; 0
    1b92:	01 90       	ld	r0, Z+
    1b94:	01 10       	cpse	r0, r1
    1b96:	d8 f7       	brcc	.-10     	; 0x1b8e <strnlen+0x2>
    1b98:	80 95       	com	r24
    1b9a:	90 95       	com	r25
    1b9c:	8e 0f       	add	r24, r30
    1b9e:	9f 1f       	adc	r25, r31
    1ba0:	08 95       	ret

00001ba2 <fputc>:
    1ba2:	0f 93       	push	r16
    1ba4:	1f 93       	push	r17
    1ba6:	cf 93       	push	r28
    1ba8:	df 93       	push	r29
    1baa:	fb 01       	movw	r30, r22
    1bac:	23 81       	ldd	r18, Z+3	; 0x03
    1bae:	21 fd       	sbrc	r18, 1
    1bb0:	03 c0       	rjmp	.+6      	; 0x1bb8 <fputc+0x16>
    1bb2:	8f ef       	ldi	r24, 0xFF	; 255
    1bb4:	9f ef       	ldi	r25, 0xFF	; 255
    1bb6:	2c c0       	rjmp	.+88     	; 0x1c10 <fputc+0x6e>
    1bb8:	22 ff       	sbrs	r18, 2
    1bba:	16 c0       	rjmp	.+44     	; 0x1be8 <fputc+0x46>
    1bbc:	46 81       	ldd	r20, Z+6	; 0x06
    1bbe:	57 81       	ldd	r21, Z+7	; 0x07
    1bc0:	24 81       	ldd	r18, Z+4	; 0x04
    1bc2:	35 81       	ldd	r19, Z+5	; 0x05
    1bc4:	42 17       	cp	r20, r18
    1bc6:	53 07       	cpc	r21, r19
    1bc8:	44 f4       	brge	.+16     	; 0x1bda <fputc+0x38>
    1bca:	a0 81       	ld	r26, Z
    1bcc:	b1 81       	ldd	r27, Z+1	; 0x01
    1bce:	9d 01       	movw	r18, r26
    1bd0:	2f 5f       	subi	r18, 0xFF	; 255
    1bd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bd4:	31 83       	std	Z+1, r19	; 0x01
    1bd6:	20 83       	st	Z, r18
    1bd8:	8c 93       	st	X, r24
    1bda:	26 81       	ldd	r18, Z+6	; 0x06
    1bdc:	37 81       	ldd	r19, Z+7	; 0x07
    1bde:	2f 5f       	subi	r18, 0xFF	; 255
    1be0:	3f 4f       	sbci	r19, 0xFF	; 255
    1be2:	37 83       	std	Z+7, r19	; 0x07
    1be4:	26 83       	std	Z+6, r18	; 0x06
    1be6:	14 c0       	rjmp	.+40     	; 0x1c10 <fputc+0x6e>
    1be8:	8b 01       	movw	r16, r22
    1bea:	ec 01       	movw	r28, r24
    1bec:	fb 01       	movw	r30, r22
    1bee:	00 84       	ldd	r0, Z+8	; 0x08
    1bf0:	f1 85       	ldd	r31, Z+9	; 0x09
    1bf2:	e0 2d       	mov	r30, r0
    1bf4:	09 95       	icall
    1bf6:	89 2b       	or	r24, r25
    1bf8:	e1 f6       	brne	.-72     	; 0x1bb2 <fputc+0x10>
    1bfa:	d8 01       	movw	r26, r16
    1bfc:	16 96       	adiw	r26, 0x06	; 6
    1bfe:	8d 91       	ld	r24, X+
    1c00:	9c 91       	ld	r25, X
    1c02:	17 97       	sbiw	r26, 0x07	; 7
    1c04:	01 96       	adiw	r24, 0x01	; 1
    1c06:	17 96       	adiw	r26, 0x07	; 7
    1c08:	9c 93       	st	X, r25
    1c0a:	8e 93       	st	-X, r24
    1c0c:	16 97       	sbiw	r26, 0x06	; 6
    1c0e:	ce 01       	movw	r24, r28
    1c10:	df 91       	pop	r29
    1c12:	cf 91       	pop	r28
    1c14:	1f 91       	pop	r17
    1c16:	0f 91       	pop	r16
    1c18:	08 95       	ret

00001c1a <__ultoa_invert>:
    1c1a:	fa 01       	movw	r30, r20
    1c1c:	aa 27       	eor	r26, r26
    1c1e:	28 30       	cpi	r18, 0x08	; 8
    1c20:	51 f1       	breq	.+84     	; 0x1c76 <__ultoa_invert+0x5c>
    1c22:	20 31       	cpi	r18, 0x10	; 16
    1c24:	81 f1       	breq	.+96     	; 0x1c86 <__ultoa_invert+0x6c>
    1c26:	e8 94       	clt
    1c28:	6f 93       	push	r22
    1c2a:	6e 7f       	andi	r22, 0xFE	; 254
    1c2c:	6e 5f       	subi	r22, 0xFE	; 254
    1c2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c30:	8f 4f       	sbci	r24, 0xFF	; 255
    1c32:	9f 4f       	sbci	r25, 0xFF	; 255
    1c34:	af 4f       	sbci	r26, 0xFF	; 255
    1c36:	b1 e0       	ldi	r27, 0x01	; 1
    1c38:	3e d0       	rcall	.+124    	; 0x1cb6 <__ultoa_invert+0x9c>
    1c3a:	b4 e0       	ldi	r27, 0x04	; 4
    1c3c:	3c d0       	rcall	.+120    	; 0x1cb6 <__ultoa_invert+0x9c>
    1c3e:	67 0f       	add	r22, r23
    1c40:	78 1f       	adc	r23, r24
    1c42:	89 1f       	adc	r24, r25
    1c44:	9a 1f       	adc	r25, r26
    1c46:	a1 1d       	adc	r26, r1
    1c48:	68 0f       	add	r22, r24
    1c4a:	79 1f       	adc	r23, r25
    1c4c:	8a 1f       	adc	r24, r26
    1c4e:	91 1d       	adc	r25, r1
    1c50:	a1 1d       	adc	r26, r1
    1c52:	6a 0f       	add	r22, r26
    1c54:	71 1d       	adc	r23, r1
    1c56:	81 1d       	adc	r24, r1
    1c58:	91 1d       	adc	r25, r1
    1c5a:	a1 1d       	adc	r26, r1
    1c5c:	20 d0       	rcall	.+64     	; 0x1c9e <__ultoa_invert+0x84>
    1c5e:	09 f4       	brne	.+2      	; 0x1c62 <__ultoa_invert+0x48>
    1c60:	68 94       	set
    1c62:	3f 91       	pop	r19
    1c64:	2a e0       	ldi	r18, 0x0A	; 10
    1c66:	26 9f       	mul	r18, r22
    1c68:	11 24       	eor	r1, r1
    1c6a:	30 19       	sub	r19, r0
    1c6c:	30 5d       	subi	r19, 0xD0	; 208
    1c6e:	31 93       	st	Z+, r19
    1c70:	de f6       	brtc	.-74     	; 0x1c28 <__ultoa_invert+0xe>
    1c72:	cf 01       	movw	r24, r30
    1c74:	08 95       	ret
    1c76:	46 2f       	mov	r20, r22
    1c78:	47 70       	andi	r20, 0x07	; 7
    1c7a:	40 5d       	subi	r20, 0xD0	; 208
    1c7c:	41 93       	st	Z+, r20
    1c7e:	b3 e0       	ldi	r27, 0x03	; 3
    1c80:	0f d0       	rcall	.+30     	; 0x1ca0 <__ultoa_invert+0x86>
    1c82:	c9 f7       	brne	.-14     	; 0x1c76 <__ultoa_invert+0x5c>
    1c84:	f6 cf       	rjmp	.-20     	; 0x1c72 <__ultoa_invert+0x58>
    1c86:	46 2f       	mov	r20, r22
    1c88:	4f 70       	andi	r20, 0x0F	; 15
    1c8a:	40 5d       	subi	r20, 0xD0	; 208
    1c8c:	4a 33       	cpi	r20, 0x3A	; 58
    1c8e:	18 f0       	brcs	.+6      	; 0x1c96 <__ultoa_invert+0x7c>
    1c90:	49 5d       	subi	r20, 0xD9	; 217
    1c92:	31 fd       	sbrc	r19, 1
    1c94:	40 52       	subi	r20, 0x20	; 32
    1c96:	41 93       	st	Z+, r20
    1c98:	02 d0       	rcall	.+4      	; 0x1c9e <__ultoa_invert+0x84>
    1c9a:	a9 f7       	brne	.-22     	; 0x1c86 <__ultoa_invert+0x6c>
    1c9c:	ea cf       	rjmp	.-44     	; 0x1c72 <__ultoa_invert+0x58>
    1c9e:	b4 e0       	ldi	r27, 0x04	; 4
    1ca0:	a6 95       	lsr	r26
    1ca2:	97 95       	ror	r25
    1ca4:	87 95       	ror	r24
    1ca6:	77 95       	ror	r23
    1ca8:	67 95       	ror	r22
    1caa:	ba 95       	dec	r27
    1cac:	c9 f7       	brne	.-14     	; 0x1ca0 <__ultoa_invert+0x86>
    1cae:	00 97       	sbiw	r24, 0x00	; 0
    1cb0:	61 05       	cpc	r22, r1
    1cb2:	71 05       	cpc	r23, r1
    1cb4:	08 95       	ret
    1cb6:	9b 01       	movw	r18, r22
    1cb8:	ac 01       	movw	r20, r24
    1cba:	0a 2e       	mov	r0, r26
    1cbc:	06 94       	lsr	r0
    1cbe:	57 95       	ror	r21
    1cc0:	47 95       	ror	r20
    1cc2:	37 95       	ror	r19
    1cc4:	27 95       	ror	r18
    1cc6:	ba 95       	dec	r27
    1cc8:	c9 f7       	brne	.-14     	; 0x1cbc <__ultoa_invert+0xa2>
    1cca:	62 0f       	add	r22, r18
    1ccc:	73 1f       	adc	r23, r19
    1cce:	84 1f       	adc	r24, r20
    1cd0:	95 1f       	adc	r25, r21
    1cd2:	a0 1d       	adc	r26, r0
    1cd4:	08 95       	ret

00001cd6 <__divmodsi4>:
    1cd6:	05 2e       	mov	r0, r21
    1cd8:	97 fb       	bst	r25, 7
    1cda:	1e f4       	brtc	.+6      	; 0x1ce2 <__divmodsi4+0xc>
    1cdc:	00 94       	com	r0
    1cde:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <__negsi2>
    1ce2:	57 fd       	sbrc	r21, 7
    1ce4:	07 d0       	rcall	.+14     	; 0x1cf4 <__divmodsi4_neg2>
    1ce6:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <__udivmodsi4>
    1cea:	07 fc       	sbrc	r0, 7
    1cec:	03 d0       	rcall	.+6      	; 0x1cf4 <__divmodsi4_neg2>
    1cee:	4e f4       	brtc	.+18     	; 0x1d02 <__divmodsi4_exit>
    1cf0:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__negsi2>

00001cf4 <__divmodsi4_neg2>:
    1cf4:	50 95       	com	r21
    1cf6:	40 95       	com	r20
    1cf8:	30 95       	com	r19
    1cfa:	21 95       	neg	r18
    1cfc:	3f 4f       	sbci	r19, 0xFF	; 255
    1cfe:	4f 4f       	sbci	r20, 0xFF	; 255
    1d00:	5f 4f       	sbci	r21, 0xFF	; 255

00001d02 <__divmodsi4_exit>:
    1d02:	08 95       	ret

00001d04 <__negsi2>:
    1d04:	90 95       	com	r25
    1d06:	80 95       	com	r24
    1d08:	70 95       	com	r23
    1d0a:	61 95       	neg	r22
    1d0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0e:	8f 4f       	sbci	r24, 0xFF	; 255
    1d10:	9f 4f       	sbci	r25, 0xFF	; 255
    1d12:	08 95       	ret

00001d14 <__muluhisi3>:
    1d14:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__umulhisi3>
    1d18:	a5 9f       	mul	r26, r21
    1d1a:	90 0d       	add	r25, r0
    1d1c:	b4 9f       	mul	r27, r20
    1d1e:	90 0d       	add	r25, r0
    1d20:	a4 9f       	mul	r26, r20
    1d22:	80 0d       	add	r24, r0
    1d24:	91 1d       	adc	r25, r1
    1d26:	11 24       	eor	r1, r1
    1d28:	08 95       	ret

00001d2a <__mulshisi3>:
    1d2a:	b7 ff       	sbrs	r27, 7
    1d2c:	0c 94 8a 0e 	jmp	0x1d14	; 0x1d14 <__muluhisi3>

00001d30 <__mulohisi3>:
    1d30:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <__muluhisi3>
    1d34:	82 1b       	sub	r24, r18
    1d36:	93 0b       	sbc	r25, r19
    1d38:	08 95       	ret

00001d3a <__prologue_saves__>:
    1d3a:	2f 92       	push	r2
    1d3c:	3f 92       	push	r3
    1d3e:	4f 92       	push	r4
    1d40:	5f 92       	push	r5
    1d42:	6f 92       	push	r6
    1d44:	7f 92       	push	r7
    1d46:	8f 92       	push	r8
    1d48:	9f 92       	push	r9
    1d4a:	af 92       	push	r10
    1d4c:	bf 92       	push	r11
    1d4e:	cf 92       	push	r12
    1d50:	df 92       	push	r13
    1d52:	ef 92       	push	r14
    1d54:	ff 92       	push	r15
    1d56:	0f 93       	push	r16
    1d58:	1f 93       	push	r17
    1d5a:	cf 93       	push	r28
    1d5c:	df 93       	push	r29
    1d5e:	cd b7       	in	r28, 0x3d	; 61
    1d60:	de b7       	in	r29, 0x3e	; 62
    1d62:	ca 1b       	sub	r28, r26
    1d64:	db 0b       	sbc	r29, r27
    1d66:	0f b6       	in	r0, 0x3f	; 63
    1d68:	f8 94       	cli
    1d6a:	de bf       	out	0x3e, r29	; 62
    1d6c:	0f be       	out	0x3f, r0	; 63
    1d6e:	cd bf       	out	0x3d, r28	; 61
    1d70:	09 94       	ijmp

00001d72 <__epilogue_restores__>:
    1d72:	2a 88       	ldd	r2, Y+18	; 0x12
    1d74:	39 88       	ldd	r3, Y+17	; 0x11
    1d76:	48 88       	ldd	r4, Y+16	; 0x10
    1d78:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d7a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d7c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d7e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d80:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d82:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d84:	b9 84       	ldd	r11, Y+9	; 0x09
    1d86:	c8 84       	ldd	r12, Y+8	; 0x08
    1d88:	df 80       	ldd	r13, Y+7	; 0x07
    1d8a:	ee 80       	ldd	r14, Y+6	; 0x06
    1d8c:	fd 80       	ldd	r15, Y+5	; 0x05
    1d8e:	0c 81       	ldd	r16, Y+4	; 0x04
    1d90:	1b 81       	ldd	r17, Y+3	; 0x03
    1d92:	aa 81       	ldd	r26, Y+2	; 0x02
    1d94:	b9 81       	ldd	r27, Y+1	; 0x01
    1d96:	ce 0f       	add	r28, r30
    1d98:	d1 1d       	adc	r29, r1
    1d9a:	0f b6       	in	r0, 0x3f	; 63
    1d9c:	f8 94       	cli
    1d9e:	de bf       	out	0x3e, r29	; 62
    1da0:	0f be       	out	0x3f, r0	; 63
    1da2:	cd bf       	out	0x3d, r28	; 61
    1da4:	ed 01       	movw	r28, r26
    1da6:	08 95       	ret

00001da8 <__udivmodsi4>:
    1da8:	a1 e2       	ldi	r26, 0x21	; 33
    1daa:	1a 2e       	mov	r1, r26
    1dac:	aa 1b       	sub	r26, r26
    1dae:	bb 1b       	sub	r27, r27
    1db0:	fd 01       	movw	r30, r26
    1db2:	0d c0       	rjmp	.+26     	; 0x1dce <__udivmodsi4_ep>

00001db4 <__udivmodsi4_loop>:
    1db4:	aa 1f       	adc	r26, r26
    1db6:	bb 1f       	adc	r27, r27
    1db8:	ee 1f       	adc	r30, r30
    1dba:	ff 1f       	adc	r31, r31
    1dbc:	a2 17       	cp	r26, r18
    1dbe:	b3 07       	cpc	r27, r19
    1dc0:	e4 07       	cpc	r30, r20
    1dc2:	f5 07       	cpc	r31, r21
    1dc4:	20 f0       	brcs	.+8      	; 0x1dce <__udivmodsi4_ep>
    1dc6:	a2 1b       	sub	r26, r18
    1dc8:	b3 0b       	sbc	r27, r19
    1dca:	e4 0b       	sbc	r30, r20
    1dcc:	f5 0b       	sbc	r31, r21

00001dce <__udivmodsi4_ep>:
    1dce:	66 1f       	adc	r22, r22
    1dd0:	77 1f       	adc	r23, r23
    1dd2:	88 1f       	adc	r24, r24
    1dd4:	99 1f       	adc	r25, r25
    1dd6:	1a 94       	dec	r1
    1dd8:	69 f7       	brne	.-38     	; 0x1db4 <__udivmodsi4_loop>
    1dda:	60 95       	com	r22
    1ddc:	70 95       	com	r23
    1dde:	80 95       	com	r24
    1de0:	90 95       	com	r25
    1de2:	9b 01       	movw	r18, r22
    1de4:	ac 01       	movw	r20, r24
    1de6:	bd 01       	movw	r22, r26
    1de8:	cf 01       	movw	r24, r30
    1dea:	08 95       	ret

00001dec <__umulhisi3>:
    1dec:	a2 9f       	mul	r26, r18
    1dee:	b0 01       	movw	r22, r0
    1df0:	b3 9f       	mul	r27, r19
    1df2:	c0 01       	movw	r24, r0
    1df4:	a3 9f       	mul	r26, r19
    1df6:	70 0d       	add	r23, r0
    1df8:	81 1d       	adc	r24, r1
    1dfa:	11 24       	eor	r1, r1
    1dfc:	91 1d       	adc	r25, r1
    1dfe:	b2 9f       	mul	r27, r18
    1e00:	70 0d       	add	r23, r0
    1e02:	81 1d       	adc	r24, r1
    1e04:	11 24       	eor	r1, r1
    1e06:	91 1d       	adc	r25, r1
    1e08:	08 95       	ret

00001e0a <_exit>:
    1e0a:	f8 94       	cli

00001e0c <__stop_program>:
    1e0c:	ff cf       	rjmp	.-2      	; 0x1e0c <__stop_program>
